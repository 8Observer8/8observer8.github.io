import{mat4}from"gl-matrix";let gl=null;function initWebGLContext(canvasName){const canvas=document.getElementById(canvasName);if(canvas===null){console.log(`Failed to get a canvas element with the name "${canvasName}"`);return false}gl=canvas.getContext("webgl2",{alpha:false,premultipliedAlpha:false});return true}async function createShaderProgram(path,vertShaderFileName,fragShaderFileName){let response=await fetch(path+vertShaderFileName);const vertShaderSource=await response.text();response=await fetch(path+fragShaderFileName);const fragShaderSource=await response.text();const vShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShader,vertShaderSource);gl.compileShader(vShader);let ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("vert: "+gl.getShaderInfoLog(vShader));return null}const fShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShader,fragShaderSource);gl.compileShader(fShader);ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("frag: "+gl.getShaderInfoLog(fShader));return null}const program=gl.createProgram();gl.attachShader(program,vShader);gl.attachShader(program,fShader);gl.linkProgram(program);ok=gl.getProgramParameter(program,gl.LINK_STATUS);if(!ok){console.log("link: "+gl.getProgramInfoLog(program));return null}gl.useProgram(program);return program}function loadLinearTexture(url){return new Promise(resolve=>{const image=new Image;image.onload=()=>{const texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,image);const textureInfo={texture:texture,w:image.width,h:image.height};resolve(textureInfo)};image.src=url})}function loadNearestTexture(url){return new Promise(resolve=>{const image=new Image;image.onload=()=>{const texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,image);const textureInfo={texture:texture,w:image.width,h:image.height};resolve(textureInfo)};image.src=url})}class Keyboard{constructor(){this.keys={};document.addEventListener("keydown",event=>{this.onKeyChange(event,true)},true);document.addEventListener("keyup",event=>{this.onKeyChange(event,false)},false)}pressed(key){return this.keys[key]}onKeyChange(event,pressed){this.keys[event.code]=pressed}}class Sprite{constructor(vao,uMvpMatrixLocation,textureInfo,ncolumns=1){this.vao=vao;this.uMvpMatrixLocation=uMvpMatrixLocation;this.textureInfo=textureInfo;this.drawingIndex=0;this.x=0;this.y=0;this.w=textureInfo.w;this.h=textureInfo.h;this.ncolumns=ncolumns;this.modelMatrix=mat4.create();this.mvpMatrix=mat4.create()}setPosition(x,y){this.x=x;this.y=y}setSize(w,h){this.w=w;this.h=h}setTextureRect(tx,ty,w,h){this.drawingIndex=ty/h*this.ncolumns+tx/w;this.drawingIndex*=4}draw(projViewMatrix){gl.bindTexture(gl.TEXTURE_2D,this.textureInfo.texture);gl.bindVertexArray(this.vao);mat4.fromTranslation(this.modelMatrix,[this.x,this.y,0]);mat4.scale(this.modelMatrix,this.modelMatrix,[this.w,this.h,1]);mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);gl.drawArrays(gl.TRIANGLE_STRIP,this.drawingIndex,4);gl.bindVertexArray(null);gl.bindTexture(gl.TEXTURE_2D,null)}}const keyboard=new Keyboard;const GameState={PLAYING:0,GAME_OVER:1,WIN:2};let currentGameState=GameState.PLAYING;const N=30;const M=20;const ts=25;const startNum=6;let num=startNum;const winNum=startNum+3;const startDir=2;let dir=startDir;const currentScoreElem=document.getElementById("currentScore");const scoreGoalElem=document.getElementById("scoreGoal");currentScoreElem.innerText=startNum;scoreGoalElem.innerText=winNum;const s=[];const reservedSize=500;for(let i=0;i<reservedSize;i++){s.push({x:0,y:0})}const f={x:10,y:10};const projMatrix=mat4.create();mat4.ortho(projMatrix,0,ts*N,ts*M,0,1,-1);const viewMatrix=mat4.create();mat4.lookAt(viewMatrix,[0,0,1],[0,0,0],[0,1,0]);const projViewMatrix=mat4.create();mat4.mul(projViewMatrix,projMatrix,viewMatrix);mat4.create();mat4.create();let timer=0,delay=.2;let currentTime,deltaTime,lastTime;let uMvpMatrixLocation,tiles,apple,snake,gameOver,win;function getRandomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min}function draw(){gl.clear(gl.COLOR_BUFFER_BIT);for(let i=0;i<N;i++){for(let j=0;j<M;j++){tiles.setPosition(i*ts,j*ts);tiles.draw(projViewMatrix)}}for(let i=0;i<num;i++){if(i!=0){snake.setTextureRect(0,0,ts,ts)}else{snake.setTextureRect(dir*ts,ts,ts,ts)}if(currentGameState===GameState.GAME_OVER&&i==1){snake.setTextureRect(dir*ts,ts*2,ts,ts)}snake.setPosition(s[i].x*ts,s[i].y*ts);snake.draw(projViewMatrix)}apple.setPosition(f.x*ts,f.y*ts);apple.draw(projViewMatrix);if(currentGameState===GameState.GAME_OVER){gameOver.draw(projViewMatrix)}if(currentGameState===GameState.WIN){win.draw(projViewMatrix)}}function tick(){for(let i=num;i>0;i--){s[i].x=s[i-1].x;s[i].y=s[i-1].y}if(dir==0)s[0].y+=1;if(dir==1)s[0].x-=1;if(dir==2)s[0].x+=1;if(dir==3)s[0].y-=1;if(s[0].x>N-1)s[0].x=0;if(s[0].x<0)s[0].x=N-1;if(s[0].y>M-1)s[0].y=0;if(s[0].y<0)s[0].y=M-1;if(s[0].x==f.x&&s[0].y==f.y){num++;currentScoreElem.innerText=num;f.x=getRandomInt(0,N-1);f.y=getRandomInt(0,M-1)}for(let i=1;i<num;i++){if(s[0].x==s[i].x&&s[0].y==s[i].y){currentGameState=GameState.GAME_OVER}}if(num===winNum)currentGameState=GameState.WIN;draw()}function keyboardHandler(){if(keyboard.pressed("KeyA")||keyboard.pressed("ArrowLeft")&&currentGameState===GameState.PLAYING){dir=1}else if(keyboard.pressed("KeyD")||keyboard.pressed("ArrowRight")&&currentGameState===GameState.PLAYING){dir=2}else if(keyboard.pressed("KeyW")||keyboard.pressed("ArrowUp")&&currentGameState===GameState.PLAYING){dir=3}else if(keyboard.pressed("KeyS")||keyboard.pressed("ArrowDown")&&currentGameState===GameState.PLAYING){dir=0}else if(keyboard.pressed("Enter")&&currentGameState!==GameState.PLAYING){num=startNum;currentScoreElem.innerText=startNum;dir=startDir;currentGameState=GameState.PLAYING;for(let i=0;i<reservedSize;i++){s[i].x=0;s[i].y=0}f.x=getRandomInt(0,N-1);f.y=getRandomInt(0,M-1)}}function animationLoop(){requestAnimationFrame(animationLoop);keyboardHandler();currentTime=Date.now();deltaTime=(currentTime-lastTime)/1e3;lastTime=currentTime;timer+=deltaTime;if(timer>delay&&currentGameState===GameState.PLAYING){timer=0;tick()}}async function init(){if(!initWebGLContext("renderCanvas"))return;gl.clearColor(.2,.2,.2,1);const canvasWidth=600;const canvasHeight=canvasWidth*M/N;gl.canvas.width=canvasWidth;gl.canvas.height=canvasHeight;gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);const program=await createShaderProgram("./assets/shaders/","default.vert","default.frag");const tilesInfo=await loadNearestTexture("./assets/sprites/tiles.png");const appleInfo=await loadNearestTexture("./assets/sprites/apple.png");const gameOverInfo=await loadLinearTexture("./assets/sprites/game_over_try_again.png");const snakeInfo=await loadNearestTexture("./assets/sprites/snake.png");const winInfo=await loadNearestTexture("./assets/sprites/you_have_won.png");const aPositionLocation=gl.getAttribLocation(program,"aPosition");const aTexCoordLocation=gl.getAttribLocation(program,"aTexCoord");const rectVertPositions=[0,0,0,1,1,0,1,1];const rectVertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,rectVertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(rectVertPositions),gl.STATIC_DRAW);const rectTexCoords=[0,0,0,1,1,0,1,1];const rectTexCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,rectTexCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(rectTexCoords),gl.STATIC_DRAW);const amountOfSnakeTiles=12;const snakeVertPositions=[];for(let i=0;i<amountOfSnakeTiles;i++){snakeVertPositions.push(0,0);snakeVertPositions.push(0,1);snakeVertPositions.push(1,0);snakeVertPositions.push(1,1)}const snakeVertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,snakeVertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(snakeVertPositions),gl.STATIC_DRAW);const snakeTexCoords=[];for(let r=0;r<3;r++){for(let c=0;c<4;c++){snakeTexCoords.push(c*ts/snakeInfo.w,r*ts/snakeInfo.h);snakeTexCoords.push(c*ts/snakeInfo.w,(r+1)*ts/snakeInfo.h);snakeTexCoords.push((c+1)*ts/snakeInfo.w,r*ts/snakeInfo.h);snakeTexCoords.push((c+1)*ts/snakeInfo.w,(r+1)*ts/snakeInfo.h)}}const snakeTexCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,snakeTexCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(snakeTexCoords),gl.STATIC_DRAW);const rectVAO=gl.createVertexArray();gl.bindVertexArray(rectVAO);gl.bindBuffer(gl.ARRAY_BUFFER,rectVertPosBuffer);gl.vertexAttribPointer(aPositionLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(aPositionLocation);gl.bindBuffer(gl.ARRAY_BUFFER,rectTexCoordBuffer);gl.vertexAttribPointer(aTexCoordLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(aTexCoordLocation);gl.bindVertexArray(null);const snakeVAO=gl.createVertexArray();gl.bindVertexArray(snakeVAO);gl.bindBuffer(gl.ARRAY_BUFFER,snakeVertPosBuffer);gl.vertexAttribPointer(aPositionLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(aPositionLocation);gl.bindBuffer(gl.ARRAY_BUFFER,snakeTexCoordBuffer);gl.vertexAttribPointer(aTexCoordLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(aTexCoordLocation);gl.bindVertexArray(null);uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");tiles=new Sprite(rectVAO,uMvpMatrixLocation,tilesInfo);tiles.setSize(ts,ts);snake=new Sprite(snakeVAO,uMvpMatrixLocation,snakeInfo,4);snake.setSize(ts,ts);apple=new Sprite(rectVAO,uMvpMatrixLocation,appleInfo);apple.setPosition(f.x*ts,f.y*ts);apple.setSize(ts,ts);gameOver=new Sprite(rectVAO,uMvpMatrixLocation,gameOverInfo);gameOver.setPosition(0,175);win=new Sprite(rectVAO,uMvpMatrixLocation,winInfo);win.setPosition(0,175);lastTime=Date.now();animationLoop()}init();