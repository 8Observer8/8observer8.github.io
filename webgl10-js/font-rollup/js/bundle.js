import{mat4,vec3}from"gl-matrix";let gl=null;function initWebGLContext(canvasName){const canvas=document.getElementById(canvasName);if(canvas===null){console.log(`Failed to get a canvas element with the name "${canvasName}"`);return false}gl=canvas.getContext("webgl",{alpha:false,premultipliedAlpha:false});return true}async function createShaderProgram(path,vertShaderFileName,fragShaderFileName){let response=await fetch(path+vertShaderFileName);const vertShaderSource=await response.text();response=await fetch(path+fragShaderFileName);const fragShaderSource=await response.text();const vShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShader,vertShaderSource);gl.compileShader(vShader);let ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("vert: "+gl.getShaderInfoLog(vShader));return null}const fShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShader,fragShaderSource);gl.compileShader(fShader);ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("frag: "+gl.getShaderInfoLog(fShader));return null}const program=gl.createProgram();gl.attachShader(program,vShader);gl.attachShader(program,fShader);gl.linkProgram(program);ok=gl.getProgramParameter(program,gl.LINK_STATUS);if(!ok){console.log("link: "+gl.getProgramInfoLog(program));return null}gl.useProgram(program);return program}function loadImage(url){return new Promise(resolve=>{const image=new Image;image.onload=()=>{resolve(image)};image.src=url})}class CharData{constructor(){this.id=0;this.x=0;this.y=0;this.w=0;this.h=0;this.xOffset=0;this.yOffset=0;this.xAdvance=0}}class Font{constructor(program,fontContent,fontImage){this.program=program;this.charMap={};this.charIndexes={};this.charMap=this.parse(fontContent);gl.useProgram(program);this.uMvpMatrixLocation=gl.getUniformLocation(this.program,"uMvpMatrix");this.uColorLocation=gl.getUniformLocation(this.program,"uColor");const v=[];for(let i=0;i<Object.keys(this.charMap).length;i++){v.push(0,0);v.push(0,1);v.push(1,0);v.push(1,1)}this.vertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.vertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(v),gl.STATIC_DRAW);this.aPositionLocation=gl.getAttribLocation(program,"aPosition");let drawIndex=0;const texCoords=[];for(const i in this.charMap){const cd=this.charMap[i];this.charIndexes[i]=drawIndex;drawIndex+=4;const x=cd.x/512;const y=cd.y/512;const w=cd.w/512;const h=cd.h/512;texCoords.push(x,y);texCoords.push(x,y+h);texCoords.push(x+w,y);texCoords.push(x+w,y+h)}this.texCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.texCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texCoords),gl.STATIC_DRAW);this.aTexCoordLocation=gl.getAttribLocation(program,"aTexCoord");this.texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,this.texture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,fontImage);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE)}parse(fileContent){const charMap={};const lines=fileContent.split("\n");const count=this.getValue(lines[3].split(" ")[1]);for(let i=4;i<count+4;i++){if(lines[i]==="")break;const typesAndValues=lines[i].split(/(\s+)/).filter(el=>{return el.trim().length>0});const charData=new CharData;charData.id=this.getValue(typesAndValues[1]);charData.x=this.getValue(typesAndValues[2]);charData.y=this.getValue(typesAndValues[3]);charData.w=this.getValue(typesAndValues[4]);charData.h=this.getValue(typesAndValues[5]);charData.xOffset=this.getValue(typesAndValues[6]);charData.yOffset=this.getValue(typesAndValues[7]);charData.xAdvance=this.getValue(typesAndValues[8]);charMap[charData.id]=charData}return charMap}getValue(s){const value=s.substr(s.indexOf("=")+1);return parseInt(value)}bind(){gl.useProgram(this.program);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertPosBuffer);gl.vertexAttribPointer(this.aPositionLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aPositionLocation);gl.bindBuffer(gl.ARRAY_BUFFER,this.texCoordBuffer);gl.vertexAttribPointer(this.aTexCoordLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aTexCoordLocation);gl.bindTexture(gl.TEXTURE_2D,this.texture)}setMvpMatrix(matrix){gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,matrix)}}class Text{constructor(font,text,position,scale,color){this.font=font;this.text=text;this.mvpMatrix=mat4.create();this.modelMatrix=mat4.create();this.position=position;this.scale=scale;this.setColor(color)}draw(projViewMatrix){this.font.bind();let cursorX=0;for(let i=0;i<this.text.length;i++){const cd=this.font.charMap[this.text[i].charCodeAt(0)];mat4.identity(this.modelMatrix);mat4.fromTranslation(this.modelMatrix,[this.position[0]+cursorX+cd.xOffset*this.scale[0],this.position[1]+cd.yOffset*this.scale[1],this.position[2]]);mat4.scale(this.modelMatrix,this.modelMatrix,[cd.w*this.scale[0],cd.h*this.scale[1],1]);mat4.identity(this.mvpMatrix);mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);this.font.setMvpMatrix(this.mvpMatrix);gl.drawArrays(gl.TRIANGLE_STRIP,this.font.charIndexes[this.text[i].charCodeAt(0)],4);cursorX+=cd.xAdvance*this.scale[0]}}setColor(color){gl.useProgram(this.font.program);gl.uniform3fv(this.font.uColorLocation,color)}}async function init(){if(!initWebGLContext("renderCanvas"))return;gl.clearColor(.8,.8,.95,1);gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);const program=await createShaderProgram("assets/shaders/","color.vert","color.frag");const vertPositions=[0,0,0,1,1,0,1,1];const vertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertPositions),gl.STATIC_DRAW);const aPositionLocation=gl.getAttribLocation(program,"aPosition");gl.vertexAttribPointer(aPositionLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(aPositionLocation);const projMatrix=mat4.create();mat4.ortho(projMatrix,0,100,100,0,-10,10);const viewMatrix=mat4.create();mat4.lookAt(viewMatrix,[0,0,10],[0,0,0],[0,1,0]);const projViewMatrix=mat4.create();mat4.mul(projViewMatrix,projMatrix,viewMatrix);const modelMatrix=mat4.create();const mvpMatrix=mat4.create();const uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");const uColorLocation=gl.getUniformLocation(program,"uColor");const textureProgram=await createShaderProgram("assets/shaders/","texture.vert","texture.frag");const fontPath="assets/fonts/comic71.fnt";const response=await fetch(fontPath);const fontContent=await response.text();const fontImage=await loadImage("assets/fonts/comic71.png");const font=new Font(textureProgram,fontContent,fontImage);const textPosition=vec3.fromValues(20,0,0);const textScale=vec3.fromValues(.2,.2,1);const textColor=vec3.fromValues(.24,.58,.08);const helloText=new Text(font,"Hello!",textPosition,textScale,textColor);gl.clear(gl.COLOR_BUFFER_BIT);helloText.draw(projViewMatrix);gl.useProgram(program);mat4.fromTranslation(modelMatrix,[20,20,0]);mat4.scale(modelMatrix,modelMatrix,[50,50,1]);mat4.mul(mvpMatrix,projViewMatrix,modelMatrix);gl.uniformMatrix4fv(uMvpMatrixLocation,false,mvpMatrix);gl.uniform3fv(uColorLocation,[.5,0,0]);gl.drawArrays(gl.TRIANGLE_STRIP,0,4)}init();