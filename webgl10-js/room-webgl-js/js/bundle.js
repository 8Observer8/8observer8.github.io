import"oimo-physics";import{mat4,vec3,quat,vec4}from"gl-matrix";let gl=null;function initWebGLContext(canvasName){const canvas=document.getElementById(canvasName);if(canvas===null){console.log(`Failed to get a canvas element with the name "${canvasName}"`);return false}gl=canvas.getContext("webgl",{alpha:false,premultipliedAlpha:false});return true}async function createProgram(path,vertShaderFileName,fragShaderFileName){let response=await fetch(path+vertShaderFileName);const vertShaderSource=await response.text();response=await fetch(path+fragShaderFileName);const fragShaderSource=await response.text();const vShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShader,vertShaderSource);gl.compileShader(vShader);let ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log(`${fragShaderFileName}: ${gl.getShaderInfoLog(vShader)}`);return null}const fShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShader,fragShaderSource);gl.compileShader(fShader);ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log(`${vertShaderFileName}: ${gl.getShaderInfoLog(fShader)}`);return null}const program=gl.createProgram();gl.attachShader(program,vShader);gl.attachShader(program,fShader);gl.linkProgram(program);ok=gl.getProgramParameter(program,gl.LINK_STATUS);if(!ok){console.log(`Link error with shaders ${vertShaderFileName}`+` and ${fragShaderFileName}`);console.log(gl.getProgramInfoLog(program));return null}gl.useProgram(program);return program}class AnimationData{constructor(lengthSeconds,keyFrames){this.lengthSeconds=lengthSeconds;this.keyFrames=keyFrames}}class JointData{constructor(index,nameId,localBindTransform){this.index=index;this.nameId=nameId;this.localBindTransform=localBindTransform;this.children=[]}addChild(child){this.children.push(child)}}class JointTransformData{constructor(jointNameId,localBindTransform){this.jointNameId=jointNameId;this.localBindTransform=localBindTransform}}class KeyFrameData{constructor(time){this.time=time;this.jointTransforms=[]}addJointTransform(transform){this.jointTransforms.push(transform)}}async function initVertexBuffers(path,modelNames){const vertexBuffers={};for(let i=0;i<modelNames.length;i++){const contentResponse=await fetch(path+modelNames[i]+".dae");const content=await contentResponse.text();const parser=new DOMParser;const xmlDoc=parser.parseFromString(content,"text/xml");const expForIndexes="//*[local-name() = 'p']/text()";let nodes=xmlDoc.evaluate(expForIndexes,xmlDoc,null,XPathResult.ANY_TYPE,null);let result=nodes.iterateNext();if(!result){let animationData,animationTimes,headJoint,keyFrames;let jointCount=0;const boneNames=[];const initKeyFrames=times=>{const frames=[];for(let i=0;i<times.length;i++){frames.push(new KeyFrameData(times[i]))}return frames};const getDataId=jointDataElement=>{let data;for(let i=0;i<jointDataElement.children.length;i++){if(jointDataElement.children[i].tagName==="sampler"){const samplerElement=jointDataElement.children[i];for(let i=0;i<samplerElement.children.length;i++){const inputElement=samplerElement.children[i];if(inputElement.getAttribute("semantic")==="OUTPUT"){data=inputElement.getAttribute("source").substr(1)}}}}return data};const getJointName=jointDataElement=>{let data;for(let i=0;i<jointDataElement.children.length;i++){if(jointDataElement.children[i].tagName==="channel"){const channelElement=jointDataElement.children[i];data=channelElement.getAttribute("target")}}return data.split("/")[0]};const processTransforms=(jointName,data,keyFrames,root)=>{for(let i=0;i<keyFrames.length;i++){const transform=mat4.create();for(let j=0;j<16;j++){transform[j]=data[i*16+j]}mat4.transpose(transform,transform);if(root){const correction=mat4.create();mat4.fromRotation(correction,-Math.PI/2,[1,0,0]);mat4.mul(transform,correction,transform)}keyFrames[i].addJointTransform(new JointTransformData(jointName,transform))}};const loadJointTransforms=(frames,jointDataElement,rootNodeId)=>{const jointNameId=getJointName(jointDataElement);boneNames.push(jointNameId);const dataId=getDataId(jointDataElement);for(let i=0;i<jointDataElement.children.length;i++){if(jointDataElement.children[i].tagName==="source"){const sourceElement=jointDataElement.children[i];const id=sourceElement.getAttribute("id");if(id===dataId){for(let j=0;j<sourceElement.children.length;j++){if(sourceElement.children[j].tagName==="float_array"){const floatArrayElement=sourceElement.children[j];const data=floatArrayElement.textContent.trim().split(" ").map(value=>{return parseFloat(value)});processTransforms(jointNameId,data,frames,jointNameId===rootNodeId)}}}}}};const floatArrayElements=xmlDoc.getElementsByTagName("float_array");for(let i=0;i<floatArrayElements.length;i++){const id=floatArrayElements[i].getAttribute("id");if(id.match("_pose_matrix-input-array")){animationTimes=floatArrayElements[i].textContent.trim().split(" ").map(value=>{return parseFloat(value)});break}}const duration=animationTimes[animationTimes.length-1];keyFrames=initKeyFrames(animationTimes);const animationElements=xmlDoc.getElementsByTagName("library_animations")[0].children;for(let i=0;i<animationElements.length;i++){loadJointTransforms(keyFrames,animationElements[i],"part0")}animationData=new AnimationData(duration,keyFrames);const extractMainJointData=(jointElement,isRoot)=>{const nameId=jointElement.getAttribute("name").replace(".","_");const index=boneNames.indexOf(nameId);const correctionMatrix=mat4.create();mat4.fromXRotation(correctionMatrix,-Math.PI/2);let matrix;for(let i=0;i<jointElement.children.length;i++){if(jointElement.children[i].tagName=="matrix"){const matrixElement=jointElement.children[i];const matrixData=matrixElement.textContent.trim().split(" ").map(value=>{return parseFloat(value)});matrix=mat4.fromValues(matrixData[0],matrixData[4],matrixData[8],matrixData[12],matrixData[1],matrixData[5],matrixData[9],matrixData[13],matrixData[2],matrixData[6],matrixData[10],matrixData[14],matrixData[3],matrixData[7],matrixData[11],matrixData[15])}}if(isRoot){mat4.mul(matrix,correctionMatrix,matrix)}jointCount++;return new JointData(index,nameId,matrix)};const loadJointData=(jointElement,isRoot)=>{const joint=extractMainJointData(jointElement,isRoot);for(let i=0;i<jointElement.children.length;i++){if(jointElement.children[i].tagName==="node"){const nodeElement=jointElement.children[i];joint.addChild(loadJointData(nodeElement,false))}}return joint};const sceneChildren=xmlDoc.getElementsByTagName("visual_scene")[0].children;for(let i=0;i<sceneChildren.length;i++){const id=sceneChildren[i].getAttribute("id");if(id.match("Armature")){const armatureElement=sceneChildren[i];for(let j=0;j<armatureElement.children.length;j++){if(armatureElement.children[j].tagName=="node"){const headElement=armatureElement.children[j];headJoint=loadJointData(headElement,true)}}}}const buffers={animationData:animationData,animationTimes:animationTimes,headJoint:headJoint,jointCount:jointCount};vertexBuffers[modelNames[i]]=buffers;continue}const order=result.textContent.trim().split(" ").map(value=>{return parseInt(value)});const partOfPositionsId="mesh-positions-array";const expForPositions=`//*[local-name() = 'float_array'][substring(@id, string-length(@id) -`+`string-length('${partOfPositionsId}') + 1) = '${partOfPositionsId}']`;nodes=xmlDoc.evaluate(expForPositions,xmlDoc,null,XPathResult.ANY_TYPE,null);result=nodes.iterateNext();const positions=result.textContent.trim().split(" ").map(value=>{return parseFloat(value)});const partOfNormalsId="mesh-normals-array";const expForNormals=`//*[local-name() = 'float_array'][substring(@id, string-length(@id) -`+`string-length('${partOfNormalsId}') + 1) = '${partOfNormalsId}']`;nodes=xmlDoc.evaluate(expForNormals,xmlDoc,null,XPathResult.ANY_TYPE,null);result=nodes.iterateNext();const normals=result.textContent.trim().split(" ").map(value=>{return parseFloat(value)});const partOfTexCoordsId="mesh-map-0-array";const expForTexCoords=`//*[local-name() = 'float_array'][substring(@id, string-length(@id) -`+`string-length('${partOfTexCoordsId}') + 1) = '${partOfTexCoordsId}']`;nodes=xmlDoc.evaluate(expForTexCoords,xmlDoc,null,XPathResult.ANY_TYPE,null);result=nodes.iterateNext();const texCoords=result.textContent.trim().split(" ").map(value=>{return parseFloat(value)});const correctionMatrix=mat4.create();mat4.fromXRotation(correctionMatrix,-Math.PI/2);const vertPosResult=[];const normalsResult=[];const texCoordsResult=[];const amountOfTriangles=order.length/9;for(let i=0;i<amountOfTriangles;i++){for(let j=0;j<9;j++){if((i*9+j)%3===0){const vx=positions[order[i*9+j]*3+0];const vy=positions[order[i*9+j]*3+1];const vz=positions[order[i*9+j]*3+2];const oldPos=vec3.fromValues(vx,vy,vz);const newPos=vec3.create();vec3.transformMat4(newPos,oldPos,correctionMatrix);vertPosResult.push(newPos[0]);vertPosResult.push(newPos[1]);vertPosResult.push(newPos[2])}else if((i*9+j)%3===1){const nx=normals[order[i*9+j]*3+0];const ny=normals[order[i*9+j]*3+1];const nz=normals[order[i*9+j]*3+2];const oldNormal=vec3.fromValues(nx,ny,nz);const newNormal=vec3.create();vec3.transformMat4(newNormal,oldNormal,correctionMatrix);normalsResult.push(newNormal[0]);normalsResult.push(newNormal[1]);normalsResult.push(newNormal[2])}else if((i*9+j)%3===2){texCoordsResult.push(texCoords[order[i*9+j]*2+0]);texCoordsResult.push(texCoords[order[i*9+j]*2+1])}}}const vertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertPosResult),gl.STATIC_DRAW);const normalBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,normalBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(normalsResult),gl.STATIC_DRAW);const texCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texCoordsResult),gl.STATIC_DRAW);const buffers={vertPosBuffer:vertPosBuffer,normalBuffer:normalBuffer,texCoordBuffer:texCoordBuffer,amountOfVertices:vertPosResult.length/3};vertexBuffers[modelNames[i]]=buffers}return vertexBuffers}function loadTexture$1(url){return new Promise(resolve=>{const image=new Image;image.onload=()=>{resolve(image)};image.src=url})}function loadTexture(url){return new Promise(resolve=>{const image=new Image;image.onload=()=>{const texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image);resolve(texture)};image.src=url})}class Animation{constructor(lengthInSeconds,frames){this.length=lengthInSeconds;this.keyFrames=frames}getLength(){return this._length}getKeyFrames(){return this.keyFrames}}class Joint{constructor(index,name,localBindTransform){this.index=index;this.name=name;this.localBindTransform=localBindTransform;this.animatedTransform=mat4.create();this.inverseBindTransform=mat4.create();this.children=[]}addChild(child){this.children.push(child)}getAnimatedTransform(){return this.animatedTransform}setAnimatedTransform(animatedTransform){this.animatedTransform=animatedTransform}getInverseBindTransform(){return this.inverseBindTransform}calcInverseBindTransform(parentBindTransform){const bindTransform=mat4.create();mat4.mul(bindTransform,parentBindTransform,this.localBindTransform);mat4.invert(this.inverseBindTransform,bindTransform);this.children.forEach(child=>{child.calcInverseBindTransform(bindTransform)})}}class JointTransform{constructor(position,rotation){this.position=position;this.rotation=rotation}getLocalTransform(){const translationMatrix=mat4.create();mat4.fromTranslation(translationMatrix,this.position);const rotationMatrix=mat4.create();mat4.fromQuat(rotationMatrix,this.rotation);const resultMatrix=mat4.create();mat4.mul(resultMatrix,translationMatrix,rotationMatrix);return resultMatrix}static interpolate(frameA,frameB,progression){const pos=vec3.create();vec3.lerp(pos,frameA.position,frameB.position,progression);const rot=quat.create();quat.slerp(rot,frameA.rotation,frameB.rotation,progression);return new JointTransform(pos,rot)}}class KeyFrame{constructor(timeStamp,pose){this.timeStamp=timeStamp;this.pose=pose}getTimeStamp(){return this.timeStamp}getJointKeyFrames(){return this.pose}}class Animated{constructor(vertexBuffers,parts){this.position=vec3.create();this.rotation=quat.create();this.scale=vec3.fromValues(1,1,1);this.modelMatrix=mat4.create();this.animationTimes=vertexBuffers.animationTimes;this.jointCount=vertexBuffers.jointCount;this.animation=this.createAnimation(vertexBuffers.animationData);this.animationData=vertexBuffers.animationData;this.headJoint=this.createJoints(vertexBuffers.headJoint);this.parts=parts;this.animationName="";this.setAnimation("stop")}setAnimation(animationName){if(this.animationName===animationName){return}if(animationName==="stop"){this.currentStartTime=this.animationTimes[0];this.currentEndTime=this.animationTimes[0]}else if(animationName==="idle"){this.currentStartTime=this.animationTimes[0];this.currentEndTime=this.animationTimes[44]}else if(animationName==="walk"){this.currentStartTime=this.animationTimes[45];this.currentEndTime=this.animationTimes[72]}this.currentAnimTime=this.currentStartTime;this.animationLength=this.currentEndTime;this.animationName=animationName}createAnimation(animationData){const frames=[];for(let i=0;i<animationData.keyFrames.length;i++){frames.push(this.createKeyFrame(animationData.keyFrames[i]))}return new Animation(animationData.lengthSeconds,frames)}createKeyFrame(data){const map=[];data.jointTransforms.forEach(jointData=>{const jointTransform=this.createTransform(jointData);map[jointData.jointNameId]=jointTransform});return new KeyFrame(data.time,map)}createTransform(data){const mat=data.localBindTransform;const translation=vec3.create();mat4.getTranslation(translation,mat);const rotation=quat.create();mat4.getRotation(rotation,mat);return new JointTransform(translation,rotation)}createJoints(data){const joint=new Joint(data.index,data.nameId,data.localBindTransform);data.children.forEach(child=>{joint.addChild(this.createJoints(child))});return joint}drawParts(projViewMatrix,currentPose,joint,parentTransform){const currentLocalTransform=currentPose[joint.name];const currentTransform=mat4.create();mat4.mul(currentTransform,parentTransform,currentLocalTransform);if(this.parts[joint.name]){this.parts[joint.name].modelMatrix=currentTransform;this.parts[joint.name].draw(projViewMatrix)}joint.children.forEach(childJoint=>{this.drawParts(projViewMatrix,currentPose,childJoint,currentTransform)})}draw(projViewMatrix,deltaTime){this.increaseAnimationTime(deltaTime);const currentPose=this.calculateCurrentAnimationPose();const offset=vec3.fromValues(0,-1.05,0);vec3.add(this.position,this.position,offset);quat.rotateY(this.rotation,this.rotation,0);mat4.fromRotationTranslationScale(this.modelMatrix,this.rotation,this.position,this.scale);this.drawParts(projViewMatrix,currentPose,this.headJoint,this.modelMatrix)}increaseAnimationTime(deltaTime){this.currentAnimTime+=deltaTime;if(this.currentAnimTime>this.animationLength){this.currentAnimTime=this.currentStartTime}}calculateCurrentAnimationPose(){const frames=this.getPreviousAndNextFrames();const progression=this.calculateProgression(frames[0],frames[1]);return this.interpolatePoses(frames[0],frames[1],progression)}getPreviousAndNextFrames(){const allFrames=this.animation.getKeyFrames();let previousFrame=allFrames[0];let nextFrame=allFrames[0];for(let i=1;i<allFrames.length;i++){nextFrame=allFrames[i];if(nextFrame.getTimeStamp()>this.currentAnimTime){break}previousFrame=allFrames[i]}const keyFrames=[previousFrame,nextFrame];return keyFrames}calculateProgression(previousFrame,nextFrame){const totalTime=nextFrame.getTimeStamp()-previousFrame.getTimeStamp();const currentTime=this.currentAnimTime-previousFrame.getTimeStamp();return totalTime!==0?currentTime/totalTime:0}interpolatePoses(previousFrame,nextFrame,progression){const currentPose=[];Object.keys(previousFrame.getJointKeyFrames()).forEach(jointName=>{const previousTransform=previousFrame.getJointKeyFrames()[jointName];const nextTransform=nextFrame.getJointKeyFrames()[jointName];const currentTransform=JointTransform.interpolate(previousTransform,nextTransform,progression);currentPose[jointName]=currentTransform.getLocalTransform()});return currentPose}}class CameraRotator{constructor(canvas,drawCallback,viewDistance,rotX,rotY,panX,panY){this.canvas=canvas;this.xLimit=85;this.isPanning=false;this.panX=panX;this.panY=panY;this.prevXForPan=0;this.prevYForPan=0;this.m=mat4.create();this.canvas.oncontextmenu=event=>{event.preventDefault();return false};canvas.addEventListener("mousedown",event=>{if(event.button===0||event.button===1){this.doMouseDown(event)}else if(event.button===2){this.doMousePanDawn(event)}},false);canvas.addEventListener("wheel",event=>{this.doMouseWheel(event)},false);this.rotateX=rotX;this.rotateY=rotY;this.viewDistance=viewDistance;this.drawCallback=drawCallback;this.boundDoMouseDrag=this.doMouseDrag.bind(this);this.boundDoMouseUp=this.doMouseUp.bind(this);this.boundDoMousePanDrag=this.doMousePanDrag.bind(this);this.boundDoMousePanUp=this.doMousePanUp.bind(this)}getViewMatrix(event){const cosX=Math.cos(this.rotateX/180*Math.PI);const sinX=Math.sin(this.rotateX/180*Math.PI);const cosY=Math.cos(this.rotateY/180*Math.PI);const sinY=Math.sin(this.rotateY/180*Math.PI);this.m[0]=cosY,this.m[1]=sinX*sinY,this.m[2]=-cosX*sinY,this.m[3]=0;this.m[4]=0,this.m[5]=cosX,this.m[6]=sinX,this.m[7]=0;this.m[8]=sinY,this.m[9]=-sinX*cosY,this.m[10]=cosX*cosY,this.m[11]=0;this.m[12]=this.panX,this.m[13]=-this.panY,this.m[14]=-this.viewDistance,this.m[15]=1;return this.m}doMouseDown(event){this.isDraging=true;document.addEventListener("mousemove",this.boundDoMouseDrag,false);document.addEventListener("mouseup",this.boundDoMouseUp,false);const r=this.canvas.getBoundingClientRect();this.prevX=event.clientX-r.left;this.prevY=event.clientY-r.top}doMouseDrag(event){if(!this.isDraging){return}const r=this.canvas.getBoundingClientRect();const x=event.clientX-r.left;const y=event.clientY-r.top;const degreesPerPixelX=90/this.canvas.height;const degreesPerPixelY=180/this.canvas.width;let newRotX=this.rotateX+degreesPerPixelX*(y-this.prevY);const newRotY=this.rotateY+degreesPerPixelY*(x-this.prevX);newRotX=Math.max(-this.xLimit,Math.min(this.xLimit,newRotX));this.prevX=x;this.prevY=y;if(newRotX!=this.rotateX||newRotY!=this.rotateY){this.rotateX=newRotX;this.rotateY=newRotY;this.drawCallback()}}doMouseUp(event){if(!this.isDraging){return}this.isDraging=false;document.removeEventListener("mousedown",this.boundDoMouseDrag,false);document.removeEventListener("mouseup",this.boundDoMouseUp,false)}doMouseWheel(event){const delta=event.deltaY/100;this.viewDistance+=delta;if(this.viewDistance<1){this.viewDistance-=delta;return}this.drawCallback()}doMousePanDawn(event){if(this.isPanning){return}this.isPanning=true;document.addEventListener("mousemove",this.boundDoMousePanDrag,false);document.addEventListener("mouseup",this.boundDoMousePanUp,false);const r=this.canvas.getBoundingClientRect();this.prevXForPan=event.clientX-r.left;this.prevYForPan=event.clientY-r.top}doMousePanDrag(event){if(!this.isPanning){return}const r=this.canvas.getBoundingClientRect();const x=event.clientX-r.left;const y=event.clientY-r.top;this.panX=this.panX+(x-this.prevXForPan)/(this.viewDistance*.5);this.panY=this.panY+(y-this.prevYForPan)/(this.viewDistance*.5);this.prevXForPan=x;this.prevYForPan=y;this.drawCallback()}doMousePanUp(event){this.isPanning=false;document.removeEventListener("mousedown",this.boundDoMousePanDrag,false);document.removeEventListener("mouseup",this.boundDoMousePanUp,false)}}class DebugDrawer extends OIMO.DebugDraw{constructor(edge){super();this.edge=edge;this.projViewMatrix=null;this.centerX=0;this.centerY=0;this.centerZ=0;this.length=0;this.vec=vec3.create();this.x=0;this.y=0;this.z=0;this.unitX=vec3.fromValues(1,0,0)}point(v,color){console.log("point")}triangle(v1,v2,v3,n1,n2,n3,color){console.log("triangle")}line(from,to,color){this.edge.color[0]=color.x;this.edge.color[1]=color.y;this.edge.color[2]=color.z;if(from.x>to.x){this.centerX=to.x+Math.abs(from.x-to.x)/2}else{this.centerX=from.x+Math.abs(to.x-from.x)/2}if(from.y>to.y){this.centerY=to.y+Math.abs(from.y-to.y)/2}else{this.centerY=from.y+Math.abs(to.y-from.y)/2}if(from.z>to.z){this.centerZ=to.z+Math.abs(from.z-to.z)/2}else{this.centerZ=from.z+Math.abs(to.z-from.z)/2}this.vec[0]=to.x-from.x;this.vec[1]=to.y-from.y;this.vec[2]=to.z-from.z;this.length=vec3.length(this.vec);vec3.normalize(this.vec,this.vec);quat.rotationTo(this.edge.rotation,this.unitX,this.vec);this.edge.scale=[this.length,.2,.2];this.edge.position=[this.centerX,this.centerY,this.centerZ];this.edge.draw(this.projViewMatrix)}}class Object3D{constructor(program,vertexBuffers,isLightMap=false,isAnimated=false){this.program=program;this.vertexBuffers=vertexBuffers;this.position=vec3.create();this.rotation=quat.create();this.scale=vec3.fromValues(1,1,1);this.mvpMatrix=mat4.create();this.modelMatrix=mat4.create();this.normalMatrix=mat4.create();gl.useProgram(program);this.aPositionLocation=gl.getAttribLocation(program,"aPosition");this.uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");this.isLightMap=isLightMap;if(!isLightMap){this.aNormalLocation=gl.getAttribLocation(program,"aNormal");this.uModelMatrixLocation=gl.getUniformLocation(program,"uModelMatrix");this.uNormalMatrixLocation=gl.getUniformLocation(program,"uNormalMatrix")}this.isAnimated=isAnimated}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffers.vertPosBuffer);gl.vertexAttribPointer(this.aPositionLocation,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aPositionLocation);if(!this.isLightMap){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffers.normalBuffer);gl.vertexAttribPointer(this.aNormalLocation,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aNormalLocation)}}draw(projViewMatrix){gl.useProgram(this.program);if(!this.isAnimated){mat4.fromRotationTranslationScale(this.modelMatrix,this.rotation,this.position,this.scale)}mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);if(!this.isLightMap){gl.uniformMatrix4fv(this.uModelMatrixLocation,false,this.modelMatrix);mat4.invert(this.normalMatrix,this.modelMatrix);mat4.transpose(this.normalMatrix,this.normalMatrix);gl.uniformMatrix4fv(this.uNormalMatrixLocation,false,this.normalMatrix)}}}class Object3DWithLightMap extends Object3D{constructor(program,vertexBuffers,texture){super(program,vertexBuffers,true);this.texture=texture;gl.useProgram(program);this.aTexCoordLocation=gl.getAttribLocation(program,"aTexCoord")}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffers.texCoordBuffer);gl.vertexAttribPointer(this.aTexCoordLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aTexCoordLocation);gl.bindTexture(gl.TEXTURE_2D,this.texture)}draw(projViewMatrix){gl.useProgram(this.program);super.bind();this.bind();super.draw(projViewMatrix);gl.drawArrays(gl.TRIANGLES,0,this.vertexBuffers.amountOfVertices)}}class ObjectForGraphics{constructor(program,position,vertexBuffers,texture){this.position=position;this.rotation=quat.create();this.scale=[1,1,1];this.amountOfVertices=vertexBuffers.amountOfVertices;this.vertPosBuffer=vertexBuffers.vertPosBuffer;this.normalBuffer=vertexBuffers.normalBuffer;this.texCoordBuffer=vertexBuffers.texCoordBuffer;this.texture=texture;this.mvpMatrix=mat4.create();this.modelMatrix=mat4.create();this.normalMatrix=mat4.create();gl.useProgram(program);this.uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");this.uModelMatrixLocation=gl.getUniformLocation(program,"uModelMatrix");this.uNormalMatrixLocation=gl.getUniformLocation(program,"uNormalMatrix");this.program=program}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertPosBuffer);gl.vertexAttribPointer(0,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(0);gl.bindBuffer(gl.ARRAY_BUFFER,this.normalBuffer);gl.vertexAttribPointer(1,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(1);gl.bindBuffer(gl.ARRAY_BUFFER,this.texCoordBuffer);gl.vertexAttribPointer(2,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(2);gl.bindTexture(gl.TEXTURE_2D,this.texture)}draw(projViewMatrix){gl.useProgram(this.program);mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);gl.uniformMatrix4fv(this.uModelMatrixLocation,false,this.modelMatrix);mat4.invert(this.normalMatrix,this.modelMatrix);mat4.transpose(this.normalMatrix,this.normalMatrix);gl.uniformMatrix4fv(this.uNormalMatrixLocation,false,this.normalMatrix);this.bind();gl.drawArrays(gl.TRIANGLES,0,this.amountOfVertices)}}class Lightless{constructor(program,vertexBuffers){this.program=program;this.vertexBuffers=vertexBuffers;this.color=[1,0,0];this.position=vec3.fromValues(0,0,0);this.rotation=quat.create();this.scale=vec3.fromValues(1,1,1);this.mvpMatrix=mat4.create();this.modelMatrix=mat4.create();gl.useProgram(program);this.aPositionLocation=gl.getAttribLocation(program,"aPosition");this.uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");this.uColorLocation=gl.getUniformLocation(program,"uColor")}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffers.vertPosBuffer);gl.vertexAttribPointer(this.aPositionLocation,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aPositionLocation)}draw(projViewMatrix){gl.useProgram(this.program);mat4.fromRotationTranslationScale(this.modelMatrix,this.rotation,this.position,this.scale);mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);gl.uniform3fv(this.uColorLocation,this.color);this.bind();gl.drawArrays(gl.TRIANGLES,0,this.vertexBuffers.amountOfVertices)}}class Keyboard{constructor(){this.keys={};document.addEventListener("keydown",event=>{this.onKeyChange(event,true)},true);document.addEventListener("keyup",event=>{this.onKeyChange(event,false)},false)}pressed(key){return this.keys[key]}onKeyChange(event,pressed){this.keys[event.code]=pressed}}class Skybox{constructor(size,program,skyboxImages){this.program=program;gl.useProgram(this.program);this.modelMatrix=mat4.create();this.mvpMatrix=mat4.create();const skyboxLocation=gl.getUniformLocation(program,"uSkyboxSampler");gl.uniform1i(skyboxLocation,0);const vertexArrays=this.cube(size);this.vertexPositionBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexPositionBuffer);gl.bufferData(gl.ARRAY_BUFFER,vertexArrays.vertexPositions,gl.STATIC_DRAW);this.aPositionLocation=gl.getAttribLocation(program,"aPosition");this.uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");this.elementIndexBuffer=gl.createBuffer();gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.elementIndexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,vertexArrays.indices,gl.STATIC_DRAW);this.amountOfVertices=vertexArrays.indices.length;this.texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_CUBE_MAP,this.texture);gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,skyboxImages.nx);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,skyboxImages.py);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,skyboxImages.pz);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,skyboxImages.px);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,skyboxImages.ny);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,skyboxImages.nz);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.generateMipmap(gl.TEXTURE_CUBE_MAP)}draw(projViewMatrix){gl.useProgram(this.program);gl.depthMask(false);gl.enableVertexAttribArray(this.aPositionLocation);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexPositionBuffer);gl.vertexAttribPointer(this.aPositionLocation,3,gl.FLOAT,false,0,0);mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,this.elementIndexBuffer);gl.drawElements(gl.TRIANGLES,this.amountOfVertices,gl.UNSIGNED_SHORT,0);gl.disableVertexAttribArray(this.aPositionLocation);gl.depthMask(true)}cube(size){const s=(size||1)/2;const coords=[];const indices=[];function face(xyz){const start=coords.length/3;let i;for(i=0;i<12;i++){coords.push(xyz[i])}indices.push(start,start+1,start+2,start,start+2,start+3)}face([-s,-s,s,s,-s,s,s,s,s,-s,s,s]);face([-s,-s,-s,-s,s,-s,s,s,-s,s,-s,-s]);face([-s,s,-s,-s,s,s,s,s,s,s,s,-s]);face([-s,-s,-s,s,-s,-s,s,-s,s,-s,-s,s]);face([s,-s,-s,s,s,-s,s,s,s,s,-s,s]);face([-s,-s,-s,-s,-s,s,-s,s,s,-s,s,-s]);return{vertexPositions:new Float32Array(coords),indices:new Uint16Array(indices)}}}let room,pipe,skybox,player;let playerRigidBody;let debugDrawer;const keyboard=new Keyboard;let thirdPerson=true;let cameraRotator;const thirdCameraDescElem=document.getElementById("thirdCameraDesc");const angularSpeed=2;const linearSpeed=3;const forward=vec3.fromValues(0,0,-1);const zUnit=vec3.fromValues(0,0,1);const playerRotation=quat.create();quat.rotationTo(playerRotation,zUnit,forward);const direction=vec3.fromValues(forward[0],forward[1],forward[2]);const pitchForward=vec3.create();const forwardTrans=vec4.create();const dist=vec4.create();const cross=vec3.create();let cameraAngle=0;const lowLimitOfAngle=-59;const highLimitOfAngle=59;const cameraSpeed=50;let currentTime,lastTime,dt;const projMatrix=mat4.create();let viewMatrix=mat4.create();const projViewMatrix=mat4.create();const world=new OIMO.World;world.setGravity(new OIMO.Vec3(0,-9.8,0));let showInstruments=true;const instrumentsElem=document.getElementById("instructions");const cameraHUDElem=document.getElementById("cameraHUD");const beginElem=document.getElementById("begin");let ac;let musicArrayBuffer,musicAudioBuffer,musicSource;function get2DSoundSource(audioBuffer,isLoop=false){const source=ac.createBufferSource();source.buffer=audioBuffer;source.loop=isLoop;const gain=ac.createGain();source.connect(gain).connect(ac.destination);gain.gain.value=.2;return source}beginElem.onclick=()=>{showInstruments=false;instrumentsElem.style.display="none";cameraHUDElem.style.display="";musicSource.start();if(!thirdPerson){document.body.requestPointerLock();thirdCameraDescElem.style.display="none"}else{thirdCameraDescElem.style.display=""}};let showColliders=false;const showCollidersCheckBox=document.getElementById("colliderCheckBox");showColliders=showCollidersCheckBox.checked;showCollidersCheckBox.onchange=()=>{showColliders=showCollidersCheckBox.checked};const controlElem=document.getElementById("control");const moveElem=document.getElementById("move");const firstPersonElem=document.getElementById("firstPersonLabel");const thirdPersonElem=document.getElementById("thirdPersonLabel");const colliderCheckBoxElem=document.getElementById("colliderCheckBoxLabel");const cameraRotationDescElem=document.getElementById("cameraRotationDesc");const cameraPanningDescElem=document.getElementById("cameraPanningDesc");const cameraZoomInOutDescElem=document.getElementById("cameraZoomInOutDesc");const singleModeButton=document.getElementById("singleModeButton");const coopModeButton=document.getElementById("coopModeButton");const loadingLabel=document.getElementById("loadingLabel");function setToEnglish(){controlElem.innerText="Control";moveElem.innerText="Use W-A-S-D keys to move";beginElem.innerText="Click to begin";firstPersonElem.innerText="First Person Camera";thirdPersonElem.innerText="Orbiting Camera";colliderCheckBoxElem.innerText="Show colliders";cameraRotationDescElem.innerText="Camera rotation - hold middle mouse button";cameraPanningDescElem.innerText="Camera panning - hold right mouse button";cameraZoomInOutDescElem.innerText="Zoom in/out camera - scroll middle mouse button";singleModeButton.innerText="Single mode";coopModeButton.innerText="Co-op mode";loadingLabel.innerText="Co-op mode"}function setToRussian(){controlElem.innerText="Управление";moveElem.innerText="Используйте клавиши W-A-S-D для перемещения";beginElem.innerText="Кликните, чтобы начать";firstPersonElem.innerText="Камера от первого лица";thirdPersonElem.innerText="Орбитальная камера";colliderCheckBoxElem.innerText="Показывать коллайдеры";cameraRotationDescElem.innerText="Вращение камеры - зажать среднюю кнопку мыши";cameraPanningDescElem.innerText="Панорамирование камеры - зажать правую кнопку мыши";cameraZoomInOutDescElem.innerText="Приблизить/отдалить камеру - прокрутить среднюю кнопку мыши";singleModeButton.innerText="Одиночный режим";coopModeButton.innerText="Кооперативный режим";loadingLabel.innerText="Загрузка..."}function setToChinese(){controlElem.innerText="控制";moveElem.innerText="使用 W-A-S-D 键移动";beginElem.innerText="点击开始";firstPersonElem.innerText="第一人称相机";thirdPersonElem.innerText="轨道相机";colliderCheckBoxElem.innerText="显示对撞机";cameraRotationDescElem.innerText="相机旋转 - 按住鼠标中键";cameraPanningDescElem.innerText="相机平移 - 按住鼠标右键";cameraZoomInOutDescElem.innerText="放大/缩小相机 - 滚动鼠标中键";singleModeButton.innerText="单模";coopModeButton.innerText="合作模式";loadingLabel.innerText="加载中..."}const queryString=window.location.search;if(queryString){const urlParams=new URLSearchParams(queryString);const lang=urlParams.get("lang");if(lang==="ru"){setToRussian();const russianRadio=document.getElementById("russian");russianRadio.checked=true}else if(lang==="ch"){setToChinese();const chineseRadio=document.getElementById("chinese");chineseRadio.checked=true}}function testLangRadio(){if(this.id==="english"){setToEnglish()}else if(this.id==="russian"){setToRussian()}else if(this.id==="chinese"){setToChinese()}else{console.log("unknown name")}}const langRadio=document.getElementsByName("language");for(let i=0;i<langRadio.length;i++){langRadio[i].onchange=testLangRadio}window.addEventListener("keydown",function(e){if(["ArrowUp","ArrowDown","ArrowLeft","ArrowRight"].indexOf(e.code)>-1){e.preventDefault()}},false);let input=[];function keyboardHandler(){if(showInstruments){return}if(keyboard.pressed("KeyW")||keyboard.pressed("ArrowUp")){input.push("u")}if(keyboard.pressed("KeyS")||keyboard.pressed("ArrowDown")){input.push("d")}if(keyboard.pressed("KeyA")||keyboard.pressed("ArrowLeft")){input.push("l")}if(keyboard.pressed("KeyD")||keyboard.pressed("ArrowRight")){input.push("r")}}function applyThirdPersonInput(inputs,model,body,direction){if(showInstruments){return}inputs.forEach(input=>{if(input==="u"){const vy=body.getLinearVelocity().y;const impulse=new OIMO.Vec3(direction[0]*linearSpeed,vy,direction[2]*linearSpeed);body.setLinearVelocity(impulse);model.setAnimation("walk")}if(input==="d"){const vy=body.getLinearVelocity().y;const impulse=new OIMO.Vec3(-direction[0]*linearSpeed,vy,-direction[2]*linearSpeed);body.setLinearVelocity(impulse);model.setAnimation("walk")}if(input==="l"){const impulse=new OIMO.Vec3(0,angularSpeed,0);body.setAngularVelocity(impulse);model.setAnimation("walk")}if(input==="r"){const impulse=new OIMO.Vec3(0,-angularSpeed,0);body.setAngularVelocity(impulse);model.setAnimation("walk")}});vec3.transformQuat(direction,forward,model.rotation);if(input.length){input=[]}}function applyFirstPersonInput(inputs,model,body,direction){if(showInstruments){return}inputs.forEach(input=>{if(input==="u"){const vy=body.getLinearVelocity().y;const impulse=new OIMO.Vec3(direction[0]*linearSpeed,vy,direction[2]*linearSpeed);body.setLinearVelocity(impulse);model.setAnimation("walk")}if(input==="d"){const vy=body.getLinearVelocity().y;const impulse=new OIMO.Vec3(-direction[0]*linearSpeed,vy,-direction[2]*linearSpeed);body.setLinearVelocity(impulse);model.setAnimation("walk")}if(input==="l"){const vy=body.getLinearVelocity().y;const v=vec4.create();vec4.transformQuat(v,[forward[0],forward[1],forward[2],0],model.rotation);vec3.cross(cross,[0,1,0],[v[0],v[1],v[2]]);const impulse=new OIMO.Vec3(cross[0]*linearSpeed,vy,cross[2]*linearSpeed);body.setLinearVelocity(impulse);model.setAnimation("walk")}if(input==="r"){const vy=body.getLinearVelocity().y;const v=vec4.create();vec4.transformQuat(v,[forward[0],forward[1],forward[2],0],model.rotation);vec3.cross(cross,[0,1,0],[v[0],v[1],v[2]]);const impulse=new OIMO.Vec3(-cross[0]*linearSpeed,vy,-cross[2]*linearSpeed);body.setLinearVelocity(impulse);model.setAnimation("walk")}});vec3.transformQuat(direction,forward,model.rotation);if(input.length){input=[]}}function animationLoop(){currentTime=Date.now();dt=(currentTime-lastTime)/1e3;lastTime=currentTime;keyboardHandler();if(thirdPerson){applyThirdPersonInput(input,player,playerRigidBody,direction)}else{applyFirstPersonInput(input,player,playerRigidBody,direction)}world.step(dt);if(playerRigidBody){player.position[0]=playerRigidBody.getPosition().x;player.position[1]=playerRigidBody.getPosition().y;player.position[2]=playerRigidBody.getPosition().z;player.rotation[0]=playerRigidBody.getOrientation().x;player.rotation[1]=playerRigidBody.getOrientation().y;player.rotation[2]=playerRigidBody.getOrientation().z;player.rotation[3]=playerRigidBody.getOrientation().w}if(!thirdPerson){mat4.identity(viewMatrix);vec3.rotateX(pitchForward,forward,[0,0,0],cameraAngle*Math.PI/180);vec4.transformQuat(forwardTrans,[pitchForward[0],pitchForward[1],pitchForward[2],0],player.rotation);vec4.add(dist,[player.position[0],player.position[1],player.position[2],0],forwardTrans);const cameraPos=vec3.create();const vec90=vec3.fromValues(forwardTrans[0],0,forwardTrans[2]);vec3.normalize(vec90,vec90);vec3.scale(vec90,vec90,.5);vec3.add(cameraPos,[player.position[0],player.position[1]+4,player.position[2]],vec90);mat4.lookAt(viewMatrix,cameraPos,[dist[0],dist[1]+4,dist[2]],[0,1,0])}mat4.mul(projViewMatrix,projMatrix,viewMatrix);if(playerRigidBody){const vx=playerRigidBody.getLinearVelocity().x;const vz=playerRigidBody.getLinearVelocity().z;if(Math.abs(vx)<.001&&Math.abs(vz)<.001){player.setAnimation("stop")}}gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);if(showColliders){world.debugDraw()}player.draw(projViewMatrix,dt);room.draw(projViewMatrix);pipe.draw(projViewMatrix);skybox.draw(projViewMatrix);requestAnimationFrame(animationLoop)}let defaultProgram,lightlessProgram,lightmapProgram,skyboxProgram;let jillTexture,jillVertexBuffers;let vertexBuffers,roomTexture,pipeTexture;let skybox_nx,skybox_ny,skybox_nz,skybox_px,skybox_py,skybox_pz;const loadingValue=document.getElementById("loadingValue");const amountOfAssets=18;let assetNumber=0;async function loadAssets(){if(!initWebGLContext("renderCanvas"))return;gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,true);loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;defaultProgram=await createProgram("assets/shaders/","texture.vert","texture.frag");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;lightlessProgram=await createProgram("assets/shaders/","lightless.vert","lightless.frag");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;lightmapProgram=await createProgram("assets/shaders/","lightmap.vert","lightmap.frag");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;vertexBuffers=await initVertexBuffers("assets/models/",["cube_1x1","room","pipe"]);loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;roomTexture=await loadTexture("assets/models/room.png");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;pipeTexture=await loadTexture("assets/models/pipe.png");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;jillTexture=await loadTexture("assets/models/jill/CHAR11.bmp");const jillPartNames=[];for(let i=0;i<15;i++){jillPartNames.push(`jill-${i}`)}jillPartNames.push("armature");jillVertexBuffers=await initVertexBuffers("assets/models/jill/",jillPartNames);loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skyboxProgram=await createProgram("assets/shaders/","skybox.vert","skybox.frag");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skybox_nx=await loadTexture$1("assets/skybox/skybox_nx.jpg");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skybox_ny=await loadTexture$1("assets/skybox/skybox_ny.jpg");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skybox_nz=await loadTexture$1("assets/skybox/skybox_nz.jpg");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skybox_px=await loadTexture$1("assets/skybox/skybox_px.jpg");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skybox_py=await loadTexture$1("assets/skybox/skybox_py.jpg");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;skybox_pz=await loadTexture$1("assets/skybox/skybox_pz.jpg");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;let response=await fetch("assets/sounds/re-save-room.mp3");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;musicArrayBuffer=await response.arrayBuffer();loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;response=await fetch("assets/sounds/ft_floa.wav");loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;await response.arrayBuffer();loadingValue.innerText=`${Math.round(assetNumber++*100/amountOfAssets)}%`;setTimeout(()=>{loadingPanel.style.display="none";init()},300)}async function init(){gl.canvas.style.display="";instrumentsElem.style.display="";gl.canvas.onclick=()=>{if(!showInstruments&&!thirdPerson){document.body.requestPointerLock()}};document.body.onmousemove=()=>{if(!showInstruments&&document.pointerLockElement===document.body&&!thirdPerson){cameraAngle-=cameraSpeed*event.movementY/100;if(cameraAngle<lowLimitOfAngle){cameraAngle=lowLimitOfAngle}if(cameraAngle>highLimitOfAngle){cameraAngle=highLimitOfAngle}const impulse=new OIMO.Vec3(0,-angularSpeed*event.movementX/10,0);playerRigidBody.applyAngularImpulse(impulse)}};gl.enable(gl.DEPTH_TEST);gl.clearColor(.2,.2,.2,1);gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);cameraRotator=new CameraRotator(gl.canvas,()=>{if(thirdPerson){viewMatrix=cameraRotator.getViewMatrix()}},14,30,-48,0,2);viewMatrix=cameraRotator.getViewMatrix();const skyboxImages={nx:skybox_nx,ny:skybox_ny,nz:skybox_nz,px:skybox_px,py:skybox_py,pz:skybox_pz};skybox=new Skybox(400,skyboxProgram,skyboxImages);const jillParts=[];for(let i=0;i<15;i++){jillParts[`part${i}`]=new ObjectForGraphics(defaultProgram,[0,0,0],jillVertexBuffers[`jill-${i}`],jillTexture)}player=new Animated(jillVertexBuffers["armature"],jillParts);room=new Object3DWithLightMap(lightmapProgram,vertexBuffers["room"],roomTexture);pipe=new Object3DWithLightMap(lightmapProgram,vertexBuffers["pipe"],pipeTexture);const colliderEdge=new Lightless(lightlessProgram,vertexBuffers["cube_1x1"],vec3.fromValues(0,1,0));debugDrawer=new DebugDrawer(colliderEdge);debugDrawer.wireframe=true;world.setDebugDraw(debugDrawer);const staticColliderPositions=[[0,-.2591,-0],[-.4143,3.304,8.6726],[-.4143,1.3347,-10.3273],[6.067,1.3347,-9.1798],[-6.0277,1.3347,-9.1798],[-10.3257,1.3347,-.065],[8.4818,3.0496,-.065],[-9.1759,1.3347,-6.2955],[-9.1759,1.3347,5.9545],[0,9.2203,-0]];const staticColliderRotatons=[[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1],[0,0,-0,1]];const staticColliderScales=[[10.651,.3735,10.651],[9.5054,3.179,.3783],[4.2891,1.4084,.3783],[2.2602,1.4084,.8478],[2.2602,1.4084,.8478],[.3755,1.4084,3.6281],[.3755,3.077,8.5237],[.8027,1.4084,2.4102],[.8027,1.4084,2.4102],[10.651,.3735,10.651]];for(let i=0;i<staticColliderPositions.length;++i){let friction=0;if(i==0){friction=1}const rbConfig=new OIMO.RigidBodyConfig;rbConfig.type=OIMO.RigidBodyType.STATIC;rbConfig.position=new OIMO.Vec3(staticColliderPositions[i][0],staticColliderPositions[i][1],staticColliderPositions[i][2]);const rigidBody=new OIMO.RigidBody(rbConfig);rigidBody.setOrientation(new OIMO.Quat(staticColliderRotatons[i][0],staticColliderRotatons[i][1],staticColliderRotatons[i][2],staticColliderRotatons[i][3]));const shapeConfig=new OIMO.ShapeConfig;shapeConfig.geometry=new OIMO.BoxGeometry(new OIMO.Vec3(staticColliderScales[i][0],staticColliderScales[i][1],staticColliderScales[i][2]));shapeConfig.friction=friction;const shape=new OIMO.Shape(shapeConfig);rigidBody.addShape(shape);world.addRigidBody(rigidBody)}player.position=vec3.fromValues(0,0,0);const playerRBConfig=new OIMO.RigidBodyConfig;playerRBConfig.type=OIMO.RigidBodyType.DYNAMIC;playerRBConfig.position=new OIMO.Vec3(player.position[0],player.position[1],player.position[2]);playerRigidBody=new OIMO.RigidBody(playerRBConfig);playerRigidBody.setOrientation(new OIMO.Quat(0,1,0,0));const playerShapeConfig=new OIMO.ShapeConfig;playerShapeConfig.geometry=new OIMO.SphereGeometry(player.scale[0]);playerShapeConfig.friction=10;playerRigidBody.addShape(new OIMO.Shape(playerShapeConfig));playerRigidBody.setRotationFactor(new OIMO.Vec3(0,1,0));playerRigidBody.setAngularDamping(10);world.addRigidBody(playerRigidBody);function testCameraRadio(){if(this.id==="firstPerson"){thirdPerson=false;document.body.requestPointerLock();thirdCameraDescElem.style.display="none"}else if(this.id==="thirdPerson"){thirdPerson=true;viewMatrix=cameraRotator.getViewMatrix();thirdCameraDescElem.style.display=""}else{console.log("unknown name")}}const cameraRadio=document.getElementsByName("camera");for(let i=0;i<cameraRadio.length;i++){cameraRadio[i].onchange=testCameraRadio}ac=new window.AudioContext;ac.listener;musicAudioBuffer=await ac.decodeAudioData(musicArrayBuffer);musicSource=get2DSoundSource(musicAudioBuffer,true);window.onresize=()=>{const w=gl.canvas.clientWidth;const h=gl.canvas.clientHeight;gl.canvas.width=w;gl.canvas.height=h;gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);mat4.perspective(projMatrix,55*Math.PI/180,w/h,.1,500);debugDrawer.projViewMatrix=projViewMatrix;lastTime=Date.now()};window.onresize(null);animationLoop()}const singleCoopModePanel=document.getElementById("singleCoopModePanel");const loadingPanel=document.getElementById("loadingPanel");if(queryString){const urlParams=new URLSearchParams(queryString);const mode=urlParams.get("mode");if(mode==="single"){singleCoopModePanel.style.display="none";loadingPanel.style.display="";loadAssets()}}singleModeButton.onclick=()=>{singleCoopModePanel.style.display="none";loadingPanel.style.display="";loadAssets()};coopModeButton.onclick=()=>{window.location.href="https://room-ws-webgl-js.onrender.com/?mode=co-op"};