import{mat4}from"gl-matrix";let gl=null;function initWebGLContext(canvasName){const canvas=document.getElementById(canvasName);if(canvas===null){console.log(`Failed to get a canvas element with the name "${canvasName}"`);return false}gl=canvas.getContext("webgl",{alpha:false,premultipliedAlpha:false});return true}async function createShaderProgram(path,vertShaderFileName,fragShaderFileName){let response=await fetch(path+vertShaderFileName);const vertShaderSource=await response.text();response=await fetch(path+fragShaderFileName);const fragShaderSource=await response.text();const vShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShader,vertShaderSource);gl.compileShader(vShader);let ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("vert: "+gl.getShaderInfoLog(vShader));return null}const fShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShader,fragShaderSource);gl.compileShader(fShader);ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("frag: "+gl.getShaderInfoLog(fShader));return null}const program=gl.createProgram();gl.attachShader(program,vShader);gl.attachShader(program,fShader);gl.linkProgram(program);ok=gl.getProgramParameter(program,gl.LINK_STATUS);if(!ok){console.log("link: "+gl.getProgramInfoLog(program));return null}gl.useProgram(program);return program}function getSpriteInfo(atlasJson,spriteNames){const atlasW=atlasJson.meta.size.w;const atlasH=atlasJson.meta.size.h;const vertPositions=[];const texCoords=[];const spriteSizes=[];for(let i=0;i<spriteNames.length;i++){vertPositions.push(0,0,0,1,1,0,1,1);const tx=parseInt(atlasJson.frames[spriteNames[i]]["frame"]["x"])/atlasW;const ty=parseInt(atlasJson.frames[spriteNames[i]]["frame"]["y"])/atlasH;const tw=parseInt(atlasJson.frames[spriteNames[i]]["frame"]["w"])/atlasW;const th=parseInt(atlasJson.frames[spriteNames[i]]["frame"]["h"])/atlasH;texCoords.push(tx,ty,tx,ty+th,tx+tw,ty,tx+tw,ty+th);const spriteW=parseInt(atlasJson.frames[spriteNames[i]]["frame"]["w"]);const spriteH=parseInt(atlasJson.frames[spriteNames[i]]["frame"]["h"]);spriteSizes.push({w:spriteW,h:spriteH})}const vertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertPositions),gl.STATIC_DRAW);const texCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texCoords),gl.STATIC_DRAW);const result={vertPosBuffer:vertPosBuffer,texCoordBuffer:texCoordBuffer,spriteSizes:spriteSizes};return result}function loadTexture(url,minType=gl.LINEAR,magType=gl.LINEAR){return new Promise(resolve=>{const image=new Image;image.onload=()=>{const texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,minType);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,magType);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,image);resolve(texture)};image.src=url})}class Keyboard{constructor(){this.keys={};document.addEventListener("keydown",event=>{this.onKeyChange(event,true)},true);document.addEventListener("keyup",event=>{this.onKeyChange(event,false)},false)}pressed(key){return this.keys[key]}onKeyChange(event,pressed){this.keys[event.code]=pressed}}class Sprite{constructor(spriteNames,spriteInfo,aPositionLocation,aTexCoordLocation,uMvpMatrixLocation,texture){this.spriteNames=spriteNames;this.vertPosBuffer=spriteInfo.vertPosBuffer;this.texCoordBuffer=spriteInfo.texCoordBuffer;this.aPositionLocation=aPositionLocation;this.aTexCoordLocation=aTexCoordLocation;this.uMvpMatrixLocation=uMvpMatrixLocation;this.texture=texture;this.drawingIndex=0;this.spriteSizes=spriteInfo.spriteSizes;this.x=0;this.y=0;this.w=this.spriteSizes[0].w;this.h=this.spriteSizes[0].h;this.modelMatrix=mat4.create();this.mvpMatrix=mat4.create()}setPosition(x,y){this.x=x;this.y=y}setSize(w,h){this.w=w;this.h=h}setTextureRect(spriteName){const index=this.spriteNames.indexOf(spriteName);this.w=this.spriteSizes[index].w;this.h=this.spriteSizes[index].h;this.drawingIndex=index*4}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertPosBuffer);gl.vertexAttribPointer(this.aPositionLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aPositionLocation);gl.bindBuffer(gl.ARRAY_BUFFER,this.texCoordBuffer);gl.vertexAttribPointer(this.aTexCoordLocation,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(this.aTexCoordLocation);gl.bindTexture(gl.TEXTURE_2D,this.texture)}draw(projViewMatrix){this.bind();mat4.fromTranslation(this.modelMatrix,[this.x,this.y,0]);mat4.scale(this.modelMatrix,this.modelMatrix,[this.w,this.h,1]);mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);gl.drawArrays(gl.TRIANGLE_STRIP,this.drawingIndex,4);gl.bindTexture(gl.TEXTURE_2D,null)}}const keyboard=new Keyboard;const GameState={PLAYING:0,GAME_OVER:1,WIN:2};let currentGameState=GameState.PLAYING;const N=30;const M=20;const ts=25;const startNum=6;let num=startNum;const winNum=startNum+3;const startDir=2;let dir=startDir;const currentScoreElem=document.getElementById("currentScore");const scoreGoalElem=document.getElementById("scoreGoal");currentScoreElem.innerText=startNum;scoreGoalElem.innerText=winNum;const s=[];const reservedSize=100;for(let i=0;i<reservedSize;i++){s.push({x:0,y:0})}const f={x:0,y:0};f.x=getRandomInt(0,N-1);f.y=getRandomInt(0,M-1);const projMatrix=mat4.create();mat4.ortho(projMatrix,0,ts*N,ts*M,0,1,-1);const viewMatrix=mat4.create();mat4.lookAt(viewMatrix,[0,0,1],[0,0,0],[0,1,0]);const projViewMatrix=mat4.create();mat4.mul(projViewMatrix,projMatrix,viewMatrix);let timer=0,delay=.2;let currentTime,deltaTime,lastTime;const guiSpriteNames=["you_have_won.png","game_over_try_again.png"];const spriteNames=["apple.png","tile.png","snake_body.png","snake_smile_down.png","snake_smile_left.png","snake_smile_right.png","snake_smile_up.png","snake_stop_down.png","snake_stop_left.png","snake_stop_right.png","snake_stop_up.png"];let gui,sprite;let audioContext;let musicArrayBuffer,musicAudioBuffer,musicSource;let deadArrayBuffer,deadAudioBuffer;let eatArrayBuffer,eatAudioBuffer;let winArrayBuffer,winAudioBuffer;const scorePanel=document.getElementById("scorePanel");const guiPanel=document.getElementById("guiPanel");const controlInfoPanel=document.getElementById("controlInfoPanel");function play(audioBuffer,isLoop=false){const source=audioContext.createBufferSource();source.buffer=audioBuffer;source.loop=isLoop;const gain=audioContext.createGain();source.connect(gain).connect(audioContext.destination);gain.gain.value=.1;source.start();return source}async function setUpSounds(){musicAudioBuffer=await audioContext.decodeAudioData(musicArrayBuffer);musicSource=play(musicAudioBuffer,true);deadAudioBuffer=await audioContext.decodeAudioData(deadArrayBuffer);eatAudioBuffer=await audioContext.decodeAudioData(eatArrayBuffer);winAudioBuffer=await audioContext.decodeAudioData(winArrayBuffer)}const btnStart=document.getElementById("btnStart");btnStart.onclick=()=>{btnStart.hidden=true;audioContext=new window.AudioContext;lastTime=Date.now();animationLoop();setUpSounds()};function getWidth(){return Math.max(document.body.scrollWidth,document.documentElement.scrollWidth,document.body.offsetWidth,document.documentElement.offsetWidth,document.documentElement.clientWidth)}function getHeight(){return Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.documentElement.clientHeight)}function getRandomInt(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min}function draw(){gl.clear(gl.COLOR_BUFFER_BIT);for(let i=0;i<N;i++){for(let j=0;j<M;j++){sprite.setPosition(i*ts,j*ts);sprite.setTextureRect("tile.png");sprite.draw(projViewMatrix)}}for(let i=0;i<num;i++){if(i!=0){sprite.setTextureRect("snake_body.png")}else{if(dir===0)sprite.setTextureRect("snake_smile_down.png");else if(dir===1)sprite.setTextureRect("snake_smile_left.png");else if(dir===2)sprite.setTextureRect("snake_smile_right.png");else if(dir===3)sprite.setTextureRect("snake_smile_up.png")}if(currentGameState===GameState.GAME_OVER&&i==1){if(dir===0)sprite.setTextureRect("snake_stop_down.png");else if(dir===1)sprite.setTextureRect("snake_stop_left.png");else if(dir===2)sprite.setTextureRect("snake_stop_right.png");else if(dir===3)sprite.setTextureRect("snake_stop_up.png")}sprite.setPosition(s[i].x*ts,s[i].y*ts);sprite.draw(projViewMatrix)}sprite.setTextureRect("apple.png");sprite.setPosition(f.x*ts,f.y*ts);sprite.draw(projViewMatrix);if(currentGameState===GameState.GAME_OVER){gui.setTextureRect("game_over_try_again.png");gui.draw(projViewMatrix)}if(currentGameState===GameState.WIN){gui.setTextureRect("you_have_won.png");gui.draw(projViewMatrix)}}function tick(){for(let i=num;i>0;i--){s[i].x=s[i-1].x;s[i].y=s[i-1].y}if(dir==0)s[0].y+=1;if(dir==1)s[0].x-=1;if(dir==2)s[0].x+=1;if(dir==3)s[0].y-=1;if(s[0].x>N-1)s[0].x=0;if(s[0].x<0)s[0].x=N-1;if(s[0].y>M-1)s[0].y=0;if(s[0].y<0)s[0].y=M-1;if(s[0].x==f.x&&s[0].y==f.y){num++;currentScoreElem.innerText=num;f.x=getRandomInt(0,N-1);f.y=getRandomInt(0,M-1);play(eatAudioBuffer)}for(let i=1;i<num;i++){if(s[0].x==s[i].x&&s[0].y==s[i].y){currentGameState=GameState.GAME_OVER;musicSource.stop();play(deadAudioBuffer)}}if(num===winNum){currentGameState=GameState.WIN;musicSource.stop();play(winAudioBuffer)}draw()}function keyboardHandler(){if(keyboard.pressed("KeyA")||keyboard.pressed("ArrowLeft")&&currentGameState===GameState.PLAYING){dir=1}else if(keyboard.pressed("KeyD")||keyboard.pressed("ArrowRight")&&currentGameState===GameState.PLAYING){dir=2}else if(keyboard.pressed("KeyW")||keyboard.pressed("ArrowUp")&&currentGameState===GameState.PLAYING){dir=3}else if(keyboard.pressed("KeyS")||keyboard.pressed("ArrowDown")&&currentGameState===GameState.PLAYING){dir=0}else if(keyboard.pressed("Enter")&&currentGameState!==GameState.PLAYING){num=startNum;currentScoreElem.innerText=startNum;dir=startDir;currentGameState=GameState.PLAYING;for(let i=0;i<reservedSize;i++){s[i].x=0;s[i].y=0}f.x=getRandomInt(0,N-1);f.y=getRandomInt(0,M-1);musicSource=play(musicAudioBuffer,true)}}function animationLoop(){requestAnimationFrame(animationLoop);keyboardHandler();currentTime=Date.now();deltaTime=(currentTime-lastTime)/1e3;lastTime=currentTime;timer+=deltaTime;if(timer>delay&&currentGameState===GameState.PLAYING){timer=0;tick()}}async function init(){if(!initWebGLContext("renderCanvas"))return;gl.clearColor(.2,.2,.2,1);const canvasWidth=600;const canvasHeight=canvasWidth*M/N;gl.canvas.width=canvasWidth;gl.canvas.height=canvasHeight;gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);const amountOfAssets=7;const program=await createShaderProgram("./assets/shaders/","default.vert","default.frag");console.log(1*100/amountOfAssets);const aPositionLocation=gl.getAttribLocation(program,"aPosition");const aTexCoordLocation=gl.getAttribLocation(program,"aTexCoord");const uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");let texturePath="./assets/sprites/linear_texture.png";let texture=await loadTexture(texturePath);let response=await fetch("assets/sprites/linear_texture.json");let content=await response.text();let atlasJson=JSON.parse(content);let spriteInfo=getSpriteInfo(atlasJson,guiSpriteNames);gui=new Sprite(guiSpriteNames,spriteInfo,aPositionLocation,aTexCoordLocation,uMvpMatrixLocation,texture);gui.setPosition(0,175);console.log(2*100/amountOfAssets);texturePath="./assets/sprites/nearest_texture.png";texture=await loadTexture(texturePath);response=await fetch("assets/sprites/nearest_texture.json");content=await response.text();atlasJson=JSON.parse(content);spriteInfo=getSpriteInfo(atlasJson,spriteNames);sprite=new Sprite(spriteNames,spriteInfo,aPositionLocation,aTexCoordLocation,uMvpMatrixLocation,texture);console.log(3*100/amountOfAssets);response=await fetch("assets/sounds/-003-game-play-normal-.mp3");musicArrayBuffer=await response.arrayBuffer();console.log(4*100/amountOfAssets);response=await fetch("assets/sounds/-009-dead.mp3");deadArrayBuffer=await response.arrayBuffer();console.log(5*100/amountOfAssets);response=await fetch("assets/sounds/snake_barell.wav");eatArrayBuffer=await response.arrayBuffer();console.log(6*100/amountOfAssets);response=await fetch("assets/sounds/-005-level-complete.mp3");winArrayBuffer=await response.arrayBuffer();console.log(7*100/amountOfAssets);window.onresize=()=>{const browserWidth=getWidth();getHeight();const btnStartWidth=150;const btnStartHeight=50;btnStart.style.width=`${btnStartWidth}px`;btnStart.style.height=`${btnStartHeight}px`;btnStart.style.left=`${canvasWidth/2-btnStartWidth/2}px`;guiPanel.style.width=canvasWidth;guiPanel.style.left=`${browserWidth/2-canvasWidth/2}px`;scorePanel.hidden=false;guiPanel.hidden=false;controlInfoPanel.hidden=false;btnStart.hidden=false};window.onresize(null)}init();