import"oimo-physics";import*as glMatrix from"gl-matrix";let gl=null;function initWebGLContext(canvasName){const canvas=document.getElementById(canvasName);if(canvas===null){console.log(`Failed to get a canvas element with the name "${canvasName}"`);return false}gl=canvas.getContext("webgl");gl.enable(gl.DEPTH_TEST);gl.clearColor(.5,.6,.8,1);return true}class DebugDrawer extends OIMO.DebugDraw{constructor(edge){super();this.edge=edge;this.projViewMatrix=null;this.centerX=0;this.centerY=0;this.centerZ=0;this.length=0;this.vec=glMatrix.vec3.create();this.x=0;this.y=0;this.z=0;this.unitX=glMatrix.vec3.fromValues(1,0,0)}point(v,color){console.log("point")}triangle(v1,v2,v3,n1,n2,n3,color){}line(from,to,color){if(from.x>to.x){this.centerX=to.x+Math.abs(from.x-to.x)/2}else{this.centerX=from.x+Math.abs(to.x-from.x)/2}if(from.y>to.y){this.centerY=to.y+Math.abs(from.y-to.y)/2}else{this.centerY=from.y+Math.abs(to.y-from.y)/2}if(from.z>to.z){this.centerZ=to.z+Math.abs(from.z-to.z)/2}else{this.centerZ=from.z+Math.abs(to.z-from.z)/2}this.vec[0]=to.x-from.x;this.vec[1]=to.y-from.y;this.vec[2]=to.z-from.z;this.length=glMatrix.vec3.length(this.vec);glMatrix.vec3.normalize(this.vec,this.vec);glMatrix.quat.rotationTo(this.edge.rotation,this.unitX,this.vec);this.edge.scale=[this.length,.05,.05];this.edge.position=[this.centerX,this.centerY,this.centerZ];this.edge.draw(this.projViewMatrix)}}class Keyboard{constructor(){this.keys={};document.addEventListener("keydown",event=>{this.onKeyChange(event,true)},true);document.addEventListener("keyup",event=>{this.onKeyChange(event,false)},false)}pressed(key){return this.keys[key]}onKeyChange(event,pressed){this.keys[event.key]=pressed}}class ObjectForGraphics{constructor(program,position,amountOfVertices,vertPosBuffer,normalBuffer,texCoordBuffer,texture){this.position=position;this.rotation=glMatrix.quat.create();this.scale=[1,1,1];this.amountOfVertices=amountOfVertices;this.vertPosBuffer=vertPosBuffer;this.normalBuffer=normalBuffer;this.texCoordBuffer=texCoordBuffer;this.texture=texture;this.mvpMatrix=glMatrix.mat4.create();this.modelMatrix=glMatrix.mat4.create();this.normalMatrix=glMatrix.mat4.create();gl.useProgram(program);this.uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");this.uModelMatrixLocation=gl.getUniformLocation(program,"uModelMatrix");this.uNormalMatrixLocation=gl.getUniformLocation(program,"uNormalMatrix");this.program=program}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertPosBuffer);gl.vertexAttribPointer(0,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(0);gl.bindBuffer(gl.ARRAY_BUFFER,this.normalBuffer);gl.vertexAttribPointer(1,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(1);gl.bindBuffer(gl.ARRAY_BUFFER,this.texCoordBuffer);gl.vertexAttribPointer(2,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(2);gl.bindTexture(gl.TEXTURE_2D,this.texture)}draw(projViewMatrix){gl.useProgram(this.program);glMatrix.mat4.fromRotationTranslationScale(this.modelMatrix,this.rotation,this.position,this.scale);glMatrix.mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);gl.uniformMatrix4fv(this.uModelMatrixLocation,false,this.modelMatrix);glMatrix.mat4.invert(this.normalMatrix,this.modelMatrix);glMatrix.mat4.transpose(this.normalMatrix,this.normalMatrix);gl.uniformMatrix4fv(this.uNormalMatrixLocation,false,this.normalMatrix);this.bind();gl.drawArrays(gl.TRIANGLES,0,this.amountOfVertices)}}class ObjectForEdge{constructor(program,amountOfVertices,vertPosBuffer){this.position=[0,0,0];this.rotation=glMatrix.quat.create();this.scale=[1,1,1];this.amountOfVertices=amountOfVertices;this.vertPosBuffer=vertPosBuffer;this.mvpMatrix=glMatrix.mat4.create();this.modelMatrix=glMatrix.mat4.create();gl.useProgram(program);this.uMvpMatrixLocation=gl.getUniformLocation(program,"uMvpMatrix");this.program=program}bind(){gl.bindBuffer(gl.ARRAY_BUFFER,this.vertPosBuffer);gl.vertexAttribPointer(0,3,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(0)}draw(projViewMatrix){gl.useProgram(this.program);glMatrix.mat4.fromRotationTranslationScale(this.modelMatrix,this.rotation,this.position,this.scale);glMatrix.mat4.mul(this.mvpMatrix,projViewMatrix,this.modelMatrix);gl.uniformMatrix4fv(this.uMvpMatrixLocation,false,this.mvpMatrix);this.bind();gl.drawArrays(gl.TRIANGLES,0,this.amountOfVertices)}}function createProgram(vertexShaderName,fragmentShaderName){var vShaderElement=document.getElementById(vertexShaderName);var fShaderElement=document.getElementById(fragmentShaderName);if(vShaderElement==null){console.log(`Failed to get an element with name "${vertexShaderName}"`);return null}if(fShaderElement==null){console.log(`Failed to get an element with name "${fragmentShaderName}"`);return null}const vertShaderSource=vShaderElement.firstChild.textContent;const vShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShader,vertShaderSource);gl.compileShader(vShader);let ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("vert: "+gl.getShaderInfoLog(vShader));return null}const fragShaderSource=fShaderElement.firstChild.textContent;const fShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShader,fragShaderSource);gl.compileShader(fShader);ok=gl.getShaderParameter(vShader,gl.COMPILE_STATUS);if(!ok){console.log("frag: "+gl.getShaderInfoLog(fShader));return null}const program=gl.createProgram();gl.attachShader(program,vShader);gl.attachShader(program,fShader);gl.bindAttribLocation(program,0,"aPosition");gl.bindAttribLocation(program,1,"aNormal");gl.bindAttribLocation(program,2,"aTexCoord");gl.linkProgram(program);ok=gl.getProgramParameter(program,gl.LINK_STATUS);if(!ok){console.log("link: "+gl.getProgramInfoLog(program));return null}gl.useProgram(program);return program}async function initVertexBuffers(modelPaths,callback){const vertPosBuffers=[];const normalBuffers=[];const texCoordBuffers=[];const amounts=[];for(let i=0;i<modelPaths.length;++i){const contentResponse=await fetch(modelPaths[i]);const content=await contentResponse.text();const parser=new DOMParser;const xmlDoc=parser.parseFromString(content,"text/xml");const expForIndexes="//*[local-name() = 'p']/text()";let nodes=xmlDoc.evaluate(expForIndexes,xmlDoc,null,XPathResult.ANY_TYPE,null);let result=nodes.iterateNext();const order=result.textContent.trim().split(" ").map(value=>{return parseInt(value)});const partOfPositionsId="mesh-positions-array";const expForPositions=`//*[local-name() = 'float_array'][substring(@id, string-length(@id) -`+`string-length('${partOfPositionsId}') + 1) = '${partOfPositionsId}']`;nodes=xmlDoc.evaluate(expForPositions,xmlDoc,null,XPathResult.ANY_TYPE,null);result=nodes.iterateNext();const positions=result.textContent.trim().split(" ").map(value=>{return parseFloat(value)});const partOfNormalsId="mesh-normals-array";const expForNormals=`//*[local-name() = 'float_array'][substring(@id, string-length(@id) -`+`string-length('${partOfNormalsId}') + 1) = '${partOfNormalsId}']`;nodes=xmlDoc.evaluate(expForNormals,xmlDoc,null,XPathResult.ANY_TYPE,null);result=nodes.iterateNext();const normals=result.textContent.trim().split(" ").map(value=>{return parseFloat(value)});const partOfTexCoordsId="mesh-map-0-array";const expForTexCoords=`//*[local-name() = 'float_array'][substring(@id, string-length(@id) -`+`string-length('${partOfTexCoordsId}') + 1) = '${partOfTexCoordsId}']`;nodes=xmlDoc.evaluate(expForTexCoords,xmlDoc,null,XPathResult.ANY_TYPE,null);result=nodes.iterateNext();const texCoords=result.textContent.trim().split(" ").map(value=>{return parseFloat(value)});const correctionMatrix=glMatrix.mat4.create();glMatrix.mat4.fromXRotation(correctionMatrix,-Math.PI/2);const vertPosResult=[];const normalsResult=[];const texCoordsResult=[];const amountOfTriangles=order.length/9;for(let i=0;i<amountOfTriangles;++i){for(let j=0;j<9;++j){if((i*9+j)%3===0){const vx=positions[order[i*9+j]*3+0];const vy=positions[order[i*9+j]*3+1];const vz=positions[order[i*9+j]*3+2];const oldPos=glMatrix.vec3.fromValues(vx,vy,vz);const newPos=glMatrix.vec3.create();glMatrix.vec3.transformMat4(newPos,oldPos,correctionMatrix);vertPosResult.push(newPos[0]);vertPosResult.push(newPos[1]);vertPosResult.push(newPos[2])}else if((i*9+j)%3===1){const nx=normals[order[i*9+j]*3+0];const ny=normals[order[i*9+j]*3+1];const nz=normals[order[i*9+j]*3+2];const oldNormal=glMatrix.vec3.fromValues(nx,ny,nz);const newNormal=glMatrix.vec3.create();glMatrix.vec3.transformMat4(newNormal,oldNormal,correctionMatrix);normalsResult.push(newNormal[0]);normalsResult.push(newNormal[1]);normalsResult.push(newNormal[2])}else if((i*9+j)%3===2){texCoordsResult.push(texCoords[order[i*9+j]*2+0]);texCoordsResult.push(texCoords[order[i*9+j]*2+1])}}}const vertPosBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vertPosBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertPosResult),gl.STATIC_DRAW);const normalBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,normalBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(normalsResult),gl.STATIC_DRAW);const texCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,texCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(texCoordsResult),gl.STATIC_DRAW);vertPosBuffers.push(vertPosBuffer);normalBuffers.push(normalBuffer);texCoordBuffers.push(texCoordBuffer);amounts.push(vertPosResult.length/3)}callback(vertPosBuffers,normalBuffers,texCoordBuffers,amounts)}let defaultProgram,edgeProgram;let player,floor,edge,topRoad;let debugDrawer,keyboard;let debugMode=true;const angularSpeed=200;const linearSpeed=150;let deltaTime,currentTime,lastTime;const lightPosition=glMatrix.vec3.fromValues(2,5,3);const forward=glMatrix.vec3.fromValues(0,0,1);const zUnit=glMatrix.vec3.fromValues(0,0,1);const playerRotation=glMatrix.quat.create();glMatrix.quat.rotationTo(playerRotation,zUnit,forward);const direction=glMatrix.vec3.fromValues(forward[0],forward[1],forward[2]);const projMatrix=glMatrix.mat4.create();const viewMatrix=glMatrix.mat4.create();const projViewMatrix=glMatrix.mat4.create();const world=new OIMO.World;world.gravity=new OIMO.Vec3(0,-9.80665,0);const pos=[[0,-.1,-0],[-4.1028,.632,1.898],[-4.1028,1.3637,-1.5373],[-.6353,1.3777,-3.4865]];const rot=[[0,0,-0,1],[.3111,0,-0,.9504],[0,0,-0,1],[0,0,-0,1]];const scale=[[5,.1,5],[.6513,.1,1.2664],[.6513,.1,2.5073],[4.0843,.1,.5283]];for(let i=0;i<pos.length;i++){const staticObjRBConfig=new OIMO.RigidBodyConfig;staticObjRBConfig.type=OIMO.RigidBodyType.STATIC;staticObjRBConfig.position=new OIMO.Vec3(pos[i][0],pos[i][1],pos[i][2]);const staticObjRigidBody=new OIMO.RigidBody(staticObjRBConfig);staticObjRigidBody.setOrientation(new OIMO.Quat(rot[i][0],rot[i][1],rot[i][2],rot[i][3]));const staticObjShapeConfig=new OIMO.ShapeConfig;staticObjShapeConfig.geometry=new OIMO.BoxGeometry(new OIMO.Vec3(scale[i][0],scale[i][1],scale[i][2]));staticObjRigidBody.addShape(new OIMO.Shape(staticObjShapeConfig));world.addRigidBody(staticObjRigidBody)}const playerRBConfig=new OIMO.RigidBodyConfig;playerRBConfig.type=OIMO.RigidBodyType.DYNAMIC;playerRBConfig.position=new OIMO.Vec3(0,3,0);const playerRigidBody=new OIMO.RigidBody(playerRBConfig);playerRigidBody.setRotationFactor(new OIMO.Vec3(0,1,0));playerRigidBody.setAngularDamping(10);playerRigidBody.setLinearDamping(3);const playerShapeConfig=new OIMO.ShapeConfig;const playerSize=.5;playerShapeConfig.geometry=new OIMO.SphereGeometry(playerSize);playerRigidBody.addShape(new OIMO.Shape(playerShapeConfig));world.addRigidBody(playerRigidBody);function main(){if(!initWebGLContext("renderCanvas")){return}initVertexBuffers(["assets/player.dae","assets/static_env.dae","assets/cube.dae","assets/top-road.dae"],(vertPosVBOs,normalVBOs,texCoordVBOs,amounts)=>{defaultProgram=createProgram("defaultVertexShader","defaultFragmentShader");edgeProgram=createProgram("edgeVertexShader","edgeFragmentShader");gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,true);const playerImage=document.getElementById("playerImage");const playerTexture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,playerTexture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,playerImage);player=new ObjectForGraphics(defaultProgram,[0,3,2],amounts[0],vertPosVBOs[0],normalVBOs[0],texCoordVBOs[0],playerTexture);player.scale=[playerSize,playerSize,playerSize];const floorImage=document.getElementById("staticEnvImage");const floorTexture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,floorTexture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,floorImage);floor=new ObjectForGraphics(defaultProgram,[0,0,0],amounts[1],vertPosVBOs[1],normalVBOs[1],texCoordVBOs[1],floorTexture);edge=new ObjectForEdge(edgeProgram,amounts[2],vertPosVBOs[2]);debugDrawer=new DebugDrawer(edge);debugDrawer.wireframe=true;world.setDebugDraw(debugDrawer);const topRoadImage=document.getElementById("topRoadImage");const topRoadTexture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,topRoadTexture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,topRoadImage);topRoad=new ObjectForGraphics(defaultProgram,[0,0,0],amounts[3],vertPosVBOs[3],normalVBOs[3],texCoordVBOs[3],topRoadTexture);init()})}main();function init(){keyboard=new Keyboard;glMatrix.mat4.perspective(projMatrix,55*Math.PI/180,1,.1,500);glMatrix.mat4.lookAt(viewMatrix,[0,7,10],[0,0,0],[0,1,0]);gl.useProgram(defaultProgram);const uLightPositionLocation=gl.getUniformLocation(defaultProgram,"uLightPosition");gl.uniform3fv(uLightPositionLocation,lightPosition);window.onresize=()=>{const w=gl.canvas.clientWidth;const h=gl.canvas.clientHeight;gl.canvas.width=w;gl.canvas.height=h;gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);glMatrix.mat4.perspective(projMatrix,55*Math.PI/180,w/h,.1,500);lastTime=Date.now();draw()};window.onresize(null);document.onkeydown=event=>{if(event.repeat)return;if(event.key==="b"){debugMode=!debugMode;if(debugMode){debugDrawer.debugMode=1}else{debugDrawer.debugMode=0}}}}function keyboardHandler(dt){if(keyboard.pressed("w")){const vy=playerRigidBody.getLinearVelocity().y;const impulse=new OIMO.Vec3(direction[0]*linearSpeed*dt,vy,direction[2]*linearSpeed*dt);playerRigidBody.setLinearVelocity(impulse)}if(keyboard.pressed("s")){const vy=playerRigidBody.getLinearVelocity().y;const impulse=new OIMO.Vec3(-direction[0]*linearSpeed*dt,vy,-direction[2]*linearSpeed*dt);playerRigidBody.setLinearVelocity(impulse)}if(keyboard.pressed("a")){const impulse=new OIMO.Vec3(0,angularSpeed*dt,0);playerRigidBody.setAngularVelocity(impulse)}if(keyboard.pressed("d")){const impulse=new OIMO.Vec3(0,-angularSpeed*dt,0);playerRigidBody.setAngularVelocity(impulse)}glMatrix.vec3.transformQuat(direction,forward,player.rotation)}function draw(){currentTime=Date.now();deltaTime=(currentTime-lastTime)/1e3;lastTime=currentTime;keyboardHandler(deltaTime);world.step(deltaTime);player.position[0]=playerRigidBody.getPosition().x;player.position[1]=playerRigidBody.getPosition().y;player.position[2]=playerRigidBody.getPosition().z;player.rotation[0]=playerRigidBody.getOrientation().x;player.rotation[1]=playerRigidBody.getOrientation().y;player.rotation[2]=playerRigidBody.getOrientation().z;player.rotation[3]=playerRigidBody.getOrientation().w;gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);glMatrix.mat4.mul(projViewMatrix,projMatrix,viewMatrix);player.draw(projViewMatrix);floor.draw(projViewMatrix);topRoad.draw(projViewMatrix);debugDrawer.projViewMatrix=projViewMatrix;if(debugMode){world.debugDraw()}requestAnimationFrame(draw)}