{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Boot.ts","src/Game.ts","src/Level.ts"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","FirstGame","Boot","_super","this","__extends","prototype","init","game","scale","scaleMode","Phaser","ScaleManager","SHOW_ALL","pageAlignHorizontally","pageAlignVertically","preload","load","image","spritesheet","create","state","start","State","Level","Game","_this","AUTO","add","window","onload","score","physics","startSystem","Physics","ARCADE","sprite","platforms","group","enableBody","ground","world","height","setTo","body","immovable","ledge","player","enable","bounce","y","gravity","collideWorldBounds","animations","stars","star","Math","random","scoreText","text","fontSize","fill","cursors","input","keyboard","createCursorKeys","update","arcade","collide","overlap","collect","velocity","x","left","isDown","play","right","stop","frame","up","touching","down","kill"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nexport namespace FirstGame\r\n{\r\n    export class Boot extends Phaser.State\r\n    {\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        init()\r\n        {\r\n            this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n            this.game.scale.pageAlignHorizontally = true;\r\n            this.game.scale.pageAlignVertically = true;\r\n        }\r\n\r\n        preload()\r\n        {\r\n            this.load.image('sky', './assets/sky.png');\r\n            this.load.image('ground', './assets/platform.png');\r\n            this.load.image('star', './assets/star.png');\r\n            this.load.spritesheet('dude', './assets/dude.png', 32, 48);\r\n        }\r\n\r\n        create()\r\n        {\r\n            this.game.state.start('Level');\r\n        }\r\n    }\r\n}\r\n","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nimport * as BootModule from \"./Boot\";\r\nimport Boot = BootModule.FirstGame.Boot;\r\n\r\nimport * as LevelModule from \"./Level\";\r\nimport Level = LevelModule.FirstGame.Level;\r\n\r\nexport namespace FirstGame\r\n{\r\n    export class Game extends Phaser.Game\r\n    {\r\n        constructor()\r\n        {\r\n            super(800, 600, Phaser.AUTO, '');\r\n            this.state.add('Boot', Boot);\r\n            this.state.add('Level', Level);\r\n            this.state.start('Boot');\r\n        }\r\n    }\r\n}\r\n\r\nwindow.onload = () =>\r\n{\r\n    new FirstGame.Game();\r\n};\r\n","export namespace FirstGame\r\n{\r\n    export class Level extends Phaser.State\r\n    {\r\n        constructor()\r\n        {\r\n            super();\r\n        }\r\n\r\n        platforms: Phaser.Group;\r\n        player: Phaser.Sprite;\r\n        cursors: Phaser.CursorKeys;\r\n        stars: Phaser.Group;\r\n        scoreText: Phaser.Text;\r\n        score: number;\r\n\r\n        init()\r\n        {\r\n            this.score = 0;\r\n        }\r\n\r\n        create()\r\n        {\r\n            this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n            this.game.add.sprite(0, 0, 'sky');\r\n\r\n            // Creating ground and platforms\r\n            this.platforms = this.game.add.group();\r\n            this.platforms.enableBody = true;\r\n\r\n            let ground: Phaser.Sprite = this.platforms.create(0, this.game.world.height - 64, 'ground');\r\n            ground.scale.setTo(2, 2);\r\n            ground.body.immovable = true;\r\n\r\n            let ledge: Phaser.Sprite = this.platforms.create(400, 400, 'ground');\r\n            ledge.body.immovable = true;\r\n\r\n            ledge = this.platforms.create(-150, 250, 'ground');\r\n            ledge.body.immovable = true;\r\n\r\n            //Creating player\r\n            this.player = this.game.add.sprite(32, this.game.world.height - 150, 'dude');\r\n\r\n            this.game.physics.enable(this.player);\r\n\r\n            this.player.body.bounce.y = 0.2;\r\n            this.player.body.gravity.y = 600;\r\n            this.player.body.collideWorldBounds = true;\r\n\r\n            // Adding Player animations\r\n            this.player.animations.add('left', [0, 1, 2, 3], 10, true);\r\n            this.player.animations.add('right', [5, 6, 7, 8], 10, true);\r\n\r\n            // Adding Stars\r\n            this.stars = this.game.add.group();\r\n            this.stars.enableBody = true;\r\n\r\n            for (let i = 0; i < 12; i++)\r\n            {\r\n                let star: Phaser.Sprite = this.stars.create(i * 70, 0, 'star');\r\n                star.body.gravity.y = 500;\r\n                star.body.bounce.y = 0.3 + Math.random() * 0.2;\r\n            }\r\n\r\n            // Adding Score Text\r\n            this.scoreText = this.game.add.text(16, 16, 'score: 0', { fontSize: 32, fill: '#000' });\r\n\r\n            // Adding keyboard input listener\r\n            this.cursors = this.game.input.keyboard.createCursorKeys();\r\n        }\r\n\r\n        update()\r\n        {\r\n            this.game.physics.arcade.collide(this.player, this.platforms);\r\n            this.game.physics.arcade.collide(this.stars, this.platforms);\r\n            this.game.physics.arcade.overlap(this.player, this.stars, this.collect, null, this);\r\n\r\n            this.player.body.velocity.x = 0;\r\n\r\n            if (this.cursors.left.isDown)\r\n            {\r\n                this.player.body.velocity.x = -200;\r\n                this.player.animations.play('left');\r\n            }\r\n            else if (this.cursors.right.isDown)\r\n            {\r\n                this.player.body.velocity.x = 200;\r\n                this.player.animations.play('right');\r\n            }\r\n            else\r\n            {\r\n                this.player.animations.stop();\r\n                this.player.frame = 4;\r\n            }\r\n\r\n            if (this.cursors.up.isDown && this.player.body.touching.down)\r\n            {\r\n                this.player.body.velocity.y = -450;\r\n            }\r\n        }\r\n\r\n        collect(player: Phaser.Sprite, star: Phaser.Sprite)\r\n        {\r\n            star.kill();\r\n\r\n            this.score += 10;\r\n            this.scoreText.text = 'Score: ' + this.score;\r\n        }\r\n    }\r\n}\r\n"]}