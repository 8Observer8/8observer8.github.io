{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/Boot.ts","src/Game.ts","src/Level.ts","src/Program.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nexport class Boot extends Phaser.State\r\n{\r\n    public constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    public preload()\r\n    {\r\n        this.load.image(\"megatron\", \"./assets/megatron.png\");\r\n        this.game.load.physics(\"physicsInfo\", \"./assets/physics.json\");\r\n    }\r\n\r\n    public create()\r\n    {\r\n        this.game.state.start(\"Level\");\r\n    }\r\n}","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nimport { Boot } from \"./Boot\";\r\nimport { Level } from \"./Level\";\r\n\r\nexport class Game extends Phaser.Game\r\n{\r\n    public constructor()\r\n    {\r\n        super(800, 600, Phaser.AUTO, \"content\");\r\n        this.state.add(\"Boot\", Boot, false);\r\n        this.state.add(\"Level\", Level, false);\r\n        this.state.start(\"Boot\");\r\n    }\r\n}\r\n","/// <reference path=\"./libs/phaser.d.ts\" />\r\n\r\nexport class Level extends Phaser.State\r\n{\r\n    private _player1: Phaser.Sprite;\r\n    private _player2: Phaser.Sprite;\r\n\r\n    public constructor()\r\n    {\r\n        super();\r\n    }\r\n\r\n    public create()\r\n    {\r\n        // #1\r\n        // this._player1 = this.game.add.sprite(this.game.width / 2, 150, \"megatron\");\r\n        // this._player2 = this.game.add.sprite(this.game.width / 2, this.game.height, \"megatron\");\r\n\r\n        // this.game.physics.startSystem(Phaser.Physics.P2JS);\r\n\r\n        // // Enabled physics on our sprites\r\n        // this.game.physics.p2.enable([this._player1, this._player2]);\r\n\r\n        // // Make our one body motionless\r\n        // this._player1.body.static = true;\r\n\r\n        // // Now create a sprite between our two bodies, parameters are rest length, stiffness and damping\r\n        // // Rest length is the length of the spring at rest ( where it's not under pressure )\r\n        // // Stiffness is the resistance to movement of the spring\r\n        // // Damping determines how fast the spring loses it's \"boing\"  Our low damping keeps our spring \"boinging\"\r\n        // // Boing is a word I made up to describe the up and down motion of a spring doing it's spring thing\r\n        // this.game.physics.p2.createSpring(this._player1, this._player2, 200, 2, 0.3);\r\n\r\n        // // Lets loop a timed event every 10 seconds that moves the one end of our spring back to the start\r\n        // // Mostly just so people that didn't see it run the first time in the browser have something to see!\r\n        // this.game.time.events.loop(Phaser.Timer.SECOND * 5, () =>\r\n        // {\r\n        //     this._player2.body.x = this.game.width / 2;\r\n        //     this._player2.body.y = this.game.height;\r\n        // }, this);\r\n\r\n        // #2\r\n        this._player1 = this.game.add.sprite(0, 0, \"megatron\");\r\n        this._player2 = this.game.add.sprite(0, 0, \"megatron\");\r\n\r\n        // Being lazy, positioning sprite after creation so we have a valid width/height\r\n        this._player1.position.set(this._player1.width / 2, 150);\r\n\r\n        // Now another sprite on the right side of the screen, down slightly\r\n        this._player2.position.set(this.game.width / 2, 150);\r\n\r\n        this.game.physics.startSystem(Phaser.Physics.P2JS);\r\n\r\n        // Passing in true while enabling physics on an object causes the debug renderer to draw the physics body\r\n        this.game.physics.p2.enable([this._player1, this._player2], true);\r\n\r\n        // You need to call clearShapes() to get rid of the existing bounding box\r\n        this._player1.body.clearShapes();\r\n        this._player2.body.clearShapes();\r\n\r\n        // Now load the polygon bounding data we created externally\r\n        this._player1.body.loadPolygon(\"physicsInfo\", \"megatron\");\r\n        this._player2.body.loadPolygon(\"physicsInfo\", \"megatron\");\r\n\r\n        // Now let's get this party started\r\n        this._player2.body.moveLeft(80);\r\n\r\n        // Finally, when the collision occurs, move back to the beginning and start over\r\n        this._player2.body.onBeginContact.add(\r\n            (body: any, bodyB: any, shapeA: any, shapeB: any, equation: any) =>\r\n        {\r\n            this._player2.body.x = this.game.width / 2;\r\n            this._player2.body.y = 150;\r\n        }, this);\r\n    }\r\n}\r\n","\r\nimport { Game } from \"./Game\";\r\n\r\nexport class Program\r\n{\r\n    public static Main()\r\n    {\r\n        new Game();\r\n    }\r\n}\r\n\r\nwindow.onload = () =>\r\n{\r\n    Program.Main();\r\n};\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}