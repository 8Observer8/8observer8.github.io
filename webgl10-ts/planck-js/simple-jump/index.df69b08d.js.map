{"mappings":"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","sources":["node_modules/planck-js/lib/index.js","node_modules/planck-js/lib/serializer/index.js","node_modules/planck-js/lib/World.js","node_modules/planck-js/lib/util/options.js","node_modules/planck-js/lib/util/common.js","node_modules/planck-js/lib/common/Vec2.js","node_modules/planck-js/lib/common/Math.js","node_modules/planck-js/lib/collision/BroadPhase.js","node_modules/planck-js/lib/Settings.js","node_modules/planck-js/lib/collision/AABB.js","node_modules/planck-js/lib/collision/DynamicTree.js","node_modules/planck-js/lib/util/Pool.js","node_modules/planck-js/lib/Solver.js","node_modules/planck-js/lib/Body.js","node_modules/planck-js/lib/common/Rot.js","node_modules/planck-js/lib/common/Sweep.js","node_modules/planck-js/lib/common/Transform.js","node_modules/planck-js/lib/common/Velocity.js","node_modules/planck-js/lib/common/Position.js","node_modules/planck-js/lib/Fixture.js","node_modules/planck-js/lib/Shape.js","node_modules/planck-js/lib/Contact.js","node_modules/planck-js/lib/common/Mat22.js","node_modules/planck-js/lib/Manifold.js","node_modules/planck-js/lib/collision/Distance.js","node_modules/planck-js/lib/common/stats.js","node_modules/planck-js/lib/common/Vec3.js","node_modules/planck-js/lib/common/Mat33.js","node_modules/planck-js/lib/Joint.js","node_modules/planck-js/lib/collision/TimeOfImpact.js","node_modules/planck-js/lib/util/Timer.js","node_modules/planck-js/lib/shape/CircleShape.js","node_modules/planck-js/lib/shape/EdgeShape.js","node_modules/planck-js/lib/shape/PolygonShape.js","node_modules/planck-js/lib/shape/ChainShape.js","node_modules/planck-js/lib/shape/BoxShape.js","node_modules/planck-js/lib/shape/CollidePolygon.js","node_modules/planck-js/lib/joint/DistanceJoint.js","node_modules/planck-js/lib/joint/FrictionJoint.js","node_modules/planck-js/lib/joint/GearJoint.js","node_modules/planck-js/lib/joint/RevoluteJoint.js","node_modules/planck-js/lib/joint/PrismaticJoint.js","node_modules/planck-js/lib/joint/MotorJoint.js","node_modules/planck-js/lib/joint/MouseJoint.js","node_modules/planck-js/lib/joint/PulleyJoint.js","node_modules/planck-js/lib/joint/RopeJoint.js","node_modules/planck-js/lib/joint/WeldJoint.js","node_modules/planck-js/lib/joint/WheelJoint.js","node_modules/planck-js/lib/shape/CollideCircle.js","node_modules/planck-js/lib/shape/CollideEdgeCircle.js","node_modules/planck-js/lib/shape/CollideCirclePolygone.js","node_modules/planck-js/lib/shape/CollideEdgePolygon.js","node_modules/gl-matrix/esm/common.js","node_modules/gl-matrix/esm/mat4.js","node_modules/gl-matrix/esm/vec3.js","Physics/Box2D/jump/falling-rectangles-webgl-parcel-ts/src/webgl-context.ts","Physics/Box2D/jump/falling-rectangles-webgl-parcel-ts/src/shader-program.ts","Physics/Box2D/jump/falling-rectangles-webgl-parcel-ts/src/main.ts","Physics/Box2D/jump/falling-rectangles-webgl-parcel-ts/src/keyboard.ts"],"sourcesContent":["exports.internal = {};\n\nexports.Serializer = require('./serializer');\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.Settings = require('./Settings');\n\nexports.internal.Sweep = require('./common/Sweep');\nexports.internal.stats = require('./common/stats'); // todo: remove this\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = exports.Settings;\n","var World = require('../World');\nvar Body = require('../Body');\nvar Joint = require('../Joint');\nvar Fixture = require('../Fixture');\nvar Shape = require('../Shape');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\n\nvar SID = 0;\n\nfunction Serializer(opts) {\n  opts = opts || {};\n\n  var rootClass = opts.rootClass || World;\n\n  var preSerialize = opts.preSerialize || function (obj) { return obj; };\n  var postSerialize = opts.postSerialize || function (data, obj) { return data; };\n\n  var preDeserialize = opts.preDeserialize || function (data) { return data; };\n  var postDeserialize = opts.postDeserialize || function (obj, data) { return obj; };\n\n  // This is used to create ref objects during serialize\n  var refTypes = {\n    'World': World,\n    'Body': Body,\n    'Joint': Joint,\n    'Fixture': Fixture,\n    'Shape': Shape,\n  };\n\n  // This is used by restore to deserialize objects and refs\n  var restoreTypes = Object.assign({\n    'Vec2': Vec2,\n    'Vec3': Vec3,\n  }, refTypes);\n\n  this.toJson = function (root) {\n    var json = [];\n\n    var queue = [root];\n    var refMap = {};\n\n    function storeRef(value, typeName) {\n      value.__sid = value.__sid || ++SID;\n      if (!refMap[value.__sid]) {\n        queue.push(value);\n        var index = json.length + queue.length;\n        var ref = {\n          refIndex: index,\n          refType: typeName\n        };\n        refMap[value.__sid] = ref;\n      }\n      return refMap[value.__sid];\n    }\n\n    function serialize(obj) {\n      obj = preSerialize(obj);\n      var data = obj._serialize();\n      data = postSerialize(data, obj);\n      return data;\n    }\n\n    function toJson(value, top) {\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      if (typeof value._serialize === 'function') {\n        if (value !== top) {\n          for (var typeName in refTypes) {\n            if (value instanceof refTypes[typeName]) {\n              return storeRef(value, typeName);\n            }\n          }\n        }\n        value = serialize(value);\n      }\n      if (Array.isArray(value)) {\n        var newValue = [];\n        for (var key = 0; key < value.length; key++) {\n          newValue[key] = toJson(value[key]);\n        }\n        value = newValue;\n\n      } else {\n        var newValue = {};\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            newValue[key] = toJson(value[key]);\n          }\n        }\n        value = newValue;\n      }\n      return value;\n    }\n\n    while (queue.length) {\n      var obj = queue.shift();\n      var str = toJson(obj, obj);\n      json.push(str);\n    }\n\n    return json;\n  };\n\n  this.fromJson = function (json) {\n    var refMap = {};\n\n    function deserialize(cls, data, ctx) {\n      data = preDeserialize(data);\n      var obj = cls._deserialize(data, ctx, restoreRef);\n      obj = postDeserialize(obj, data);\n      return obj;\n    }\n\n    function restoreRef(cls, ref, ctx) {\n      if (!ref.refIndex) {\n        return cls && cls._deserialize && deserialize(cls, ref, ctx);\n      }\n      cls = restoreTypes[ref.refType] || cls;\n      var index = ref.refIndex;\n      if (!refMap[index]) {\n        var data = json[index];\n        var obj = deserialize(cls, data, ctx);\n        refMap[index] = obj;\n      }\n      return refMap[index];\n    }\n\n    var root = rootClass._deserialize(json[0], null, restoreRef);\n\n    return root;\n  }\n}\n\nmodule.exports = Serializer;\n\nvar serializer = new Serializer();\nmodule.exports.toJson = serializer.toJson;\nmodule.exports.fromJson = serializer.fromJson;\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Joint = require('./Joint');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = true]\n * @prop {boolean} [continuousPhysics = true]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WorldDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints,\n  };\n};\n\nWorld._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  if (data.bodies) {\n    for(var i = data.bodies.length - 1; i >= 0; i -= 1) {\n      world._addBody(restore(Body, data.bodies[i], world));\n    }\n  }\n\n  if (data.joints) {\n    for(var i = data.joints.length - 1; i >= 0; i--) {\n      world.createJoint(restore(Joint, data.joints[i], world));\n    }\n  }\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * @internal Used for deserialize.\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n  this.publish('pre-step', timeStep);\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n\n  this.publish('post-step', timeStep);\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(input, defaults) {\n  if (input === null || typeof input === 'undefined') {\n    input = {};\n  }\n\n  var output = Object.assign({}, input);\n\n  for ( var key in defaults) {\n    if (defaults.hasOwnProperty(key) && typeof input[key] === 'undefined') {\n      output[key] = defaults[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(defaults);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (defaults.propertyIsEnumerable(symbol) && typeof input[key] === 'undefined') {\n        output[symbol] = defaults[symbol];\n      }\n    }\n  }\n\n  return output;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar native = Math;\nvar math = module.exports = Object.create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n  return this;\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    bullet: this.m_bulletFlag,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  if (data.fixtures) {\n    for (var i = data.fixtures.length - 1; i >= 0; i--) {\n      var fixture = restore(Fixture, data.fixtures[i], body);\n      body._addFixture(fixture);\n    }\n  }\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * @internal Used for deserialize.\n */\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n  };\n};\n\nFixture._deserialize = function(data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.setFilterGroupIndex = function(groupIndex) {\n  return this.m_filterGroupIndex = groupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.setFilterCategoryBits = function(categoryBits) {\n  this.m_filterCategoryBits = categoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\nFixture.prototype.setFilterMaskBits = function(maskBits) {\n  this.m_filterMaskBits = maskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} that\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex === this.m_filterGroupIndex && that.m_filterGroupIndex !== 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collideA = (that.m_filterMaskBits & this.m_filterCategoryBits) !== 0;\n  var collideB = (that.m_filterCategoryBits & this.m_filterMaskBits) !== 0;\n  var collide = collideA && collideB;\n  return collide;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    var cA = pointA.clone().addMul(radiusA, normal);\n    var cB = pointB.clone().addMul(-radiusB, normal);\n    points[0] = Vec2.mid(cA, cB);\n    separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex, b.ex),\n    Vec3.add(a.ey, b.ey),\n    Vec3.add(a.ez, b.ez)\n  );\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\nJoint.TYPES = {};\n\nJoint._deserialize = function(data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.indexA;// integer\n  this.indexB;// integer\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = Object.create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = Object.create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = Object.create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data, fixture, restore) {\n  var vertices = [];\n  if (data.vertices) {\n    for (var i = 0; i < data.vertices.length; i++) {\n      vertices.push(restore(Vec2, data.vertices[i]));\n    }\n  }\n\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = []; // [Settings.maxPolygonVertices];\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  this.m_vertices = [];\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = Object.create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n *\n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  const data = {\n    type: this.m_type,\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n  if (this.m_prevVertex) {\n    data.prevVertex = this.m_prevVertex;\n  }\n  if (this.m_nextVertex) {\n    data.nextVertex = this.m_nextVertex;\n  }\n  return data;\n};\n\nChainShape._deserialize = function(data, fixture, restore) {\n  var vertices = [];\n  if (data.vertices) {\n    for (var i = 0; i < data.vertices.length; i++) {\n      vertices.push(restore(Vec2, data.vertices[i]));\n    }\n  }\n  var shape = new ChainShape(vertices, data.isLoop);\n  if (data.prevVertex) {\n    shape.setPrevVertex(data.prevVertex);\n  }\n  if (data.nextVertex) {\n    shape.setNextVertex(data.nextVertex);\n  }\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices = [];\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n  this.m_vertices[vertices.length] = Vec2.clone(vertices[0]);\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\nChainShape.prototype._reset = function() {\n  if (this.m_isLoop) {\n    this._createLoop(this.m_vertices);\n  } else {\n    this._createChain(this.m_vertices);\n  }\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype.setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype.setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = Object.create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = Object.create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = Vec2.clone(anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero());\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\nDistanceJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias,\n  };\n};\n\nDistanceJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nDistanceJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.length > 0) {\n    this.m_length = +def.length;\n  } else if (def.length < 0) { // don't change length\n  } else if (def.anchorA || def.anchorA || def.anchorA || def.anchorA) {\n    this.m_length = Vec2.distance(\n        this.m_bodyA.getWorldPoint(this.m_localAnchorA),\n        this.m_bodyB.getWorldPoint(this.m_localAnchorB)\n    );\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nFrictionJoint.TYPE = 'friction-joint';\nJoint.TYPES[FrictionJoint.TYPE] = FrictionJoint;\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = Object.create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nFrictionJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n  };\n};\n\nFrictionJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new FrictionJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nFrictionJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\nJoint.TYPES[GearJoint.TYPE] = GearJoint;\n\nGearJoint._super = Joint;\nGearJoint.prototype = Object.create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\nGearJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    joint1: this.m_joint1,\n    joint2: this.m_joint2,\n    ratio: this.m_ratio,\n\n    // _constant: this.m_constant,\n  };\n};\n\nGearJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.joint1 = restore(Joint, data.joint1, world);\n  data.joint2 = restore(Joint, data.joint2, world);\n  var joint = new GearJoint(data);\n  // if (data._constant) joint.m_constant = data._constant;\n  return joint;\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\nJoint.TYPES[RevoluteJoint.TYPE] = RevoluteJoint;\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = Object.create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n *\n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n *\n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB =  Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nRevoluteJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerAngle: this.m_lowerAngle,\n    upperAngle: this.m_upperAngle,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nRevoluteJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RevoluteJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nRevoluteJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nRevoluteJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\nJoint.TYPES[PrismaticJoint.TYPE] = PrismaticJoint;\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = Object.create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0));\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\nPrismaticJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerTranslation: this.m_lowerTranslation,\n    upperTranslation: this.m_upperTranslation,\n    maxMotorForce: this.m_maxMotorForce,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nPrismaticJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.localAxisA = Vec2(data.localAxisA);\n  var joint = new PrismaticJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nPrismaticJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\nPrismaticJoint.prototype.getMaxMotorForce = function() {\n  return this.m_maxMotorForce;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nMotorJoint.TYPE = 'motor-joint';\nJoint.TYPES[MotorJoint.TYPE] = MotorJoint;\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = Object.create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = Math.isFinite(def.linearOffset) ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n  this.m_angularOffset = Math.isFinite(def.angularOffset) ? def.angularOffset : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nMotorJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n    correctionFactor: this.m_correctionFactor,\n\n    linearOffset: this.m_linearOffset,\n    angularOffset: this.m_angularOffset,\n  };\n};\n\nMotorJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new MotorJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nMotorJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nMouseJoint.TYPE = 'mouse-joint';\nJoint.TYPES[MouseJoint.TYPE] = MouseJoint;\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = Object.create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\nMouseJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    target: this.m_targetA,\n    maxForce: this.m_maxForce,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    _localAnchorB: this.m_localAnchorB,\n  };\n};\n\nMouseJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.target = Vec2(data.target);\n  var joint = new MouseJoint(data);\n  if (data._localAnchorB) {\n    joint.m_localAnchorB = data._localAnchorB;\n  }\n  return joint;\n};\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\nJoint.TYPES[PulleyJoint.TYPE] = PulleyJoint;\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = Object.create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\nPulleyJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    groundAnchorA: this.m_groundAnchorA,\n    groundAnchorB: this.m_groundAnchorB,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    lengthA: this.m_lengthA,\n    lengthB: this.m_lengthB,\n    ratio: this.m_ratio,\n  };\n};\n\nPulleyJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new PulleyJoint(data);\n  return joint;\n};\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\nJoint.TYPES[RopeJoint.TYPE] = RopeJoint;\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = Object.create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\nRopeJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    maxLength: this.m_maxLength,\n  };\n};\n\nRopeJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RopeJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWeldJoint.TYPE = 'weld-joint';\nJoint.TYPES[WeldJoint.TYPE] = WeldJoint;\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = Object.create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nWeldJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    \n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nWeldJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WeldJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWeldJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWheelJoint.TYPE = 'wheel-joint';\nJoint.TYPES[WheelJoint.TYPE] = WheelJoint;\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = Object.create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n *\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || def.localAxis || Vec2.neo(1.0, 0.0));\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\nWheelJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    enableMotor: this.m_enableMotor,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n  };\n};\n\nWheelJoint._deserialize = function(data, world, restore) {\n  data = Object.assign({}, data);\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WheelJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWheelJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n","/*\n * Planck.js\n * The MIT License\n * Copyright (c) 2021 Erin Catto, Ali Shakiba\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","export let gl: WebGLRenderingContext;\r\n\r\nexport function initWebGLContext(canvasName: string): boolean\r\n{\r\n    const canvas = document.getElementById(canvasName);\r\n    if (!canvas)\r\n    {\r\n        console.log(`Failed to get a canvas element with the name: \"${canvasName}\"`);\r\n        return false;\r\n    }\r\n    const options: WebGLContextAttributes = {\r\n        alpha: false, premultipliedAlpha: false\r\n    }\r\n    gl = (canvas as HTMLCanvasElement).getContext(\"webgl\", options) as WebGLRenderingContext;\r\n    return true;\r\n}","import { gl } from \"./webgl-context\";\r\n\r\nexport function createProgram(vertShaderSource: string, fragShaderSource: string): WebGLProgram | null\r\n{\r\n    const vShader = gl.createShader(gl.VERTEX_SHADER) as WebGLShader;\r\n    gl.shaderSource(vShader, vertShaderSource as string);\r\n    gl.compileShader(vShader);\r\n    let ok = gl.getShaderParameter(vShader, gl.COMPILE_STATUS);\r\n    if (!ok)\r\n    {\r\n        console.log(\"vert: \" + gl.getShaderInfoLog(vShader));\r\n        return null;\r\n    };\r\n\r\n    const fShader = gl.createShader(gl.FRAGMENT_SHADER) as WebGLShader;\r\n    gl.shaderSource(fShader, fragShaderSource as string);\r\n    gl.compileShader(fShader);\r\n    ok = gl.getShaderParameter(vShader, gl.COMPILE_STATUS);\r\n    if (!ok)\r\n    {\r\n        console.log(\"frag: \" + gl.getShaderInfoLog(fShader));\r\n        return null;\r\n    };\r\n\r\n    const program = gl.createProgram() as WebGLProgram;\r\n    gl.attachShader(program, vShader);\r\n    gl.attachShader(program, fShader);\r\n    gl.bindAttribLocation(program, 0, \"aPosition\");\r\n    gl.linkProgram(program);\r\n    ok = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (!ok)\r\n    {\r\n        console.log(\"link: \" + gl.getProgramInfoLog(program));\r\n        return null;\r\n    };\r\n    gl.useProgram(program);\r\n\r\n    return program;\r\n}\r\n","import * as pl from \"planck-js\";\r\nimport { mat4, vec3 } from \"gl-matrix\";\r\nimport { createProgram } from \"./shader-program\";\r\nimport { gl, initWebGLContext } from \"./webgl-context\";\r\nimport Keyboard from \"./keyboard\";\r\n\r\nconst groundPos = vec3.fromValues(200, 350, 0);\r\nconst groundSize = vec3.fromValues(380, 50, 1);\r\n\r\nconst platformPos: vec3[] = [];\r\nconst platformSize: vec3[] = [];\r\n\r\nplatformPos.push(vec3.fromValues(100, 200, 0));\r\nplatformSize.push(vec3.fromValues(100, 30, 1));\r\n\r\nplatformPos.push(vec3.fromValues(300, 100, 0));\r\nplatformSize.push(vec3.fromValues(100, 30, 1));\r\n\r\nconst boxPos = vec3.fromValues(200, 25, 10);\r\nconst boxSize = vec3.fromValues(50, 50, 1);\r\nlet boxBody: pl.Body;\r\nlet boxLinearVelocity: pl.Vec2;\r\n\r\nconst gravity = pl.Vec2(0, 35);\r\nconst world = pl.World(gravity);\r\nconst worldScale = 30;\r\n\r\nconst projViewMatrix = mat4.create();\r\nconst modelMatrix = mat4.create();\r\nconst mvpMatrix = mat4.create();\r\nlet uMvpLocation: WebGLUniformLocation;\r\nlet uColorLocation: WebGLUniformLocation;\r\n\r\nlet currentTime: number;\r\nlet deltaTime: number;\r\nlet lastTime: number;\r\n\r\nlet keyboard = new Keyboard()\r\n\r\ninit();\r\n\r\nasync function init()\r\n{\r\n    if (!initWebGLContext(\"renderCanvas\")) return;\r\n\r\n    let response = await fetch(\"assets/shaders/default.vert\");\r\n    const vertShaderSrc = await response.text();\r\n\r\n    response = await fetch(\"assets/shaders/default.frag\");\r\n    const fragShaderSrc = await response.text();\r\n\r\n    const program = createProgram(vertShaderSrc, fragShaderSrc);\r\n    if (!program) return;\r\n    gl.useProgram(program);\r\n\r\n    uMvpLocation = gl.getUniformLocation(\r\n        program as WebGLProgram, \"uMvpMatrix\") as WebGLUniformLocation;\r\n\r\n    const projMatrix = mat4.create();\r\n    mat4.ortho(projMatrix, 0, 400, 400, 0, 100, -100);\r\n\r\n    const viewMatrix = mat4.create();\r\n    mat4.lookAt(viewMatrix, [0, 0, 90], [0, 0, 0], [0, 1, 0]);\r\n\r\n    mat4.mul(projViewMatrix, projMatrix, viewMatrix);\r\n\r\n    uColorLocation = gl.getUniformLocation(\r\n        program as WebGLProgram, \"uColor\") as WebGLUniformLocation;\r\n\r\n    const vertPositions = [\r\n        -0.5, -0.5, 0,\r\n        -0.5, 0.5, 0,\r\n        0.5, -0.5, 0,\r\n        0.5, -0.5, 0,\r\n        -0.5, 0.5, 0,\r\n        0.5, 0.5, 0\r\n    ];\r\n\r\n    const vertPosBuffer = gl.createBuffer() as WebGLBuffer;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertPosBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertPositions), gl.STATIC_DRAW);\r\n\r\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\r\n    gl.enableVertexAttribArray(0);\r\n\r\n    gl.clearColor(0.862, 0.980, 0.972, 1.0);\r\n\r\n    // Groound\r\n    let pos = pl.Vec2(groundPos[0] / worldScale, groundPos[1] / worldScale);\r\n    const groundBody = world.createBody({ position: pos, type: \"static\" });\r\n    let hx = groundSize[0] / worldScale / 2;\r\n    let hy = groundSize[1] / worldScale / 2;\r\n    const groundShape = pl.Box(hx, hy);\r\n    groundBody.createFixture(groundShape, { friction: 0.9 });\r\n\r\n    // Box\r\n    pos = pl.Vec2(boxPos[0] / worldScale, boxPos[1] / worldScale);\r\n    boxBody = world.createBody({ position: pos, type: \"dynamic\" });\r\n    hx = boxSize[0] / worldScale / 2;\r\n    hy = boxSize[1] / worldScale / 2;\r\n    const boxShape = pl.Box(hx, hy);\r\n    boxBody.createFixture(boxShape, { friction: 0.9 });\r\n    boxBody.setFixedRotation(true);\r\n\r\n    // Platforms\r\n    for (let i = 0; i < platformPos.length; i++)\r\n    {\r\n        const pos = pl.Vec2(platformPos[i][0] / worldScale, platformPos[i][1] / worldScale);\r\n        const platformBody = world.createBody({ position: pos, type: \"static\" });\r\n        const hx = platformSize[i][0] / worldScale / 2;\r\n        const hy = platformSize[i][1] / worldScale / 2;\r\n        const platformShape = pl.Box(hx, hy);\r\n        platformBody.createFixture(platformShape, { friction: 0.9 });\r\n    }\r\n\r\n    lastTime = Date.now();\r\n    animationLoop();\r\n}\r\n\r\nfunction animationLoop()\r\n{\r\n    requestAnimationFrame(animationLoop);\r\n\r\n    currentTime = Date.now();\r\n    deltaTime = (currentTime - lastTime) / 1000;\r\n    lastTime = currentTime;\r\n\r\n    world.step(deltaTime, 6, 2);\r\n\r\n    boxLinearVelocity = boxBody.getLinearVelocity();\r\n\r\n    if (keyboard.pressed(\"ArrowUp\") || keyboard.pressed(\"w\") || keyboard.pressed(\" \"))\r\n    {\r\n        boxLinearVelocity.y = -15;\r\n    }\r\n\r\n    if (keyboard.pressed(\"ArrowLeft\") || keyboard.pressed(\"a\"))\r\n    {\r\n        boxLinearVelocity.x = -5;\r\n    }\r\n\r\n    if (keyboard.pressed(\"ArrowRight\") || keyboard.pressed(\"d\"))\r\n    {\r\n        boxLinearVelocity.x = 5;\r\n    }\r\n\r\n    boxBody.setLinearVelocity(boxLinearVelocity);\r\n\r\n    boxPos[0] = boxBody.getPosition().x * worldScale;\r\n    boxPos[1] = boxBody.getPosition().y * worldScale;\r\n\r\n    world.clearForces();\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    // Ground\r\n    gl.uniform3fv(uColorLocation, [0.450, 0.815, 0.443]);\r\n    mat4.identity(modelMatrix);\r\n    mat4.translate(modelMatrix, modelMatrix, groundPos);\r\n    mat4.scale(modelMatrix, modelMatrix, groundSize);\r\n    mat4.mul(mvpMatrix, projViewMatrix, modelMatrix);\r\n    gl.uniformMatrix4fv(uMvpLocation, false, mvpMatrix);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n    // Box\r\n    gl.uniform3fv(uColorLocation, [1, 0.776, 0.4]);\r\n    mat4.identity(modelMatrix);\r\n    mat4.translate(modelMatrix, modelMatrix, boxPos);\r\n    mat4.scale(modelMatrix, modelMatrix, boxSize);\r\n    mat4.mul(mvpMatrix, projViewMatrix, modelMatrix);\r\n    gl.uniformMatrix4fv(uMvpLocation, false, mvpMatrix);\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n    // Platforms\r\n    for (let i = 0; i < platformPos.length; i++)\r\n    {\r\n        gl.uniform3fv(uColorLocation, [0.450, 0.815, 0.443]);\r\n        mat4.identity(modelMatrix);\r\n        mat4.translate(modelMatrix, modelMatrix, platformPos[i]);\r\n        mat4.scale(modelMatrix, modelMatrix, platformSize[i]);\r\n        mat4.mul(mvpMatrix, projViewMatrix, modelMatrix);\r\n        gl.uniformMatrix4fv(uMvpLocation, false, mvpMatrix);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n    }\r\n}\r\n","\r\ninterface KeyType\r\n{\r\n    [key: string]: boolean;\r\n}\r\n\r\nexport default class Keyboard\r\n{\r\n    private keys: KeyType = {};\r\n\r\n    public constructor()\r\n    {\r\n        document.addEventListener(\"keydown\", (event) => { this.onKeyChange(event, true); }, true);\r\n        document.addEventListener(\"keyup\", (event) => { this.onKeyChange(event, false); }, false);\r\n    }\r\n\r\n    public pressed(key: string): boolean\r\n    {\r\n        return this.keys[key];\r\n    }\r\n\r\n    private onKeyChange(event: KeyboardEvent, pressed: boolean): void\r\n    {\r\n        this.keys[event.key] = pressed;\r\n    }\r\n}\r\n"],"names":["$589bb9fe35cd7df4$export$454b5eaffc99ebf6","$589bb9fe35cd7df4$export$ac4bca90992eed1","$589bb9fe35cd7df4$export$812cd9544993280d","$589bb9fe35cd7df4$export$e71c4d32a2263218","$589bb9fe35cd7df4$export$c72f6eaae7b9adff","$hvlqD","parcelRequire","$3a97a726577a8032$var$SID","$3a97a726577a8032$var$Serializer","opts","rootClass","preSerialize","obj","postSerialize","data","preDeserialize","postDeserialize","refTypes","World","Body","$8kh7u","Joint","$jrVnt","Fixture","$gGjtn","Shape","$eacC4","restoreTypes","Object","assign","Vec2","$8o39l","Vec3","$fki3m","this","toJson","root","json","queue","refMap","storeRef","value","typeName","__sid","push","ref","refIndex","length","refType","top","_serialize","Array","isArray","newValue","key","hasOwnProperty","obj1","shift","str","fromJson","deserialize","cls","ctx","_deserialize","restoreRef","index","module","exports","$3a97a726577a8032$var$serializer","DEBUG","$cbe5f436188ca3dd$var$_ASSERT","ASSERT","$cbe5f436188ca3dd$var$World","$cbe5f436188ca3dd$var$WorldDef","gravity","zero","allowSleep","warmStarting","continuousPhysics","subStepping","blockSolve","velocityIterations","positionIterations","def","isValid","$ecDm3","m_solver","$byzhY","m_broadPhase","$gDbaE","m_contactList","m_contactCount","m_bodyList","m_bodyCount","m_jointList","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","clone","m_clearForces","m_newFixture","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","addPair","createContact","bind","prototype","bodies","joints","b","getBodyList","getNext","j","getJointList","context","restore","world","i","_addBody","createJoint","getContactList","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","isLocked","setAllowSleeping","flag","m_next","setAwake","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","body","m_force","setZero","m_torque","queryAABB","aabb","queryCallback","$bVyf9","assert","broadPhase","query","proxyId","proxy","getUserData","fixture","rayCast","point1","point2","reportFixtureCallback","maxFraction","p1","p2","input","childIndex","output","fraction","point","add","mul","normal","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","shiftOrigin","newOrigin","m_xf","p","sub","m_sweep","c0","c","m_prev","createBody","angle","position","createDynamicBody","type","createKinematicBody","destroyBody","m_destroyed","je","je0","next","publish","joint","destroyJoint","ce","ce0","destroyContact","contact","f","m_fixtureList","f0","destroyProxies","m_bodyA","m_bodyB","m_edgeA","other","prev","m_edgeB","m_collideConnected","edge","flagForFiltering","bodyA","bodyB","$cbe5f436188ca3dd$var$s_step","TimeStep","step","timeStep","findNewContacts","reset","updateContacts","solveWorld","m_islandFlag","isStatic","synchronizeFixtures","solveWorldTOI","updatePairs","proxyA","proxyB","fixtureA","fixtureB","indexA","indexB","getBody","fA","getFixtureA","fB","getFixtureB","iA","getChildIndexA","iB","getChildIndexB","shouldCollide","$f6rGq","create","next_c","m_filterFlag","activeA","isAwake","activeB","proxyIdA","m_proxies","proxyIdB","testOverlap","update","destroy","_listeners","on","name","listener","off","listeners","indexOf","splice","arg1","arg2","arg3","l","call","beginContact","endContact","preSolve","oldManifold","postSolve","impulse","propertyIsEnumerable","defaults","getOwnPropertySymbols","symbols","symbol","$8aef9493a782bd61$export$1c9f709888824e05","$8aef9493a782bd61$export$a7a9523472993e97","$8aef9493a782bd61$var$_DEBUG","$8aef9493a782bd61$var$_ASSERT","console","log","apply","arguments","statement","err","Error","$61b3021a6b5c1b83$var$_DEBUG","$61b3021a6b5c1b83$var$_ASSERT","$61b3021a6b5c1b83$var$Vec2","x","y","neo","v","toString","JSON","stringify","$aah62","isFinite","o","debug","set","wSet","a","w","setCombine","setMul","wAdd","addCombine","addMul","wSub","subCombine","subMul","m","lengthOf","lengthSquared","normalize","EPSILON","invLength","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","$7668198b61e4a59d$var$_DEBUG","$7668198b61e4a59d$var$_ASSERT","$7668198b61e4a59d$var$native","Math","$7668198b61e4a59d$var$math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","$c1b8f42c10d44dc2$var$_ASSERT","$c1b8f42c10d44dc2$var$BroadPhase","m_tree","$gs8T1","m_proxyCount","m_moveBuffer","aabbA","getFatAABB","aabbB","$l2alD","getHeight","getMaxBalance","getAreaRatio","rayCastCallback","createProxy","userData","bufferMove","destroyProxy","unbufferMove","moveProxy","displacement","touchProxy","addPairCallback","m_callback","m_queryProxyId","pop","fatAABB","userDataA","userDataB","$7201f833eae4737e$var$Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","$f501cfc18dc8047a$var$_DEBUG","$f501cfc18dc8047a$var$_ASSERT","$f501cfc18dc8047a$var$AABB","lowerBound","upperBound","d","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","absD","inv_d","t1","t2","s","temp","$bfa62786855e2361$var$_ASSERT","$bfa62786855e2361$var$TreeNode","id","parent","child1","child2","height","$bfa62786855e2361$var$DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","$iynuR","isLeaf","node","allocateNode","allocate","freeNode","release","$9MRkU","insertLeaf","removeLeaf","leaf","leafAABB","area","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","C","F","G","D","E","rootArea","totalArea","it","$bfa62786855e2361$var$iteratorPool","preorder","computeHeight","height1","height2","validateStructure","validateMetrics","validate","maxBalance","rebuildBottomUp","nodes","count","minCost","iMin","jMin","aabbi","aabbj","stack","$bfa62786855e2361$var$stackPool","r","abs_v","segmentAABB","t","subInput","$bfa62786855e2361$var$inputPool","h","$bfa62786855e2361$var$Iterator","iterator","close","parents","states","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","n","size","item","$869e3e5366f3f82b$var$_DEBUG","$869e3e5366f3f82b$var$_ASSERT","$869e3e5366f3f82b$var$Solver","$869e3e5366f3f82b$var$TimeStep","$869e3e5366f3f82b$var$TOIInput","$hYw2e","Input","$869e3e5366f3f82b$var$TOIOutput","Output","$6KczB","Proxy","Cache","dt","inv_dt","inv_dt0","dtRatio","m_world","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","isActive","isEnabled","isTouching","sensorA","m_fixtureA","m_isSensor","sensorB","m_fixtureB","solveIsland","m_linearVelocity","m_angularVelocity","a0","isDynamic","m_gravityScale","m_invMass","m_invI","m_linearDamping","m_angularDamping","c_position","c_velocity","initConstraint","printBodies","initVelocityConstraint","warmStartConstraint","initVelocityConstraints","solveVelocityConstraints","solveVelocityConstraint","storeConstraintImpulses","translation","ratio","rotation","positionSolved","minSeparation","separation","solvePositionConstraint","contactsOkay","jointsOkay","jointOkay","solvePositionConstraints","synchronizeTransform","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","m_autoSleepFlag","m_sleepTime","tag","$869e3e5366f3f82b$var$s_subStep","$869e3e5366f3f82b$var$ContactImpulse","normalImpulses","tangentImpulses","alpha0","m_toiFlag","m_toiCount","m_toi","minContact","minAlpha","alpha","isSensor","bA","bB","collideA","isBullet","collideB","advance","getShape","sweepA","sweepB","tMax","beta","state","e_touching","backup1","backup2","backup","solveIslandTOI","setEnabled","subStep","toiA","toiB","solvePositionConstraintTOI","v_points","normalImpulse","tangentImpulse","$60fd78a3f054ce8e$var$_ASSERT","$60fd78a3f054ce8e$var$Body","$60fd78a3f054ce8e$var$staticBody","STATIC","$60fd78a3f054ce8e$var$kinematicBody","KINEMATIC","$60fd78a3f054ce8e$var$dynamicBody","DYNAMIC","$60fd78a3f054ce8e$var$BodyDef","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","awake","active","m_awakeFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_userData","m_type","m_mass","m_I","$6a2BC","identity","q","setAngle","$8gqWb","setTransform","$fpvSw","$e8qxR","$60fd78a3f054ce8e$var$MassData","mass","center","I","fixtures","getAngle","_addFixture","isWorldLocked","getWorld","setUserData","getFixtureList","isKinematic","setStatic","setType","setDynamic","setKinematic","getType","resetMassData","forward","proxyCount","setBullet","isSleepingAllowed","setSleepingAllowed","setActive","createProxies","isFixedRotation","setFixedRotation","getTransform","synchronize","xf","getPosition","setPosition","getWorldCenter","getLocalCenter","localCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","localPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","getMassData","m_density","massData","oldCenter","setLocalCenter","setMassData","applyForce","force","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","applyAngularImpulse","that","jn","createFixture","shape","fixdef","destroyFixture","m_body","found","mulVec2","getWorldVector","localVector","$aVWN5","getLocalPoint","mulTVec2","getLocalVector","worldVector","$7f5cd4df72151057$var$_DEBUG","$7f5cd4df72151057$var$_ASSERT","$7f5cd4df72151057$var$Rot","setIdentity","rot","sin","cos","atan2","getXAxis","getYAxis","qr","mulRot","mulSub","mulT","mulTRot","$6044b68d6dc1af78$var$_ASSERT","$6044b68d6dc1af78$var$Sweep","$47c5b2b8294a582c$var$_DEBUG","$47c5b2b8294a582c$var$_ASSERT","$47c5b2b8294a582c$var$Transform","arr","mulAll","mulFn","mulXf","px","py","mulTXf","$02a7d860846415d0$var$Position","$c24fac7d37701c2f$var$_ASSERT","$c24fac7d37701c2f$var$Fixture","$c24fac7d37701c2f$var$FixtureDef","friction","restitution","density","filterGroupIndex","filterCategoryBits","filterMaskBits","$c24fac7d37701c2f$var$FixtureProxy","m_friction","m_restitution","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","getChildCount","_reset","setSensor","sensor","getDensity","setDensity","getFriction","setFriction","getRestitution","setRestitution","testPoint","computeMass","getAABB","computeAABB","xf1","xf2","aabb1","aabb2","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","setFilterGroupIndex","getFilterCategoryBits","setFilterCategoryBits","getFilterMaskBits","setFilterMaskBits","$a4fbc8888abce07c$var$Shape","m_radius","TYPES","clazz","getRadius","_clone","transform","computeDistanceProxy","$afece3df259a5207$var$_ASSERT","$afece3df259a5207$var$ContactEdge","$afece3df259a5207$var$Contact","evaluateFcn","m_nodeA","m_nodeB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","$hyFEM","$afece3df259a5207$var$mixFriction","$afece3df259a5207$var$mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_bulletHitFlag","v_normal","v_normalMass","$5MFA1","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","$afece3df259a5207$var$VelocityConstraintPoint","rA","rB","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","shapeA","shapeB","manifold","getManifold","pointCount","localNormal","cp","points","vcp","getWorldManifold","worldManifold","resetFriction","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","touching","wasTouching","nmp","omp","_solvePositionConstraint","toi","positionA","positionB","localCenterA","localCenterB","mA","mB","cA","aA","cB","aB","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","rnA","rnB","K","P","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","ex","ey","getInverse","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","$afece3df259a5207$var$s_registers","addType","type1","type2","callback","typeA","typeB","destroyFcn","$4361b0628a57e04d$var$_DEBUG","$4361b0628a57e04d$var$_ASSERT","$4361b0628a57e04d$var$Mat22","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","$cc85eccb6e90cd2f$var$Manifold","$cc85eccb6e90cd2f$var$ManifoldPoint","$cc85eccb6e90cd2f$var$ContactID","cf","$cc85eccb6e90cd2f$var$ContactFeature","$cc85eccb6e90cd2f$var$WorldManifold","separations","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","$cc85eccb6e90cd2f$var$ClipVertex","getPointStates","state1","state2","manifold1","manifold2","$cc85eccb6e90cd2f$var$PointState","removeState","persistState","addState","PointState","defineProperty","get","enumerable","configurable","wm","dist","nullState","$4e90cabbd4c1ded0$var$_ASSERT","$4e90cabbd4c1ded0$var$Distance","$4e90cabbd4c1ded0$var$DistanceInput","$4e90cabbd4c1ded0$var$DistanceOutput","$4e90cabbd4c1ded0$var$DistanceProxy","$4e90cabbd4c1ded0$var$SimplexCache","transformA","transformB","useRadii","iterations","metric","cache","$enKkk","gjkCalls","simplex","$4e90cabbd4c1ded0$var$Simplex","readCache","vertices","m_v","k_maxIters","saveA","saveB","saveCount","iter","m_count","getClosestPoint","getSearchDirection","vertex","getSupport","getVertex","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","m_vertices","$4e90cabbd4c1ded0$var$SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","$a787263bd2b8fa34$export$f84e8e69fd4488a5","newline","string","$b286ba47d87754d2$var$_DEBUG","$b286ba47d87754d2$var$_ASSERT","$b286ba47d87754d2$var$Vec3","z","$cf1429f6ea85f6ff$var$_DEBUG","$cf1429f6ea85f6ff$var$_ASSERT","$cf1429f6ea85f6ff$var$Mat33","ez","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","$e28d0bf54eb778c5$var$_ASSERT","$e28d0bf54eb778c5$var$Joint","$e28d0bf54eb778c5$var$JointEdge","m_index","collideConnected","getBodyA","getBodyB","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","getReactionTorque","$d160e3c45fddcf27$var$_ASSERT","timer","$6CGaB","now","toiCalls","$d160e3c45fddcf27$var$TOIOutput","e_unknown","totalRadius","target","tolerance","k_maxIterations","$d160e3c45fddcf27$var$SimplexCache","distanceInput","$d160e3c45fddcf27$var$DistanceInput","distanceOutput","$d160e3c45fddcf27$var$DistanceOutput","e_overlapped","fcn","$d160e3c45fddcf27$var$SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","time","toiMaxTime","toiTime","$d160e3c45fddcf27$var$DistanceProxy","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","$4d2700c5950de599$export$461939dd4422153","$4d2700c5950de599$export$a37e3c603d7117e5","Date","$e8ab251d59945ed8$var$_ASSERT","$e8ab251d59945ed8$var$CircleShape","_super","TYPE","m_p","radius","rr","sigma","$c62aac0dfc0292f7$var$EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","_set","e","numerator","denominator","$c9054a21ba6ca1dd$var$_ASSERT","$c9054a21ba6ca1dd$var$PolygonShape","m_centroid","m_normals","_setAsBox","ps","unique","i0","x0","hull","ih","ie","i1","i2","vs","pRef","inv3","p3","e1","e2","triangleArea","$c9054a21ba6ca1dd$var$ComputeCentroid","hx","hy","pLocal","minX","minY","maxX","maxY","k_inv3","ex1","ey1","ex2","ey2","$c033d0bdb08e9bd0$var$_ASSERT","$c033d0bdb08e9bd0$var$ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","hasPrevVertex","hasNextVertex","prevVertex","nextVertex","setPrevVertex","setNextVertex","createChain","getChildEdge","$h0PS0","$5d3b46ec9bb90849$var$BoxShape","$hg1KF","$39bb5f3804f147d1$var$_ASSERT","$39bb5f3804f147d1$var$FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","$39bb5f3804f147d1$var$CollidePolygons","polyA","polyB","edgeA","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","$39bb5f3804f147d1$var$FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","$2ae3d155ea78d39e$var$DistanceJoint","$2ae3d155ea78d39e$var$DEFAULTS","frequencyHz","dampingRatio","anchorA","anchorB","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_length","m_frequencyHz","m_dampingRatio","m_impulse","m_gamma","m_bias","m_u","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","gamma","bias","_setAnchors","getLocalAnchorA","getLocalAnchorB","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","qA","qB","crAu","crBu","invMass","omega","k","vpA","vpB","Cdot","u","$8ef950db616184b2$var$_ASSERT","$8ef950db616184b2$var$FrictionJoint","$8ef950db616184b2$var$DEFAULTS","maxForce","maxTorque","anchor","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","oldImpulse","maxImpulse","$dabfa3c7ba347a1d$var$_ASSERT","$dabfa3c7ba347a1d$var$GearJoint","$dabfa3c7ba347a1d$var$DEFAULTS","joint1","joint2","coordinateA","coordinateB","$1G4C1","$ivu2P","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_referenceAngle","m_localAxisC","prismatic","m_localXAxisA","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","$138d4a94f23029d2$var$_ASSERT","$138d4a94f23029d2$var$RevoluteJoint","$138d4a94f23029d2$var$DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","referenceAngle","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","$hMh4F","m_motorMass","m_limitState","getReferenceAngle","getJointAngle","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","getMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","jointAngle","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","$d7926d7757c553e3$var$_ASSERT","$d7926d7757c553e3$var$PrismaticJoint","$d7926d7757c553e3$var$DEFAULTS","lowerTranslation","upperTranslation","maxMotorForce","axis","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","setMaxMotorForce","getMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","impulse1","$1fce8265a0b1ef4b$var$_ASSERT","$1fce8265a0b1ef4b$var$MotorJoint","$1fce8265a0b1ef4b$var$DEFAULTS","correctionFactor","m_linearOffset","linearOffset","m_angularOffset","angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","getAngularOffset","inv_h","$8164c8e7ee704ee0$var$_ASSERT","$8164c8e7ee704ee0$var$MouseJoint","$8164c8e7ee704ee0$var$DEFAULTS","m_targetA","m_beta","m_C","_localAnchorB","setTarget","getTarget","velocity","$dfcbb18b7026d395$var$_ASSERT","$dfcbb18b7026d395$var$PulleyJoint","MIN_PULLEY_LENGTH","$dfcbb18b7026d395$var$PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","$33808931074ba2f8$var$RopeJoint","$33808931074ba2f8$var$DEFAULTS","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","$246ab1be251fe8df$var$WeldJoint","$246ab1be251fe8df$var$DEFAULTS","invM","impulse2","$2422f8e95b739a11$var$WheelJoint","$2422f8e95b739a11$var$DEFAULTS","localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy","$3da185c5dc4acaf1$var$_ASSERT","$3da185c5dc4acaf1$var$CollideCircles","circleA","circleB","distSqr","$jYuki","$178417f6a265db51$var$_ASSERT","$178417f6a265db51$var$CollideEdgeCircle","Q","A1","B1","B2","A2","den","$gv5vF","chain","CollidePolygons","$faa123e313809510$var$_ASSERT","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","$faa123e313809510$var$CollidePolygonCircle","$cd42e9565552fd31$var$_ASSERT","$cd42e9565552fd31$var$CollideEdgePolygon","$cd42e9565552fd31$var$EPAxis","$cd42e9565552fd31$var$edgeAxis","$cd42e9565552fd31$var$polygonAxis","$cd42e9565552fd31$var$polygonBA","$cd42e9565552fd31$var$rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","Sweep","stats","Manifold","Distance","TimeOfImpact","DynamicTree","Settings","$78ae820aa9ececfa$export$b67359430d3b1b2","Float32Array","$78ae820aa9ececfa$export$5ada478c8a628231","$26675c4f95835ef1$export$185802fd694ee1f5","out","$26675c4f95835ef1$export$9cd59f9826255e47","$26675c4f95835ef1$export$784d13d8ee351f07","$26675c4f95835ef1$export$a82be99ed2a44a7d","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","$26675c4f95835ef1$export$adaa4cf7ef1b65be","$26675c4f95835ef1$export$f0954fd7d5368655","$26675c4f95835ef1$export$9cb09a71b7d66923","a01","a02","a03","$26675c4f95835ef1$export$6897c284b6f9f4dc","a00","a10","a20","a30","a31","a32","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","$26675c4f95835ef1$export$33f3c024b4ae00a1","$26675c4f95835ef1$export$a04698f914c55ed9","$26675c4f95835ef1$export$2060d2db72cce88f","b0","b1","b2","b3","$26675c4f95835ef1$export$d73ee8ef04f5226a","$26675c4f95835ef1$export$dcdf75081b88279d","$26675c4f95835ef1$export$bb628a54ab399bc9","rad","b12","b20","b21","b22","len","hypot","$26675c4f95835ef1$export$a59c8716592e09af","$26675c4f95835ef1$export$cf71e4d4ca4d1cfd","$26675c4f95835ef1$export$ea6eae3365de5b9c","$26675c4f95835ef1$export$bc9e79e74e9fddf6","$26675c4f95835ef1$export$832ca188ffb1955d","$26675c4f95835ef1$export$926fc125ff3c666c","$26675c4f95835ef1$export$dd47cc2f828c32ef","$26675c4f95835ef1$export$7dc997d67d2b7f33","$26675c4f95835ef1$export$ad5ddaedc8f405df","$26675c4f95835ef1$export$9545ac307f2a256b","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","$26675c4f95835ef1$export$ff497f2be31cc6a","bx","by","bz","bw","ax","az","aw","magnitude","$26675c4f95835ef1$export$202e99f82f7f0395","mat","$26675c4f95835ef1$export$71dc54d92bd04b57","$26675c4f95835ef1$export$df3937d3b537df0a","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","$26675c4f95835ef1$export$ddf9c55c9f2be172","sx","sy","sz","$26675c4f95835ef1$export$1def1f860edc4b1f","ox","oy","oz","out0","out1","out2","out4","out5","out6","out8","out9","out10","$26675c4f95835ef1$export$2ff2bbe382249af7","yx","zx","zy","$26675c4f95835ef1$export$89b5708c387cac6c","left","right","bottom","near","far","rl","tb","nf","$26675c4f95835ef1$export$4cf19729ec9a96b8","fovy","aspect","tan","$26675c4f95835ef1$export$541149539f3a4684","$26675c4f95835ef1$export$294bba99a6af0c0c","$26675c4f95835ef1$export$58ae211c788e338f","fov","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","$26675c4f95835ef1$export$c5f65ef3eb668f27","lr","bt","$26675c4f95835ef1$export$4f2167e613cfc87b","$26675c4f95835ef1$export$b1d31ea7b4d854e","$26675c4f95835ef1$export$d924e14fd6d9aa66","eye","up","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","$26675c4f95835ef1$export$aa67782f4dc9e52c","$26675c4f95835ef1$export$42d51816ce590c93","$26675c4f95835ef1$export$326827e8268e9cdb","$26675c4f95835ef1$export$e16d8520af44a096","$26675c4f95835ef1$export$4e2d2ead65e5f7e3","$26675c4f95835ef1$export$c697bed75648cdb7","$26675c4f95835ef1$export$553579f63bdd7137","scale1","$26675c4f95835ef1$export$f2599a5cf1109d8","$26675c4f95835ef1$export$e9bab7fafb253603","a3","a4","a5","a6","a7","a8","a9","a14","a15","b4","b5","b6","b7","b8","b9","b13","b14","b15","$26675c4f95835ef1$export$6e3a27864ab166fe","$26675c4f95835ef1$export$f93b5905241a7cca","$ab7f6dc0910e1ef7$export$185802fd694ee1f5","$ab7f6dc0910e1ef7$export$9cd59f9826255e47","$ab7f6dc0910e1ef7$export$f24224f1c91d8156","$ab7f6dc0910e1ef7$export$a82be99ed2a44a7d","$ab7f6dc0910e1ef7$export$784d13d8ee351f07","$ab7f6dc0910e1ef7$export$adaa4cf7ef1b65be","$ab7f6dc0910e1ef7$export$e16d8520af44a096","$ab7f6dc0910e1ef7$export$4e2d2ead65e5f7e3","$ab7f6dc0910e1ef7$export$2060d2db72cce88f","$ab7f6dc0910e1ef7$export$cd007d971a5a2143","$ab7f6dc0910e1ef7$export$803ce6b71a0a94b2","ceil","$ab7f6dc0910e1ef7$export$a3fe094919f356fd","floor","$ab7f6dc0910e1ef7$export$96ec731ed4dcb222","$ab7f6dc0910e1ef7$export$8960430cfd85939f","$ab7f6dc0910e1ef7$export$2077e0241d6afd3c","round","$ab7f6dc0910e1ef7$export$dcdf75081b88279d","$ab7f6dc0910e1ef7$export$19cedf1da84ba854","$ab7f6dc0910e1ef7$export$9f17032d917177de","$ab7f6dc0910e1ef7$export$88e6ebb4fe54f538","$ab7f6dc0910e1ef7$export$ab44e1323ffc8376","$ab7f6dc0910e1ef7$export$aef51622e549b8b0","$ab7f6dc0910e1ef7$export$70ae2c07e401031b","$ab7f6dc0910e1ef7$export$a3295358bff77e","len1","$ab7f6dc0910e1ef7$export$94132a0e348806d4","$ab7f6dc0910e1ef7$export$bb646b20bb93d339","$ab7f6dc0910e1ef7$export$3a89f8d6f6bf6c9f","$ab7f6dc0910e1ef7$export$ae8865616f30561c","factorTimes2","factor1","factor2","factor3","factor4","$ab7f6dc0910e1ef7$export$b9c5f84610baddaf","inverseFactor","inverseFactorTimesTwo","$ab7f6dc0910e1ef7$export$4385e60b38654f68","scale2","zScale","$ab7f6dc0910e1ef7$export$5ffbd13800309d59","$ab7f6dc0910e1ef7$export$f0bfa0a0024626ee","$ab7f6dc0910e1ef7$export$c32adef9e939ce85","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","$ab7f6dc0910e1ef7$export$a59c8716592e09af","$ab7f6dc0910e1ef7$export$cf71e4d4ca4d1cfd","$ab7f6dc0910e1ef7$export$ea6eae3365de5b9c","$ab7f6dc0910e1ef7$export$944b09d2ad10b378","mag","cosine","acos","$ab7f6dc0910e1ef7$export$7f9972325ebfd559","$ab7f6dc0910e1ef7$export$42d51816ce590c93","$ab7f6dc0910e1ef7$export$f2599a5cf1109d8","$ab7f6dc0910e1ef7$export$e9bab7fafb253603","vec","$ab7f6dc0910e1ef7$export$f93b5905241a7cca","$ab7f6dc0910e1ef7$export$6e3a27864ab166fe","$ab7f6dc0910e1ef7$export$159d9494db57879b","$ab7f6dc0910e1ef7$export$6c4a311cc157c764","$ab7f6dc0910e1ef7$export$2422cd6c492a8b3a","$ab7f6dc0910e1ef7$export$fc1400facf92c78","$ab7f6dc0910e1ef7$export$99d8dd3f32a3435","$ab7f6dc0910e1ef7$export$4b80e395e36b5a56","stride","fn","arg","$5552db23284953e2$export$5822a9d0880a5d82","$5552db23284953e2$export$e55670b70abbe67e","canvasName","canvas","document","getElementById","getContext","premultipliedAlpha","$ed8c40662356feaf$export$327d24a04cd0dc17","vertShaderSource","fragShaderSource","vShader","createShader","VERTEX_SHADER","shaderSource","compileShader","ok","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fShader","FRAGMENT_SHADER","program","createProgram","attachShader","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","useProgram","getProgramInfoLog","$448f71a90916af8b$var$groundPos","$ab7f6dc0910e1ef7$exports","fromValues","$448f71a90916af8b$var$groundSize","$448f71a90916af8b$var$platformPos","$448f71a90916af8b$var$platformSize","$448f71a90916af8b$var$boxPos","$448f71a90916af8b$var$boxSize","$448f71a90916af8b$var$boxBody","$448f71a90916af8b$var$boxLinearVelocity","$448f71a90916af8b$var$world","$448f71a90916af8b$var$projViewMatrix","$26675c4f95835ef1$exports","$448f71a90916af8b$var$modelMatrix","$448f71a90916af8b$var$mvpMatrix","$448f71a90916af8b$var$uMvpLocation","$448f71a90916af8b$var$uColorLocation","$448f71a90916af8b$var$currentTime","$448f71a90916af8b$var$deltaTime","$448f71a90916af8b$var$lastTime","$448f71a90916af8b$var$keyboard","keys","constructor","addEventListener","event","onKeyChange","pressed","$448f71a90916af8b$var$animationLoop","requestAnimationFrame","COLOR_BUFFER_BIT","uniform3fv","translate","uniformMatrix4fv","drawArrays","TRIANGLES","async","response","fetch","vertShaderSrc","text","fragShaderSrc","getUniformLocation","projMatrix","ortho","viewMatrix","lookAt","vertPosBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","vertexAttribPointer","FLOAT","enableVertexAttribArray","clearColor","pos","groundBody","groundShape","boxShape","platformBody","platformShape","$448f71a90916af8b$var$init"],"version":3,"file":"index.df69b08d.js.map"}