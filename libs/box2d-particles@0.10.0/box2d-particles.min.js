/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/@box2d/particles@0.10.0/dist/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import t from"/npm/@box2d/core@0.10.0/+esm";var e,i="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},r={},a={},s={};e=s,Object.defineProperty(e,"__esModule",{value:!0}),e.b2_barrierCollisionTime=e.b2_minParticleSystemBufferCapacity=e.b2_maxTriadDistanceSquared=e.b2_maxTriadDistance=e.b2_maxParticleForce=e.b2_maxParticlePressure=e.b2_minParticleWeight=e.b2_particleStride=e.b2_maxParticleIndex=e.b2_invalidParticleIndex=void 0,e.b2_invalidParticleIndex=-1,e.b2_maxParticleIndex=2147483647,e.b2_particleStride=.75,e.b2_minParticleWeight=1,e.b2_maxParticlePressure=.25,e.b2_maxParticleForce=.5,e.b2_maxTriadDistance=2,e.b2_maxTriadDistanceSquared=e.b2_maxTriadDistance*e.b2_maxTriadDistance,e.b2_minParticleSystemBufferCapacity=256,e.b2_barrierCollisionTime=2.5,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.b2ParticleHandle=e.b2CalculateParticleIterations=e.b2ParticleDef=e.b2ParticleFlag=void 0;const i=t,r=s;!function(t){t[t.b2_waterParticle=0]="b2_waterParticle",t[t.b2_zombieParticle=2]="b2_zombieParticle",t[t.b2_wallParticle=4]="b2_wallParticle",t[t.b2_springParticle=8]="b2_springParticle",t[t.b2_elasticParticle=16]="b2_elasticParticle",t[t.b2_viscousParticle=32]="b2_viscousParticle",t[t.b2_powderParticle=64]="b2_powderParticle",t[t.b2_tensileParticle=128]="b2_tensileParticle",t[t.b2_colorMixingParticle=256]="b2_colorMixingParticle",t[t.b2_destructionListenerParticle=512]="b2_destructionListenerParticle",t[t.b2_barrierParticle=1024]="b2_barrierParticle",t[t.b2_staticPressureParticle=2048]="b2_staticPressureParticle",t[t.b2_reactiveParticle=4096]="b2_reactiveParticle",t[t.b2_repulsiveParticle=8192]="b2_repulsiveParticle",t[t.b2_fixtureContactListenerParticle=16384]="b2_fixtureContactListenerParticle",t[t.b2_particleContactListenerParticle=32768]="b2_particleContactListenerParticle",t[t.b2_fixtureContactFilterParticle=65536]="b2_fixtureContactFilterParticle",t[t.b2_particleContactFilterParticle=131072]="b2_particleContactFilterParticle"}(e.b2ParticleFlag||(e.b2ParticleFlag={}));e.b2ParticleDef=class{constructor(){this.flags=0,this.position=new i.b2Vec2,this.velocity=new i.b2Vec2,this.color=new i.b2Color(0,0,0,0),this.lifetime=0,this.userData=null,this.group=null}},e.b2CalculateParticleIterations=function(t,e,r){const a=Math.ceil(Math.sqrt(t/(.01*e))*r);return(0,i.b2Clamp)(a,1,8)};e.b2ParticleHandle=class{constructor(){this.m_index=r.b2_invalidParticleIndex}GetIndex(){return this.m_index}SetIndex(t){this.m_index=t}}}(a);var o={},n={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.b2ParticleGroup=e.b2ParticleGroupDef=e.b2ParticleGroupFlag=void 0;const i=t;var r;!function(t){t[t.b2_solidParticleGroup=1]="b2_solidParticleGroup",t[t.b2_rigidParticleGroup=2]="b2_rigidParticleGroup",t[t.b2_particleGroupCanBeEmpty=4]="b2_particleGroupCanBeEmpty",t[t.b2_particleGroupWillBeDestroyed=8]="b2_particleGroupWillBeDestroyed",t[t.b2_particleGroupNeedsUpdateDepth=16]="b2_particleGroupNeedsUpdateDepth",t[t.b2_particleGroupInternalMask=24]="b2_particleGroupInternalMask"}(r=e.b2ParticleGroupFlag||(e.b2ParticleGroupFlag={}));e.b2ParticleGroupDef=class{constructor(){this.flags=0,this.groupFlags=0,this.position=new i.b2Vec2,this.angle=0,this.linearVelocity=new i.b2Vec2,this.angularVelocity=0,this.color=new i.b2Color,this.strength=1,this.shapeCount=0,this.stride=0,this.particleCount=0,this.lifetime=0,this.userData=null,this.group=null}};class a{constructor(t){this.m_firstIndex=0,this.m_lastIndex=0,this.m_groupFlags=0,this.m_strength=1,this.m_prev=null,this.m_next=null,this.m_timestamp=-1,this.m_mass=0,this.m_inertia=0,this.m_center=new i.b2Vec2,this.m_linearVelocity=new i.b2Vec2,this.m_angularVelocity=0,this.m_transform=new i.b2Transform,this.m_userData=null,this.m_system=t}GetNext(){return this.m_next}GetParticleSystem(){return this.m_system}GetParticleCount(){return this.m_lastIndex-this.m_firstIndex}GetBufferIndex(){return this.m_firstIndex}ContainsParticle(t){return this.m_firstIndex<=t&&t<this.m_lastIndex}GetAllParticleFlags(){(0,i.b2Assert)(null!==this.m_system.m_flagsBuffer.data);let t=0;for(let e=this.m_firstIndex;e<this.m_lastIndex;e++)t|=this.m_system.m_flagsBuffer.data[e];return t}GetGroupFlags(){return this.m_groupFlags}SetGroupFlags(t){t|=this.m_groupFlags&r.b2_particleGroupInternalMask,this.m_system.SetGroupFlags(this,t)}GetMass(){return this.UpdateStatistics(),this.m_mass}GetInertia(){return this.UpdateStatistics(),this.m_inertia}GetCenter(){return this.UpdateStatistics(),this.m_center}GetLinearVelocity(){return this.UpdateStatistics(),this.m_linearVelocity}GetAngularVelocity(){return this.UpdateStatistics(),this.m_angularVelocity}GetTransform(){return this.m_transform}GetPosition(){return this.m_transform.p}GetAngle(){return this.m_transform.q.GetAngle()}GetLinearVelocityFromWorldPoint(t,e){const r=a.GetLinearVelocityFromWorldPoint_s_t0;return this.UpdateStatistics(),i.b2Vec2.AddCrossScalarVec2(this.m_linearVelocity,this.m_angularVelocity,i.b2Vec2.Subtract(t,this.m_center,r),e)}GetUserData(){return this.m_userData}SetUserData(t){this.m_userData=t}ApplyForce(t){this.m_system.ApplyForce(this.m_firstIndex,this.m_lastIndex,t)}ApplyLinearImpulse(t){this.m_system.ApplyLinearImpulse(this.m_firstIndex,this.m_lastIndex,t)}DestroyParticles(t){(0,i.b2Assert)(!this.m_system.m_world.IsLocked());for(let e=this.m_firstIndex;e<this.m_lastIndex;e++)this.m_system.DestroyParticle(e,t)}UpdateStatistics(){(0,i.b2Assert)(null!==this.m_system.m_positionBuffer.data),(0,i.b2Assert)(null!==this.m_system.m_velocityBuffer.data);const t=new i.b2Vec2,e=new i.b2Vec2;if(this.m_timestamp!==this.m_system.m_timestamp){const r=this.m_system.GetParticleMass();this.m_mass=r*(this.m_lastIndex-this.m_firstIndex),this.m_center.SetZero(),this.m_linearVelocity.SetZero();for(let t=this.m_firstIndex;t<this.m_lastIndex;t++)this.m_center.AddScaled(r,this.m_system.m_positionBuffer.data[t]),this.m_linearVelocity.AddScaled(r,this.m_system.m_velocityBuffer.data[t]);if(this.m_mass>0){const t=1/this.m_mass;this.m_center.Scale(t),this.m_linearVelocity.Scale(t)}this.m_inertia=0,this.m_angularVelocity=0;for(let a=this.m_firstIndex;a<this.m_lastIndex;a++)i.b2Vec2.Subtract(this.m_system.m_positionBuffer.data[a],this.m_center,t),i.b2Vec2.Subtract(this.m_system.m_velocityBuffer.data[a],this.m_linearVelocity,e),this.m_inertia+=r*i.b2Vec2.Dot(t,t),this.m_angularVelocity+=r*i.b2Vec2.Cross(t,e);this.m_inertia>0&&(this.m_angularVelocity*=1/this.m_inertia),this.m_timestamp=this.m_system.m_timestamp}}}e.b2ParticleGroup=a,a.GetLinearVelocityFromWorldPoint_s_t0=new i.b2Vec2}(n);var c={},l={};Object.defineProperty(l,"__esModule",{value:!0}),l.b2StackQueue=void 0;const u=t;l.b2StackQueue=class{constructor(t){this.m_buffer=[],this.m_front=0,this.m_back=0,this.m_buffer.fill(null,0,t)}get m_capacity(){return this.m_buffer.length}Push(t){if(this.m_back>=this.m_capacity){for(let t=this.m_front;t<this.m_back;t++)this.m_buffer[t-this.m_front]=this.m_buffer[t];this.m_back-=this.m_front,this.m_front=0}this.m_buffer[this.m_back]=t,this.m_back++}Pop(){this.m_buffer[this.m_front]=null,this.m_front++}Empty(){return this.m_front===this.m_back}Front(){const t=this.m_buffer[this.m_front];return(0,u.b2Assert)(null!==t),t}},Object.defineProperty(c,"__esModule",{value:!0}),c.b2VoronoiDiagram_Task=c.b2VoronoiDiagram_Generator=c.b2VoronoiDiagram=void 0;const f=t,m=l;c.b2VoronoiDiagram=class{constructor(t){this.m_generatorCapacity=0,this.m_generatorCount=0,this.m_countX=0,this.m_countY=0,this.m_diagram=[],this.m_generatorBuffer=new Array(t);for(let e=0;e<t;e++)this.m_generatorBuffer[e]=new h;this.m_generatorCapacity=t}AddGenerator(t,e,i){const r=this.m_generatorBuffer[this.m_generatorCount++];r.center.Copy(t),r.tag=e,r.necessary=i}Generate(t,e){const i=1/t,r=new f.b2Vec2(+f.b2_maxFloat,+f.b2_maxFloat),a=new f.b2Vec2(-f.b2_maxFloat,-f.b2_maxFloat);let s=0;for(let t=0;t<this.m_generatorCount;t++){const e=this.m_generatorBuffer[t];e.necessary&&(f.b2Vec2.Min(r,e.center,r),f.b2Vec2.Max(a,e.center,a),++s)}if(0===s)return this.m_countX=0,void(this.m_countY=0);r.x-=e,r.y-=e,a.x+=e,a.y+=e,this.m_countX=1+Math.floor(i*(a.x-r.x)),this.m_countY=1+Math.floor(i*(a.y-r.y)),this.m_diagram=[];const o=new m.b2StackQueue(4*this.m_countX*this.m_countY);for(let t=0;t<this.m_generatorCount;t++){const e=this.m_generatorBuffer[t];e.center.Subtract(r).Scale(i);const a=Math.floor(e.center.x),s=Math.floor(e.center.y);a>=0&&s>=0&&a<this.m_countX&&s<this.m_countY&&o.Push(new _(a,s,a+s*this.m_countX,e))}for(;!o.Empty();){const t=o.Front(),e=t.m_x,i=t.m_y,r=t.m_i,a=t.m_generator;o.Pop(),this.m_diagram[r]||(this.m_diagram[r]=a,e>0&&o.Push(new _(e-1,i,r-1,a)),i>0&&o.Push(new _(e,i-1,r-this.m_countX,a)),e<this.m_countX-1&&o.Push(new _(e+1,i,r+1,a)),i<this.m_countY-1&&o.Push(new _(e,i+1,r+this.m_countX,a)))}for(let t=0;t<this.m_countY;t++)for(let e=0;e<this.m_countX-1;e++){const i=e+t*this.m_countX,r=this.m_diagram[i],a=this.m_diagram[i+1];r!==a&&(o.Push(new _(e,t,i,a)),o.Push(new _(e+1,t,i+1,r)))}for(let t=0;t<this.m_countY-1;t++)for(let e=0;e<this.m_countX;e++){const i=e+t*this.m_countX,r=this.m_diagram[i],a=this.m_diagram[i+this.m_countX];r!==a&&(o.Push(new _(e,t,i,a)),o.Push(new _(e,t+1,i+this.m_countX,r)))}for(;!o.Empty();){const t=o.Front(),e=t.m_x,i=t.m_y,r=t.m_i,a=t.m_generator;o.Pop();const s=this.m_diagram[r],n=a;if(s!==n){const t=s.center.x-e,a=s.center.y-i,c=n.center.x-e,l=n.center.y-i;t*t+a*a>c*c+l*l&&(this.m_diagram[r]=n,e>0&&o.Push(new _(e-1,i,r-1,n)),i>0&&o.Push(new _(e,i-1,r-this.m_countX,n)),e<this.m_countX-1&&o.Push(new _(e+1,i,r+1,n)),i<this.m_countY-1&&o.Push(new _(e,i+1,r+this.m_countX,n)))}}}GetNodes(t){for(let e=0;e<this.m_countY-1;e++)for(let i=0;i<this.m_countX-1;i++){const r=i+e*this.m_countX,a=this.m_diagram[r],s=this.m_diagram[r+1],o=this.m_diagram[r+this.m_countX],n=this.m_diagram[r+1+this.m_countX];s!==o&&(a!==s&&a!==o&&(a.necessary||s.necessary||o.necessary)&&t(a.tag,s.tag,o.tag),n!==s&&n!==o&&(a.necessary||s.necessary||o.necessary)&&t(s.tag,n.tag,o.tag))}}};class h{constructor(){this.center=new f.b2Vec2,this.tag=0,this.necessary=!1}}c.b2VoronoiDiagram_Generator=h;class _{constructor(t,e,i,r){this.m_x=t,this.m_y=e,this.m_i=i,this.m_generator=r}}c.b2VoronoiDiagram_Task=_;var d={};Object.defineProperty(d,"__esModule",{value:!0}),d.computeDistance=void 0;const p=t,B=new p.b2EdgeShape,b=new p.b2Vec2,y=new p.b2Vec2,P=new p.b2Vec2,g=new p.b2Vec2,x=new p.b2Vec2,S=new p.b2Vec2,C=new p.b2Vec2,v=new p.b2Vec2,G=new p.b2Vec2,F=[(t,e,i,r)=>{const a=p.b2Transform.MultiplyVec2(e,t.m_p,G);return p.b2Vec2.Subtract(i,a,r),r.Normalize()-t.m_radius},(t,e,i,r)=>{const a=p.b2Transform.MultiplyVec2(e,t.m_vertex1,x),s=p.b2Transform.MultiplyVec2(e,t.m_vertex2,S),o=p.b2Vec2.Subtract(i,a,C),n=p.b2Vec2.Subtract(s,a,v),c=p.b2Vec2.Dot(o,n);if(c>0){const t=p.b2Vec2.Dot(n,n);c>t?p.b2Vec2.Subtract(i,s,o):o.SubtractScaled(c/t,n)}return r.Copy(o),r.Normalize()},(t,e,i,r)=>{const a=p.b2Transform.TransposeMultiplyVec2(e,i,b);let s=-p.b2_maxFloat;const o=y.Copy(a);for(let e=0;e<t.m_count;++e){const i=p.b2Vec2.Dot(t.m_normals[e],p.b2Vec2.Subtract(a,t.m_vertices[e],p.b2Vec2.s_t0));i>s&&(s=i,o.Copy(t.m_normals[e]))}if(s>0){const i=P.Copy(o);let n=s*s;for(let e=0;e<t.m_count;++e){const r=p.b2Vec2.Subtract(a,t.m_vertices[e],g),s=r.LengthSquared();n>s&&(i.Copy(r),n=s)}return p.b2Rot.MultiplyVec2(e.q,i,r),r.Normalize(),Math.sqrt(n)}return p.b2Rot.MultiplyVec2(e.q,o,r),s},(t,e,i,r,a)=>(t.GetChildEdge(B,a),F[p.b2ShapeType.e_edge](B,e,i,r,0))];d.computeDistance=(t,e,i,r,a)=>{const s=F[t.GetType()];return s?s(t,e,i,r,a):0};var V={};Object.defineProperty(V,"__esModule",{value:!0}),V.b2ParticleSystem_SolveCollisionCallback=V.b2ParticleSystem_UpdateBodyContactsCallback=V.b2FixtureParticleQueryCallback=void 0;const w=t,A=d,I=a;class D{constructor(t){this.m_system=t}ReportFixture(t){if(t.IsSensor())return!0;const e=t.GetShape().GetChildCount();for(let i=0;i<e;i++){const e=t.GetAABB(i),r=this.m_system.GetInsideBoundsEnumerator(e);let a;for(;(a=r.GetNext())>=0;)this.ReportFixtureAndParticle(t,i,a)}return!0}}V.b2FixtureParticleQueryCallback=D;class T extends D{constructor(){super(...arguments),this.m_contactFilter=null}ShouldCollideFixtureParticle(t,e){if(this.m_contactFilter){if(this.m_system.GetFlagsBuffer()[e]&I.b2ParticleFlag.b2_fixtureContactFilterParticle)return this.m_contactFilter.ShouldCollideFixtureParticle(t,this.m_system,e)}return!0}ReportFixtureAndParticle(t,e,i){const r=T.ReportFixtureAndParticle_s_n,a=T.ReportFixtureAndParticle_s_rp,s=this.m_system.m_positionBuffer.data[i],o=r,n=(0,A.computeDistance)(t.GetShape(),t.GetBody().GetTransform(),s,o,e);if(n<this.m_system.m_particleDiameter&&this.ShouldCollideFixtureParticle(t,i)){const e=t.GetBody(),r=e.GetWorldCenter(),c=e.GetMass(),l=e.GetInertia()-c*e.GetLocalCenter().LengthSquared(),u=c>0?1/c:0,f=l>0?1/l:0,m=this.m_system.m_flagsBuffer.data[i]&I.b2ParticleFlag.b2_wallParticle?0:this.m_system.GetParticleInvMass(),h=w.b2Vec2.Subtract(s,r,a),_=w.b2Vec2.Cross(h,o),d=m+u+f*_*_,p=this.m_system.m_bodyContactBuffer.data[this.m_system.m_bodyContactBuffer.Append()];p.index=i,p.body=e,p.fixture=t,p.weight=1-n*this.m_system.m_inverseDiameter,p.normal.Copy(o.Negate()),p.mass=d>0?1/d:0,this.m_system.DetectStuckParticle(i)}}}V.b2ParticleSystem_UpdateBodyContactsCallback=T,T.ReportFixtureAndParticle_s_n=new w.b2Vec2,T.ReportFixtureAndParticle_s_rp=new w.b2Vec2;class R extends D{constructor(){super(...arguments),this.m_step=null}ReportFixtureAndParticle(t,e,i){const r=R.ReportFixtureAndParticle_s_p1,a=R.ReportFixtureAndParticle_s_output,s=R.ReportFixtureAndParticle_s_input,o=R.ReportFixtureAndParticle_s_p,n=R.ReportFixtureAndParticle_s_v,c=R.ReportFixtureAndParticle_s_f,l=t.GetBody(),u=this.m_system.m_positionBuffer.data[i],f=this.m_system.m_velocityBuffer.data[i],m=a,h=s;if(0===this.m_system.m_iterationIndex){const e=l.GetTransform(),i=w.b2Transform.TransposeMultiplyVec2(l.m_xf0,u,r);t.GetShape().GetType()===w.b2ShapeType.e_circle&&(i.Subtract(l.GetLocalCenter()),w.b2Rot.MultiplyVec2(l.m_xf0.q,i,i),w.b2Rot.TransposeMultiplyVec2(e.q,i,i),i.Add(l.GetLocalCenter())),w.b2Transform.MultiplyVec2(e,i,h.p1)}else h.p1.Copy(u);const _=(0,w.b2Verify)(this.m_step);if(w.b2Vec2.AddScaled(u,_.dt,f,h.p2),h.maxFraction=1,t.RayCast(m,h,e)){const t=m.normal,e=o;e.x=(1-m.fraction)*h.p1.x+m.fraction*h.p2.x+w.b2_linearSlop*t.x,e.y=(1-m.fraction)*h.p1.y+m.fraction*h.p2.y+w.b2_linearSlop*t.y;const r=n;r.x=_.inv_dt*(e.x-u.x),r.y=_.inv_dt*(e.y-u.y),this.m_system.m_velocityBuffer.data[i].Copy(r);const a=c;a.x=_.inv_dt*this.m_system.GetParticleMass()*(f.x-r.x),a.y=_.inv_dt*this.m_system.GetParticleMass()*(f.y-r.y),this.m_system.ParticleApplyForce(i,a)}}}V.b2ParticleSystem_SolveCollisionCallback=R,R.ReportFixtureAndParticle_s_p1=new w.b2Vec2,R.ReportFixtureAndParticle_s_output=new w.b2RayCastOutput,R.ReportFixtureAndParticle_s_input=new w.b2RayCastInput,R.ReportFixtureAndParticle_s_p=new w.b2Vec2,R.ReportFixtureAndParticle_s_v=new w.b2Vec2,R.ReportFixtureAndParticle_s_f=new w.b2Vec2,Object.defineProperty(o,"__esModule",{value:!0}),o.b2ParticleSystem_ReactiveFilter=o.b2ParticleSystem_CompositeShape=o.b2ParticleSystem_JoinParticleGroupsFilter=o.b2ParticleSystem_ConnectionFilter=o.b2ParticlePairSet=o.b2ParticleSystem_ParticlePair=o.b2ParticleSystem_FixtureParticleSet=o.b2ParticleSystem_FixtureParticle=o.b2ParticleSystem_FixedSetAllocator=o.b2ParticleSystem_ParticleListNode=o.b2ParticleSystem_InsideBoundsEnumerator=o.b2ParticleSystem_Proxy=o.b2ParticleSystem=o.b2ParticleSystemDef=o.b2ParticleTriad=o.b2ParticlePair=o.b2ParticleBodyContact=o.b2ParticleContact=o.b2ParticleSystem_UserOverridableBuffer=o.b2GrowableBuffer=void 0;const M=t,L=s,k=a,E=n,U=c,q=d,N=V;function O(t,e,i){const r=t[e];t[e]=t[i],t[i]=r}function W(t,e){return t<e}function z(t,e=0,i=t.length-e,r=W){let a=e;const s=[];let o=0;for(;;){for(;a+1<i;i++){const e=t[a+Math.floor(Math.random()*(i-a))];s[o++]=i;for(let s=a-1;;){for(;r(t[++s],e);)continue;for(;r(e,t[--i]);)continue;if(s>=i)break;O(t,s,i)}}if(0===o)break;a=i,i=s[--o]}return t}function X(t,e=0,i=t.length-e,r=W){return z(t,e,i,r)}function j(t,e,i=t.length){let r=0;for(let a=0;a<i;++a)e(t[a])||(a!==r?O(t,r++,a):++r);return r}function Q(t,e,i,r,a){let s=i-e;for(;s>0;){const i=Math.floor(s/2);let o=e+i;a(t[o],r)?(e=++o,s-=i+1):s=i}return e}function Z(t,e,i,r,a){let s=i-e;for(;s>0;){const i=Math.floor(s/2);let o=e+i;a(r,t[o])?s=i:(e=++o,s-=i+1)}return e}function Y(t,e,i,r){let a=i;for(;e!==a;)O(t,e++,a++),a===r?a=i:e===i&&(i=a)}class H{constructor(t){this.data=[],this.count=0,this.capacity=0,this.allocator=t}Append(){return this.count>=this.capacity&&this.Grow(),this.count++}Reserve(t){if(!(this.capacity>=t)){for(let e=this.capacity;e<t;++e)this.data[e]=this.allocator();this.capacity=t}}Grow(){const t=this.capacity?2*this.capacity:L.b2_minParticleSystemBufferCapacity;this.Reserve(t)}Free(){0!==this.data.length&&(this.data=[],this.capacity=0,this.count=0)}Shorten(t){}Data(){return this.data}GetCount(){return this.count}SetCount(t){this.count=t}GetCapacity(){return this.capacity}RemoveIf(t){this.count=j(this.data,t,this.count)}Unique(t){this.count=function(t,e,i,r){if(e===i)return i;let a=e;for(;++e!==i;)r(t[a],t[e])||O(t,++a,e);return++a}(this.data,0,this.count,t)}}o.b2GrowableBuffer=H;class J{constructor(){this.m_data=null,this.userSuppliedCapacity=0}get data(){return this.m_data}set data(t){this.m_data=t}}o.b2ParticleSystem_UserOverridableBuffer=J;class K{constructor(){this.indexA=0,this.indexB=0,this.weight=0,this.normal=new M.b2Vec2,this.flags=0}SetIndices(t,e){this.indexA=t,this.indexB=e}SetWeight(t){this.weight=t}SetNormal(t){this.normal.Copy(t)}SetFlags(t){this.flags=t}GetIndexA(){return this.indexA}GetIndexB(){return this.indexB}GetWeight(){return this.weight}GetNormal(){return this.normal}GetFlags(){return this.flags}IsEqual(t){return this.indexA===t.indexA&&this.indexB===t.indexB&&this.flags===t.flags&&this.weight===t.weight&&this.normal.x===t.normal.x&&this.normal.y===t.normal.y}IsNotEqual(t){return!this.IsEqual(t)}ApproximatelyEqual(t){return this.indexA===t.indexA&&this.indexB===t.indexB&&this.flags===t.flags&&Math.abs(this.weight-t.weight)<.01&&M.b2Vec2.DistanceSquared(this.normal,t.normal)<1e-4}}o.b2ParticleContact=K;class ${constructor(){this.index=0,this.weight=0,this.normal=new M.b2Vec2,this.mass=0}}o.b2ParticleBodyContact=$;class tt{constructor(){this.indexA=0,this.indexB=0,this.flags=0,this.strength=0,this.distance=0}}o.b2ParticlePair=tt;class et{constructor(){this.indexA=0,this.indexB=0,this.indexC=0,this.flags=0,this.strength=0,this.pa=new M.b2Vec2,this.pb=new M.b2Vec2,this.pc=new M.b2Vec2,this.ka=0,this.kb=0,this.kc=0,this.s=0}}o.b2ParticleTriad=et;class it{constructor(){this.strictContactCheck=!1,this.density=1,this.gravityScale=1,this.radius=1,this.maxCount=0,this.pressureStrength=.005,this.dampingStrength=1,this.elasticStrength=.25,this.springStrength=.25,this.viscousStrength=.25,this.surfaceTensionPressureStrength=.2,this.surfaceTensionNormalStrength=.2,this.repulsiveStrength=1,this.powderStrength=.5,this.ejectionStrength=.5,this.staticPressureStrength=.2,this.staticPressureRelaxation=.2,this.staticPressureIterations=8,this.colorMixingStrength=.5,this.destroyByAge=!0,this.lifetimeGranularity=1/60}Copy(t){return this.strictContactCheck=t.strictContactCheck,this.density=t.density,this.gravityScale=t.gravityScale,this.radius=t.radius,this.maxCount=t.maxCount,this.pressureStrength=t.pressureStrength,this.dampingStrength=t.dampingStrength,this.elasticStrength=t.elasticStrength,this.springStrength=t.springStrength,this.viscousStrength=t.viscousStrength,this.surfaceTensionPressureStrength=t.surfaceTensionPressureStrength,this.surfaceTensionNormalStrength=t.surfaceTensionNormalStrength,this.repulsiveStrength=t.repulsiveStrength,this.powderStrength=t.powderStrength,this.ejectionStrength=t.ejectionStrength,this.staticPressureStrength=t.staticPressureStrength,this.staticPressureRelaxation=t.staticPressureRelaxation,this.staticPressureIterations=t.staticPressureIterations,this.colorMixingStrength=t.colorMixingStrength,this.destroyByAge=t.destroyByAge,this.lifetimeGranularity=t.lifetimeGranularity,this}Clone(){return(new it).Copy(this)}}o.b2ParticleSystemDef=it;class rt{constructor(t,e){this.m_paused=!1,this.m_timestamp=0,this.m_allParticleFlags=0,this.m_needsUpdateAllParticleFlags=!1,this.m_allGroupFlags=0,this.m_needsUpdateAllGroupFlags=!1,this.m_hasForce=!1,this.m_iterationIndex=0,this.m_inverseDensity=0,this.m_particleDiameter=0,this.m_inverseDiameter=0,this.m_squaredDiameter=0,this.m_count=0,this.m_internalAllocatedCapacity=0,this.m_handleIndexBuffer=new J,this.m_flagsBuffer=new J,this.m_positionBuffer=new J,this.m_velocityBuffer=new J,this.m_forceBuffer=[],this.m_weightBuffer=[],this.m_staticPressureBuffer=[],this.m_accumulationBuffer=[],this.m_accumulation2Buffer=[],this.m_depthBuffer=[],this.m_colorBuffer=new J,this.m_groupBuffer=[],this.m_userDataBuffer=new J,this.m_stuckThreshold=0,this.m_lastBodyContactStepBuffer=new J,this.m_bodyContactCountBuffer=new J,this.m_consecutiveContactStepsBuffer=new J,this.m_stuckParticleBuffer=new H((()=>0)),this.m_proxyBuffer=new H((()=>new at)),this.m_contactBuffer=new H((()=>new K)),this.m_bodyContactBuffer=new H((()=>new $)),this.m_pairBuffer=new H((()=>new tt)),this.m_triadBuffer=new H((()=>new et)),this.m_expirationTimeBuffer=new J,this.m_indexByExpirationTimeBuffer=new J,this.m_timeElapsed=0,this.m_expirationTimeBufferRequiresSorting=!1,this.m_groupCount=0,this.m_groupList=null,this.m_def=new it,this.m_prev=null,this.m_next=null,this.UpdateBodyContacts_callback=new N.b2ParticleSystem_UpdateBodyContactsCallback(this),this.SolveCollision_callback=new N.b2ParticleSystem_SolveCollisionCallback(this),this.SetStrictContactCheck(t.strictContactCheck),this.SetDensity(t.density),this.SetGravityScale(t.gravityScale),this.SetRadius(t.radius),this.SetMaxParticleCount(t.maxCount),this.m_def=t.Clone(),this.m_world=e,this.SetDestructionByAge(this.m_def.destroyByAge)}static computeTag(t,e){return(e+rt.yOffset>>>0<<rt.yShift)+(rt.xScale*t+rt.xOffset>>>0)>>>0}static computeRelativeTag(t,e,i){return t+(i<<rt.yShift)+(e<<rt.xShift)>>>0}Drop(){for(;this.m_groupList;)this.DestroyParticleGroup(this.m_groupList);this.FreeUserOverridableBuffer(this.m_handleIndexBuffer),this.FreeUserOverridableBuffer(this.m_flagsBuffer),this.FreeUserOverridableBuffer(this.m_lastBodyContactStepBuffer),this.FreeUserOverridableBuffer(this.m_bodyContactCountBuffer),this.FreeUserOverridableBuffer(this.m_consecutiveContactStepsBuffer),this.FreeUserOverridableBuffer(this.m_positionBuffer),this.FreeUserOverridableBuffer(this.m_velocityBuffer),this.FreeUserOverridableBuffer(this.m_colorBuffer),this.FreeUserOverridableBuffer(this.m_userDataBuffer),this.FreeUserOverridableBuffer(this.m_expirationTimeBuffer),this.FreeUserOverridableBuffer(this.m_indexByExpirationTimeBuffer),this.FreeBuffer(this.m_forceBuffer),this.FreeBuffer(this.m_weightBuffer),this.FreeBuffer(this.m_staticPressureBuffer),this.FreeBuffer(this.m_accumulationBuffer),this.FreeBuffer(this.m_accumulation2Buffer),this.FreeBuffer(this.m_depthBuffer),this.FreeBuffer(this.m_groupBuffer)}CreateParticle(t){var e,i,r,a,s,o;if((0,M.b2Assert)(!this.m_world.IsLocked()),this.m_count>=this.m_internalAllocatedCapacity){const t=this.m_count?2*this.m_count:L.b2_minParticleSystemBufferCapacity;this.ReallocateInternalAllocatedBuffers(t)}if(this.m_count>=this.m_internalAllocatedCapacity){if(!this.m_def.destroyByAge)return L.b2_invalidParticleIndex;this.DestroyOldestParticle(0,!1),this.SolveZombie()}const n=this.m_count++;this.m_flagsBuffer.data[n]=0,this.m_lastBodyContactStepBuffer.data&&(this.m_lastBodyContactStepBuffer.data[n]=0),this.m_bodyContactCountBuffer.data&&(this.m_bodyContactCountBuffer.data[n]=0),this.m_consecutiveContactStepsBuffer.data&&(this.m_consecutiveContactStepsBuffer.data[n]=0),this.m_positionBuffer.data[n]=(this.m_positionBuffer.data[n]||new M.b2Vec2).Copy(null!==(e=t.position)&&void 0!==e?e:M.b2Vec2.ZERO),this.m_velocityBuffer.data[n]=(this.m_velocityBuffer.data[n]||new M.b2Vec2).Copy(null!==(i=t.velocity)&&void 0!==i?i:M.b2Vec2.ZERO),this.m_weightBuffer[n]=0,this.m_forceBuffer[n]=(this.m_forceBuffer[n]||new M.b2Vec2).SetZero(),this.m_staticPressureBuffer&&(this.m_staticPressureBuffer[n]=0),this.m_depthBuffer&&(this.m_depthBuffer[n]=0);const c=(new M.b2Color).Copy(null!==(r=t.color)&&void 0!==r?r:M.b2Color.ZERO);!this.m_colorBuffer.data&&c.IsZero()||(this.m_colorBuffer.data=this.RequestBuffer(this.m_colorBuffer.data),this.m_colorBuffer.data[n]=(this.m_colorBuffer.data[n]||new M.b2Color).Copy(c)),(this.m_userDataBuffer.data||t.userData)&&(this.m_userDataBuffer.data=this.RequestBuffer(this.m_userDataBuffer.data),this.m_userDataBuffer.data[n]=t.userData),this.m_handleIndexBuffer.data&&(this.m_handleIndexBuffer.data[n]=null);const l=this.m_proxyBuffer.data[this.m_proxyBuffer.Append()],u=null!==(a=t.lifetime)&&void 0!==a?a:0,f=u>0;(this.m_expirationTimeBuffer.data||f)&&(this.SetParticleLifetime(n,f?u:this.ExpirationTimeToLifetime(-this.GetQuantizedTimeElapsed())),this.m_indexByExpirationTimeBuffer.data[n]=n),l.index=n;const m=null!==(s=t.group)&&void 0!==s?s:null;return this.m_groupBuffer[n]=m,m&&(m.m_firstIndex<m.m_lastIndex?(this.RotateBuffer(m.m_firstIndex,m.m_lastIndex,n),m.m_lastIndex=n+1):(m.m_firstIndex=n,m.m_lastIndex=n+1)),this.SetParticleFlags(n,null!==(o=t.flags)&&void 0!==o?o:0),n}GetParticleHandleFromIndex(t){this.m_handleIndexBuffer.data=this.RequestBuffer(this.m_handleIndexBuffer.data);let e=this.m_handleIndexBuffer.data[t];return e||(e=new k.b2ParticleHandle,e.SetIndex(t),this.m_handleIndexBuffer.data[t]=e,e)}DestroyParticle(t,e=!1){let i=k.b2ParticleFlag.b2_zombieParticle;e&&(i|=k.b2ParticleFlag.b2_destructionListenerParticle),this.SetParticleFlags(t,this.m_flagsBuffer.data[t]|i)}DestroyOldestParticle(t,e=!1){const i=this.GetParticleCount(),r=this.m_indexByExpirationTimeBuffer.data[i-(t+1)],a=this.m_indexByExpirationTimeBuffer.data[t];this.DestroyParticle(this.m_expirationTimeBuffer.data[r]>0?r:a,e)}DestroyParticlesInShape(t,e,i=!1){const r=rt.DestroyParticlesInShape_s_aabb;(0,M.b2Assert)(!this.m_world.IsLocked());const a=r;t.ComputeAABB(a,e,0);let s=0;return this.QueryAABB(a,(r=>(t.TestPoint(e,this.m_positionBuffer.data[r])&&(this.DestroyParticle(r,i),s++),!0))),s}CreateParticleGroup(t){var e,i,r,a,s,o;const n=rt.CreateParticleGroup_s_transform;(0,M.b2Assert)(!this.m_world.IsLocked());const c=n;c.SetPositionAngle(null!==(e=t.position)&&void 0!==e?e:M.b2Vec2.ZERO,null!==(i=t.angle)&&void 0!==i?i:0);const l=this.m_count;if(t.shape&&this.CreateParticlesWithShapeForGroup(t.shape,t,c),t.shapes&&this.CreateParticlesWithShapesForGroup(t.shapes,null!==(r=t.shapeCount)&&void 0!==r?r:t.shapes.length,t,c),t.positionData){const e=null!==(a=t.particleCount)&&void 0!==a?a:t.positionData.length;for(let i=0;i<e;i++){const e=t.positionData[i];this.CreateParticleForGroup(t,c,e)}}const u=this.m_count;let f=new E.b2ParticleGroup(this);f.m_firstIndex=l,f.m_lastIndex=u,f.m_strength=null!==(s=t.strength)&&void 0!==s?s:1,f.m_userData=t.userData,f.m_transform.Copy(c),f.m_prev=null,f.m_next=this.m_groupList,this.m_groupList&&(this.m_groupList.m_prev=f),this.m_groupList=f,++this.m_groupCount;for(let t=l;t<u;t++)this.m_groupBuffer[t]=f;this.SetGroupFlags(f,null!==(o=t.groupFlags)&&void 0!==o?o:0);const m=new ut;return this.UpdateContacts(!0),this.UpdatePairsAndTriads(l,u,m),t.group&&(this.JoinParticleGroups(t.group,f),f=t.group),f}JoinParticleGroups(t,e){(0,M.b2Assert)(!this.m_world.IsLocked()),this.RotateBuffer(e.m_firstIndex,e.m_lastIndex,this.m_count),this.RotateBuffer(t.m_firstIndex,t.m_lastIndex,e.m_firstIndex);const i=new ft(e.m_firstIndex);this.UpdateContacts(!0),this.UpdatePairsAndTriads(t.m_firstIndex,e.m_lastIndex,i);for(let i=e.m_firstIndex;i<e.m_lastIndex;i++)this.m_groupBuffer[i]=t;const r=t.m_groupFlags|e.m_groupFlags;this.SetGroupFlags(t,r),t.m_lastIndex=e.m_lastIndex,e.m_firstIndex=e.m_lastIndex,this.DestroyParticleGroup(e)}SplitParticleGroup(t){this.UpdateContacts(!0);const e=t.GetParticleCount(),i=new Array(e);for(let t=0;t<e;t++)i[t]=new ot;rt.InitializeParticleLists(t,i),this.MergeParticleListsInContact(t,i);const r=rt.FindLongestParticleList(t,i);this.MergeZombieParticleListNodes(t,i,r),this.CreateParticleGroupsFromParticleList(t,i,r),this.UpdatePairsAndTriadsWithParticleList(t,i)}GetParticleGroupList(){return this.m_groupList}GetParticleGroupCount(){return this.m_groupCount}GetParticleCount(){return this.m_count}GetMaxParticleCount(){return this.m_def.maxCount}SetMaxParticleCount(t){this.m_def.maxCount=t}GetAllParticleFlags(){return this.m_allParticleFlags}GetAllGroupFlags(){return this.m_allGroupFlags}SetPaused(t){this.m_paused=t}GetPaused(){return this.m_paused}SetDensity(t){this.m_def.density=t,this.m_inverseDensity=1/this.m_def.density}GetDensity(){return this.m_def.density}SetGravityScale(t){this.m_def.gravityScale=t}GetGravityScale(){return this.m_def.gravityScale}SetDamping(t){this.m_def.dampingStrength=t}GetDamping(){return this.m_def.dampingStrength}SetStaticPressureIterations(t){this.m_def.staticPressureIterations=t}GetStaticPressureIterations(){return this.m_def.staticPressureIterations}SetRadius(t){this.m_particleDiameter=2*t,this.m_squaredDiameter=this.m_particleDiameter*this.m_particleDiameter,this.m_inverseDiameter=1/this.m_particleDiameter}GetRadius(){return this.m_particleDiameter/2}GetPositionBuffer(){return this.m_positionBuffer.data}GetVelocityBuffer(){return this.m_velocityBuffer.data}GetColorBuffer(){return this.m_colorBuffer.data=this.RequestBuffer(this.m_colorBuffer.data),this.m_colorBuffer.data}GetGroupBuffer(){return this.m_groupBuffer}GetWeightBuffer(){return this.m_weightBuffer}GetUserDataBuffer(){return this.m_userDataBuffer.data=this.RequestBuffer(this.m_userDataBuffer.data),this.m_userDataBuffer.data}GetFlagsBuffer(){return this.m_flagsBuffer.data}SetParticleFlags(t,e){this.m_flagsBuffer.data[t]&~e&&(this.m_needsUpdateAllParticleFlags=!0),~this.m_allParticleFlags&e&&(e&k.b2ParticleFlag.b2_tensileParticle&&(this.m_accumulation2Buffer=this.RequestBuffer(this.m_accumulation2Buffer)),e&k.b2ParticleFlag.b2_colorMixingParticle&&(this.m_colorBuffer.data=this.RequestBuffer(this.m_colorBuffer.data)),this.m_allParticleFlags|=e),this.m_flagsBuffer.data[t]=e}GetParticleFlags(t){return this.m_flagsBuffer.data[t]}SetFlagsBuffer(t){this.SetUserOverridableBuffer(this.m_flagsBuffer,t)}SetPositionBuffer(t){this.SetUserOverridableBuffer(this.m_positionBuffer,t)}SetVelocityBuffer(t){this.SetUserOverridableBuffer(this.m_velocityBuffer,t)}SetColorBuffer(t){this.SetUserOverridableBuffer(this.m_colorBuffer,t)}SetUserDataBuffer(t){this.SetUserOverridableBuffer(this.m_userDataBuffer,t)}GetContacts(){return this.m_contactBuffer.data}GetContactCount(){return this.m_contactBuffer.count}GetBodyContacts(){return this.m_bodyContactBuffer.data}GetBodyContactCount(){return this.m_bodyContactBuffer.count}GetPairs(){return this.m_pairBuffer.data}GetPairCount(){return this.m_pairBuffer.count}GetTriads(){return this.m_triadBuffer.data}GetTriadCount(){return this.m_triadBuffer.count}SetStuckThreshold(t){this.m_stuckThreshold=t,t>0&&(this.m_lastBodyContactStepBuffer.data=this.RequestBuffer(this.m_lastBodyContactStepBuffer.data),this.m_bodyContactCountBuffer.data=this.RequestBuffer(this.m_bodyContactCountBuffer.data),this.m_consecutiveContactStepsBuffer.data=this.RequestBuffer(this.m_consecutiveContactStepsBuffer.data))}GetStuckCandidates(){return this.m_stuckParticleBuffer.Data()}GetStuckCandidateCount(){return this.m_stuckParticleBuffer.GetCount()}ComputeCollisionEnergy(){const t=rt.ComputeCollisionEnergy_s_v,e=this.m_velocityBuffer.data;let i=0;for(let r=0;r<this.m_contactBuffer.count;r++){const a=this.m_contactBuffer.data[r],s=a.indexA,o=a.indexB,n=a.normal,c=M.b2Vec2.Subtract(e[o],e[s],t),l=M.b2Vec2.Dot(c,n);l<0&&(i+=l*l)}return.5*this.GetParticleMass()*i}SetStrictContactCheck(t){this.m_def.strictContactCheck=t}GetStrictContactCheck(){return this.m_def.strictContactCheck}SetParticleLifetime(t,e){const i=null===this.m_indexByExpirationTimeBuffer.data;if(this.m_expirationTimeBuffer.data=this.RequestBuffer(this.m_expirationTimeBuffer.data),this.m_indexByExpirationTimeBuffer.data=this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data),i){const t=this.GetParticleCount();for(let e=0;e<t;++e)this.m_indexByExpirationTimeBuffer.data[e]=e}const r=e/this.m_def.lifetimeGranularity,a=r>0?this.GetQuantizedTimeElapsed()+r:r;a!==this.m_expirationTimeBuffer.data[t]&&(this.m_expirationTimeBuffer.data[t]=a,this.m_expirationTimeBufferRequiresSorting=!0)}GetParticleLifetime(t){return this.ExpirationTimeToLifetime(this.GetExpirationTimeBuffer()[t])}SetDestructionByAge(t){t&&this.GetExpirationTimeBuffer(),this.m_def.destroyByAge=t}GetDestructionByAge(){return this.m_def.destroyByAge}GetExpirationTimeBuffer(){return this.m_expirationTimeBuffer.data=this.RequestBuffer(this.m_expirationTimeBuffer.data),this.m_expirationTimeBuffer.data}ExpirationTimeToLifetime(t){return(t>0?t-this.GetQuantizedTimeElapsed():t)*this.m_def.lifetimeGranularity}GetIndexByExpirationTimeBuffer(){return this.GetParticleCount()?this.SetParticleLifetime(0,this.GetParticleLifetime(0)):this.m_indexByExpirationTimeBuffer.data=this.RequestBuffer(this.m_indexByExpirationTimeBuffer.data),this.m_indexByExpirationTimeBuffer.data}ParticleApplyLinearImpulse(t,e){this.ApplyLinearImpulse(t,t+1,e)}ApplyLinearImpulse(t,e,i){const r=this.m_velocityBuffer.data,a=(e-t)*this.GetParticleMass(),s=M.b2Vec2.Scale(1/a,i,new M.b2Vec2);for(let i=t;i<e;i++)r[i].Add(s)}static IsSignificantForce(t){return 0!==t.x||0!==t.y}ParticleApplyForce(t,e){rt.IsSignificantForce(e)&&this.ForceCanBeApplied(this.m_flagsBuffer.data[t])&&(this.PrepareForceBuffer(),this.m_forceBuffer[t].Add(e))}ApplyForce(t,e,i){const r=M.b2Vec2.Scale(1/(e-t),i,new M.b2Vec2);if(rt.IsSignificantForce(r)){this.PrepareForceBuffer();for(let i=t;i<e;i++)this.m_forceBuffer[i].Add(r)}}GetNext(){return this.m_next}QueryAABB(t,e){if(0===this.m_proxyBuffer.count)return;const i=this.m_proxyBuffer.count,r=Q(this.m_proxyBuffer.data,0,i,rt.computeTag(this.m_inverseDiameter*t.lowerBound.x,this.m_inverseDiameter*t.lowerBound.y),at.CompareProxyTag),a=Z(this.m_proxyBuffer.data,r,i,rt.computeTag(this.m_inverseDiameter*t.upperBound.x,this.m_inverseDiameter*t.upperBound.y),at.CompareTagProxy),s=this.m_positionBuffer.data;for(let i=r;i<a;++i){const r=this.m_proxyBuffer.data[i].index,a=s[r];if(t.lowerBound.x<a.x&&a.x<t.upperBound.x&&t.lowerBound.y<a.y&&a.y<t.upperBound.y&&!e(r))break}}QueryShapeAABB(t,e,i,r){const a=rt.QueryShapeAABB_s_aabb;t.ComputeAABB(a,e,i),this.QueryAABB(a,r)}QueryPointAABB(t,e,i){const r=rt.QueryPointAABB_s_aabb;r.lowerBound.Set(t.x-e,t.y-e),r.upperBound.Set(t.x+e,t.y+e),this.QueryAABB(r,i)}RayCast(t,e,i){const r=rt.RayCast_s_aabb,a=rt.RayCast_s_p,s=rt.RayCast_s_v,o=rt.RayCast_s_n,n=rt.RayCast_s_point;if(0===this.m_proxyBuffer.count)return;const c=this.m_positionBuffer.data,l=r;M.b2Vec2.Min(t,e,l.lowerBound),M.b2Vec2.Max(t,e,l.upperBound);let u=1;const f=M.b2Vec2.Subtract(e,t,s),m=M.b2Vec2.Dot(f,f),h=this.GetInsideBoundsEnumerator(l);let _;for(;(_=h.GetNext())>=0;){const e=M.b2Vec2.Subtract(t,c[_],a),r=M.b2Vec2.Dot(e,f),s=r*r-m*(M.b2Vec2.Dot(e,e)-this.m_squaredDiameter);if(s>=0){const a=Math.sqrt(s);let c=(-r-a)/m;if(c>u)continue;if(c<0&&(c=(-r+a)/m,c<0||c>u))continue;const l=M.b2Vec2.AddScaled(e,c,f,o);l.Normalize();const h=i(_,M.b2Vec2.AddScaled(t,c,f,n),l,c);if(u=Math.min(u,h),u<=0)break}}}ComputeAABB(t){const e=this.GetParticleCount();t.lowerBound.x=+M.b2_maxFloat,t.lowerBound.y=+M.b2_maxFloat,t.upperBound.x=-M.b2_maxFloat,t.upperBound.y=-M.b2_maxFloat;const i=this.m_positionBuffer.data;for(let r=0;r<e;r++){const e=i[r];M.b2Vec2.Min(t.lowerBound,e,t.lowerBound),M.b2Vec2.Max(t.upperBound,e,t.upperBound)}t.lowerBound.x-=this.m_particleDiameter,t.lowerBound.y-=this.m_particleDiameter,t.upperBound.x+=this.m_particleDiameter,t.upperBound.y+=this.m_particleDiameter}FreeBuffer(t){null!==t&&(t.length=0)}FreeUserOverridableBuffer(t){0===t.userSuppliedCapacity&&this.FreeBuffer(t.data)}ReallocateBuffer3(t,e,i){(0,M.b2Assert)(i>e);const r=t?t.slice():[];return r.length=i,r}ReallocateBuffer5(t,e,i,r,a){return(0,M.b2Assert)(r>i),(0,M.b2Assert)(!e||r<=e),a&&!t||e||(t=this.ReallocateBuffer3(t,i,r)),t}ReallocateBuffer4(t,e,i,r){return this.ReallocateBuffer5(t.data,t.userSuppliedCapacity,e,i,r)}RequestBuffer(t){return t||(0===this.m_internalAllocatedCapacity&&this.ReallocateInternalAllocatedBuffers(L.b2_minParticleSystemBufferCapacity),(t=[]).length=this.m_internalAllocatedCapacity),t}ReallocateHandleBuffers(t){this.m_handleIndexBuffer.data=this.ReallocateBuffer4(this.m_handleIndexBuffer,this.m_internalAllocatedCapacity,t,!0)}ReallocateInternalAllocatedBuffers(t){function e(e){return e&&t>e?e:t}if(t=e(this.m_def.maxCount),t=e(this.m_flagsBuffer.userSuppliedCapacity),t=e(this.m_positionBuffer.userSuppliedCapacity),t=e(this.m_velocityBuffer.userSuppliedCapacity),t=e(this.m_colorBuffer.userSuppliedCapacity),t=e(this.m_userDataBuffer.userSuppliedCapacity),this.m_internalAllocatedCapacity<t){this.ReallocateHandleBuffers(t),this.m_flagsBuffer.data=this.ReallocateBuffer4(this.m_flagsBuffer,this.m_internalAllocatedCapacity,t,!1);const e=this.m_stuckThreshold>0;this.m_lastBodyContactStepBuffer.data=this.ReallocateBuffer4(this.m_lastBodyContactStepBuffer,this.m_internalAllocatedCapacity,t,e),this.m_bodyContactCountBuffer.data=this.ReallocateBuffer4(this.m_bodyContactCountBuffer,this.m_internalAllocatedCapacity,t,e),this.m_consecutiveContactStepsBuffer.data=this.ReallocateBuffer4(this.m_consecutiveContactStepsBuffer,this.m_internalAllocatedCapacity,t,e),this.m_positionBuffer.data=this.ReallocateBuffer4(this.m_positionBuffer,this.m_internalAllocatedCapacity,t,!1),this.m_velocityBuffer.data=this.ReallocateBuffer4(this.m_velocityBuffer,this.m_internalAllocatedCapacity,t,!1),this.m_forceBuffer=this.ReallocateBuffer5(this.m_forceBuffer,0,this.m_internalAllocatedCapacity,t,!1),this.m_weightBuffer=this.ReallocateBuffer5(this.m_weightBuffer,0,this.m_internalAllocatedCapacity,t,!1),this.m_staticPressureBuffer=this.ReallocateBuffer5(this.m_staticPressureBuffer,0,this.m_internalAllocatedCapacity,t,!0),this.m_accumulationBuffer=this.ReallocateBuffer5(this.m_accumulationBuffer,0,this.m_internalAllocatedCapacity,t,!1),this.m_accumulation2Buffer=this.ReallocateBuffer5(this.m_accumulation2Buffer,0,this.m_internalAllocatedCapacity,t,!0),this.m_depthBuffer=this.ReallocateBuffer5(this.m_depthBuffer,0,this.m_internalAllocatedCapacity,t,!0),this.m_colorBuffer.data=this.ReallocateBuffer4(this.m_colorBuffer,this.m_internalAllocatedCapacity,t,!0),this.m_groupBuffer=this.ReallocateBuffer5(this.m_groupBuffer,0,this.m_internalAllocatedCapacity,t,!1),this.m_userDataBuffer.data=this.ReallocateBuffer4(this.m_userDataBuffer,this.m_internalAllocatedCapacity,t,!0),this.m_expirationTimeBuffer.data=this.ReallocateBuffer4(this.m_expirationTimeBuffer,this.m_internalAllocatedCapacity,t,!0),this.m_indexByExpirationTimeBuffer.data=this.ReallocateBuffer4(this.m_indexByExpirationTimeBuffer,this.m_internalAllocatedCapacity,t,!1),this.m_internalAllocatedCapacity=t}}CreateParticleForGroup(t,e,i){var r,a,s,o,n,c;const l=new k.b2ParticleDef;l.flags=null!==(r=t.flags)&&void 0!==r?r:0,M.b2Transform.MultiplyVec2(e,i,l.position),M.b2Vec2.Add(null!==(a=t.linearVelocity)&&void 0!==a?a:M.b2Vec2.ZERO,M.b2Vec2.CrossScalarVec2(null!==(s=t.angularVelocity)&&void 0!==s?s:0,M.b2Vec2.Subtract(l.position,null!==(o=t.position)&&void 0!==o?o:M.b2Vec2.ZERO,M.b2Vec2.s_t0),M.b2Vec2.s_t0),l.velocity),l.color.Copy(null!==(n=t.color)&&void 0!==n?n:M.b2Color.ZERO),l.lifetime=null!==(c=t.lifetime)&&void 0!==c?c:0,l.userData=t.userData,this.CreateParticle(l)}CreateParticlesStrokeShapeForGroup(t,e,i){var r;const a=rt.CreateParticlesStrokeShapeForGroup_s_edge,s=rt.CreateParticlesStrokeShapeForGroup_s_d,o=rt.CreateParticlesStrokeShapeForGroup_s_p;let n=null!==(r=e.stride)&&void 0!==r?r:0;0===n&&(n=this.GetParticleStride());let c=0;const l=t.GetChildCount();for(let r=0;r<l;r++){let l=null;t.GetType()===M.b2ShapeType.e_edge?l=t:(l=a,t.GetChildEdge(l,r));const u=M.b2Vec2.Subtract(l.m_vertex2,l.m_vertex1,s),f=u.Length();for(;c<f;){const t=M.b2Vec2.AddScaled(l.m_vertex1,c/f,u,o);this.CreateParticleForGroup(e,i,t),c+=n}c-=f}}CreateParticlesFillShapeForGroup(t,e,i){var r;const a=rt.CreateParticlesFillShapeForGroup_s_aabb,s=rt.CreateParticlesFillShapeForGroup_s_p;let o=null!==(r=e.stride)&&void 0!==r?r:0;0===o&&(o=this.GetParticleStride());const n=M.b2Transform.IDENTITY,c=a;t.ComputeAABB(c,n,0);for(let r=Math.floor(c.lowerBound.y/o)*o;r<c.upperBound.y;r+=o)for(let a=Math.floor(c.lowerBound.x/o)*o;a<c.upperBound.x;a+=o){const o=s.Set(a,r);t.TestPoint(n,o)&&this.CreateParticleForGroup(e,i,o)}}CreateParticlesWithShapeForGroup(t,e,i){switch(t.GetType()){case M.b2ShapeType.e_edge:case M.b2ShapeType.e_chain:this.CreateParticlesStrokeShapeForGroup(t,e,i);break;case M.b2ShapeType.e_polygon:case M.b2ShapeType.e_circle:this.CreateParticlesFillShapeForGroup(t,e,i)}}CreateParticlesWithShapesForGroup(t,e,i,r){const a=new mt(t,e);this.CreateParticlesFillShapeForGroup(a,i,r)}CloneParticle(t,e){const i=new k.b2ParticleDef;i.flags=this.m_flagsBuffer.data[t],i.position.Copy(this.m_positionBuffer.data[t]),i.velocity.Copy(this.m_velocityBuffer.data[t]),this.m_colorBuffer.data&&i.color.Copy(this.m_colorBuffer.data[t]),this.m_userDataBuffer.data&&(i.userData=this.m_userDataBuffer.data[t]),i.group=e;const r=this.CreateParticle(i);if(this.m_handleIndexBuffer.data){const e=this.m_handleIndexBuffer.data[t];e&&e.SetIndex(r),this.m_handleIndexBuffer.data[r]=e,this.m_handleIndexBuffer.data[t]=null}return this.m_lastBodyContactStepBuffer.data&&(this.m_lastBodyContactStepBuffer.data[r]=this.m_lastBodyContactStepBuffer.data[t]),this.m_bodyContactCountBuffer.data&&(this.m_bodyContactCountBuffer.data[r]=this.m_bodyContactCountBuffer.data[t]),this.m_consecutiveContactStepsBuffer.data&&(this.m_consecutiveContactStepsBuffer.data[r]=this.m_consecutiveContactStepsBuffer.data[t]),this.m_hasForce&&this.m_forceBuffer[r].Copy(this.m_forceBuffer[t]),this.m_staticPressureBuffer&&(this.m_staticPressureBuffer[r]=this.m_staticPressureBuffer[t]),this.m_depthBuffer&&(this.m_depthBuffer[r]=this.m_depthBuffer[t]),this.m_expirationTimeBuffer.data&&(this.m_expirationTimeBuffer.data[r]=this.m_expirationTimeBuffer.data[t]),r}DestroyParticlesInGroup(t,e=!1){for(let i=t.m_firstIndex;i<t.m_lastIndex;i++)this.DestroyParticle(i,e)}DestroyParticleGroup(t){const e=this.m_world.GetDestructionListener();null==e||e.SayGoodbyeParticleGroup(t),this.SetGroupFlags(t,0);for(let e=t.m_firstIndex;e<t.m_lastIndex;e++)this.m_groupBuffer[e]=null;t.m_prev&&(t.m_prev.m_next=t.m_next),t.m_next&&(t.m_next.m_prev=t.m_prev),t===this.m_groupList&&(this.m_groupList=t.m_next),--this.m_groupCount}static ParticleCanBeConnected(t,e){return 0!=(t&(k.b2ParticleFlag.b2_wallParticle|k.b2ParticleFlag.b2_springParticle|k.b2ParticleFlag.b2_elasticParticle))||null!==e&&0!=(e.GetGroupFlags()&E.b2ParticleGroupFlag.b2_rigidParticleGroup)}UpdatePairsAndTriads(t,e,i){const r=rt.UpdatePairsAndTriads_s_dab,a=rt.UpdatePairsAndTriads_s_dbc,s=rt.UpdatePairsAndTriads_s_dca,o=this.m_positionBuffer.data;let n=0;for(let i=t;i<e;i++)n|=this.m_flagsBuffer.data[i];if(n&rt.k_pairFlags)for(let r=0;r<this.m_contactBuffer.count;r++){const a=this.m_contactBuffer.data[r],s=a.indexA,n=a.indexB,c=this.m_flagsBuffer.data[s],l=this.m_flagsBuffer.data[n],u=this.m_groupBuffer[s],f=this.m_groupBuffer[n];if(s>=t&&s<e&&n>=t&&n<e&&!((c|l)&k.b2ParticleFlag.b2_zombieParticle)&&(c|l)&rt.k_pairFlags&&(i.IsNecessary(s)||i.IsNecessary(n))&&rt.ParticleCanBeConnected(c,u)&&rt.ParticleCanBeConnected(l,f)&&i.ShouldCreatePair(s,n)){const t=this.m_pairBuffer.data[this.m_pairBuffer.Append()];t.indexA=s,t.indexB=n,t.flags=a.flags,t.strength=Math.min(u?u.m_strength:1,f?f.m_strength:1),t.distance=M.b2Vec2.Distance(o[s],o[n])}X(this.m_pairBuffer.data,0,this.m_pairBuffer.count,rt.ComparePairIndices),this.m_pairBuffer.Unique(rt.MatchPairIndices)}if(n&rt.k_triadFlags){const n=new U.b2VoronoiDiagram(e-t);for(let r=t;r<e;r++){const t=this.m_flagsBuffer.data[r],e=this.m_groupBuffer[r];t&k.b2ParticleFlag.b2_zombieParticle||!rt.ParticleCanBeConnected(t,e)||n.AddGenerator(o[r],r,i.IsNecessary(r))}const c=this.GetParticleStride();n.Generate(c/2,2*c),n.GetNodes(((t,e,n)=>{const c=this.m_flagsBuffer.data[t],l=this.m_flagsBuffer.data[e],u=this.m_flagsBuffer.data[n];if((c|l|u)&rt.k_triadFlags&&i.ShouldCreateTriad(t,e,n)){const i=o[t],f=o[e],m=o[n],h=M.b2Vec2.Subtract(i,f,r),_=M.b2Vec2.Subtract(f,m,a),d=M.b2Vec2.Subtract(m,i,s),p=L.b2_maxTriadDistanceSquared*this.m_squaredDiameter;if(M.b2Vec2.Dot(h,h)>p||M.b2Vec2.Dot(_,_)>p||M.b2Vec2.Dot(d,d)>p)return;const B=this.m_groupBuffer[t],b=this.m_groupBuffer[e],y=this.m_groupBuffer[n],P=this.m_triadBuffer.data[this.m_triadBuffer.Append()];P.indexA=t,P.indexB=e,P.indexC=n,P.flags=c|l|u,P.strength=Math.min(Math.min(B?B.m_strength:1,b?b.m_strength:1),y?y.m_strength:1);const g=(i.x+f.x+m.x)/3,x=(i.y+f.y+m.y)/3;P.pa.x=i.x-g,P.pa.y=i.y-x,P.pb.x=f.x-g,P.pb.y=f.y-x,P.pc.x=m.x-g,P.pc.y=m.y-x,P.ka=-M.b2Vec2.Dot(d,h),P.kb=-M.b2Vec2.Dot(h,_),P.kc=-M.b2Vec2.Dot(_,d),P.s=M.b2Vec2.Cross(i,f)+M.b2Vec2.Cross(f,m)+M.b2Vec2.Cross(m,i)}})),X(this.m_triadBuffer.data,0,this.m_triadBuffer.count,rt.CompareTriadIndices),this.m_triadBuffer.Unique(rt.MatchTriadIndices)}}UpdatePairsAndTriadsWithReactiveParticles(){const t=new ht(this.m_flagsBuffer);this.UpdatePairsAndTriads(0,this.m_count,t);for(let t=0;t<this.m_count;t++)this.m_flagsBuffer.data[t]&=~k.b2ParticleFlag.b2_reactiveParticle;this.m_allParticleFlags&=~k.b2ParticleFlag.b2_reactiveParticle}static ComparePairIndices(t,e){const i=t.indexA-e.indexA;return 0!==i?i<0:t.indexB<e.indexB}static MatchPairIndices(t,e){return t.indexA===e.indexA&&t.indexB===e.indexB}static CompareTriadIndices(t,e){const i=t.indexA-e.indexA;if(0!==i)return i<0;const r=t.indexB-e.indexB;return 0!==r?r<0:t.indexC<e.indexC}static MatchTriadIndices(t,e){return t.indexA===e.indexA&&t.indexB===e.indexB&&t.indexC===e.indexC}static InitializeParticleLists(t,e){const i=t.GetBufferIndex(),r=t.GetParticleCount();for(let t=0;t<r;t++){const r=e[t];r.list=r,r.next=null,r.count=1,r.index=t+i}}MergeParticleListsInContact(t,e){const i=t.GetBufferIndex();for(let r=0;r<this.m_contactBuffer.count;r++){const a=this.m_contactBuffer.data[r],s=a.indexA,o=a.indexB;if(!t.ContainsParticle(s)||!t.ContainsParticle(o))continue;let n=e[s-i].list,c=e[o-i].list;if(n!==c){if(n.count<c.count){const t=n;n=c,c=t}rt.MergeParticleLists(n,c)}}}static MergeParticleLists(t,e){for(let i=e;;){i.list=t;const e=i.next;if(!e){i.next=t.next;break}i=e}t.next=e,t.count+=e.count,e.count=0}static FindLongestParticleList(t,e){const i=t.GetParticleCount();let r=e[0];for(let t=0;t<i;t++){const i=e[t];r.count<i.count&&(r=i)}return r}MergeZombieParticleListNodes(t,e,i){const r=t.GetParticleCount();for(let t=0;t<r;t++){const r=e[t];r!==i&&this.m_flagsBuffer.data[r.index]&k.b2ParticleFlag.b2_zombieParticle&&rt.MergeParticleListAndNode(i,r)}}static MergeParticleListAndNode(t,e){e.list=t,e.next=t.next,t.next=e,t.count++,e.count=0}CreateParticleGroupsFromParticleList(t,e,i){const r=t.GetParticleCount(),a=new E.b2ParticleGroupDef;a.groupFlags=t.GetGroupFlags(),a.userData=t.GetUserData();for(let t=0;t<r;t++){const r=e[t];if(!r.count||r===i)continue;const s=this.CreateParticleGroup(a);for(let t=r;t;t=t.next){const e=t.index,i=this.CloneParticle(e,s);this.m_flagsBuffer.data[e]|=k.b2ParticleFlag.b2_zombieParticle,t.index=i}}}UpdatePairsAndTriadsWithParticleList(t,e){const i=t.GetBufferIndex();for(let r=0;r<this.m_pairBuffer.count;r++){const a=this.m_pairBuffer.data[r],s=a.indexA,o=a.indexB;t.ContainsParticle(s)&&(a.indexA=e[s-i].index),t.ContainsParticle(o)&&(a.indexB=e[o-i].index)}for(let r=0;r<this.m_triadBuffer.count;r++){const a=this.m_triadBuffer.data[r],s=a.indexA,o=a.indexB,n=a.indexC;t.ContainsParticle(s)&&(a.indexA=e[s-i].index),t.ContainsParticle(o)&&(a.indexB=e[o-i].index),t.ContainsParticle(n)&&(a.indexC=e[n-i].index)}}ComputeDepth(){const t=[];let e=0;for(let i=0;i<this.m_contactBuffer.count;i++){const r=this.m_contactBuffer.data[i],a=r.indexA,s=r.indexB,o=this.m_groupBuffer[a],n=this.m_groupBuffer[s];o&&o===n&&o.m_groupFlags&E.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth&&(t[e++]=r)}const i=[];let r=0;for(let t=this.m_groupList;t;t=t.GetNext())if(t.m_groupFlags&E.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth){i[r++]=t,this.SetGroupFlags(t,t.m_groupFlags&~E.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth);for(let e=t.m_firstIndex;e<t.m_lastIndex;e++)this.m_accumulationBuffer[e]=0}for(let i=0;i<e;i++){const e=t[i],r=e.indexA,a=e.indexB,s=e.weight;this.m_accumulationBuffer[r]+=s,this.m_accumulationBuffer[a]+=s}for(let t=0;t<r;t++){const e=i[t];for(let t=e.m_firstIndex;t<e.m_lastIndex;t++){const e=this.m_accumulationBuffer[t];this.m_depthBuffer[t]=e<.8?0:M.b2_maxFloat}}const a=Math.sqrt(this.m_count)>>0;for(let i=0;i<a;i++){let i=!1;for(let r=0;r<e;r++){const e=t[r],a=e.indexA,s=e.indexB,o=1-e.weight,n=this.m_depthBuffer[a],c=this.m_depthBuffer[s],l=c+o,u=n+o;n>l&&(this.m_depthBuffer[a]=l,i=!0),c>u&&(this.m_depthBuffer[s]=u,i=!0)}if(!i)break}for(let t=0;t<r;t++){const e=i[t];for(let t=e.m_firstIndex;t<e.m_lastIndex;t++)this.m_depthBuffer[t]<M.b2_maxFloat?this.m_depthBuffer[t]*=this.m_particleDiameter:this.m_depthBuffer[t]=0}}GetInsideBoundsEnumerator(t){const e=rt.computeTag(this.m_inverseDiameter*t.lowerBound.x-1,this.m_inverseDiameter*t.lowerBound.y-1),i=rt.computeTag(this.m_inverseDiameter*t.upperBound.x+1,this.m_inverseDiameter*t.upperBound.y+1),r=this.m_proxyBuffer.count,a=Q(this.m_proxyBuffer.data,0,r,e,at.CompareProxyTag),s=Z(this.m_proxyBuffer.data,0,r,i,at.CompareTagProxy);return new st(this,e,i,a,s)}UpdateAllParticleFlags(){this.m_allParticleFlags=0;for(let t=0;t<this.m_count;t++)this.m_allParticleFlags|=this.m_flagsBuffer.data[t];this.m_needsUpdateAllParticleFlags=!1}UpdateAllGroupFlags(){this.m_allGroupFlags=0;for(let t=this.m_groupList;t;t=t.GetNext())this.m_allGroupFlags|=t.m_groupFlags;this.m_needsUpdateAllGroupFlags=!1}AddContact(t,e){const i=this.m_flagsBuffer.data,r=this.m_positionBuffer.data,a=M.b2Vec2.Subtract(r[e],r[t],rt.AddContact_s_d),s=M.b2Vec2.Dot(a,a);if(s>0&&s<this.m_squaredDiameter){const r=1/Math.sqrt(s),o=this.m_contactBuffer.data[this.m_contactBuffer.Append()];o.indexA=t,o.indexB=e,o.flags=i[t]|i[e],o.weight=1-s*r*this.m_inverseDiameter,o.normal.x=r*a.x,o.normal.y=r*a.y}}FindContacts_Reference(){const t=this.m_proxyBuffer.count;this.m_contactBuffer.count=0;for(let e=0,i=0;e<t;e++){const r=rt.computeRelativeTag(this.m_proxyBuffer.data[e].tag,1,0);for(let i=e+1;i<t&&!(r<this.m_proxyBuffer.data[i].tag);i++)this.AddContact(this.m_proxyBuffer.data[e].index,this.m_proxyBuffer.data[i].index);const a=rt.computeRelativeTag(this.m_proxyBuffer.data[e].tag,-1,1);for(;i<t&&!(a<=this.m_proxyBuffer.data[i].tag);i++);const s=rt.computeRelativeTag(this.m_proxyBuffer.data[e].tag,1,1);for(let r=i;r<t&&!(s<this.m_proxyBuffer.data[r].tag);r++)this.AddContact(this.m_proxyBuffer.data[e].index,this.m_proxyBuffer.data[r].index)}}FindContacts(){this.FindContacts_Reference()}UpdateProxies_Reference(){const t=this.m_positionBuffer.data,e=this.m_inverseDiameter;for(let i=0;i<this.m_proxyBuffer.count;++i){const r=this.m_proxyBuffer.data[i],a=t[r.index];r.tag=rt.computeTag(e*a.x,e*a.y)}}UpdateProxies(){this.UpdateProxies_Reference()}SortProxies(){z(this.m_proxyBuffer.data,0,this.m_proxyBuffer.count,at.CompareProxyProxy)}FilterContacts(){const t=this.GetParticleContactFilter();null!==t&&this.m_contactBuffer.RemoveIf((e=>0!=(e.flags&k.b2ParticleFlag.b2_particleContactFilterParticle)&&!t.ShouldCollideParticleParticle(this,e.indexA,e.indexB)))}NotifyContactListenerPreContact(t){if(null!==this.GetParticleContactListener())throw t.Initialize(this.m_contactBuffer,this.m_flagsBuffer),new Error}NotifyContactListenerPostContact(t){const e=this.GetParticleContactListener();if(null!==e){for(let t=0;t<this.m_contactBuffer.count;++t){const i=this.m_contactBuffer.data[t];e.BeginContactParticleParticle(this,i)}throw new Error}}static b2ParticleContactIsZombie(t){return(t.flags&k.b2ParticleFlag.b2_zombieParticle)===k.b2ParticleFlag.b2_zombieParticle}UpdateContacts(t){this.UpdateProxies(),this.SortProxies();const e=new lt;this.NotifyContactListenerPreContact(e),this.FindContacts(),this.FilterContacts(),this.NotifyContactListenerPostContact(e),t&&this.m_contactBuffer.RemoveIf(rt.b2ParticleContactIsZombie)}NotifyBodyContactListenerPreContact(t){if(null!==this.GetFixtureContactListener())throw t.Initialize(this.m_bodyContactBuffer,this.m_flagsBuffer),new Error}NotifyBodyContactListenerPostContact(t){const e=this.GetFixtureContactListener();if(null!==e){for(let t=0;t<this.m_bodyContactBuffer.count;t++){const i=this.m_bodyContactBuffer.data[t];e.BeginContactFixtureParticle(this,i)}throw new Error}}UpdateBodyContacts(){const t=rt.UpdateBodyContacts_s_aabb,e=new ct;if(this.NotifyBodyContactListenerPreContact(e),this.m_stuckThreshold>0){const t=this.GetParticleCount();for(let e=0;e<t;e++)this.m_bodyContactCountBuffer.data[e]=0,this.m_timestamp>this.m_lastBodyContactStepBuffer.data[e]+1&&(this.m_consecutiveContactStepsBuffer.data[e]=0)}this.m_bodyContactBuffer.SetCount(0),this.m_stuckParticleBuffer.SetCount(0);const i=t;this.ComputeAABB(i);const r=this.UpdateBodyContacts_callback;r.m_contactFilter=this.GetFixtureContactFilter(),this.m_world.QueryAABB(i,(t=>r.ReportFixture(t))),this.m_def.strictContactCheck&&this.RemoveSpuriousBodyContacts(),this.NotifyBodyContactListenerPostContact(e)}Solve(t){const e=rt.Solve_s_subStep;if(0===this.m_count)return;if(this.m_expirationTimeBuffer.data&&this.SolveLifetimes(t),this.m_allParticleFlags&k.b2ParticleFlag.b2_zombieParticle&&this.SolveZombie(),this.m_needsUpdateAllParticleFlags&&this.UpdateAllParticleFlags(),this.m_needsUpdateAllGroupFlags&&this.UpdateAllGroupFlags(),this.m_paused)return;const{particleIterations:i}=t.config;for(this.m_iterationIndex=0;this.m_iterationIndex<i;this.m_iterationIndex++){++this.m_timestamp;const r=e.Copy(t);r.dt/=i,r.inv_dt*=i,this.UpdateContacts(!1),this.UpdateBodyContacts(),this.ComputeWeight(),this.m_allGroupFlags&E.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth&&this.ComputeDepth(),this.m_allParticleFlags&k.b2ParticleFlag.b2_reactiveParticle&&this.UpdatePairsAndTriadsWithReactiveParticles(),this.m_hasForce&&this.SolveForce(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_viscousParticle&&this.SolveViscous(),this.m_allParticleFlags&k.b2ParticleFlag.b2_repulsiveParticle&&this.SolveRepulsive(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_powderParticle&&this.SolvePowder(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_tensileParticle&&this.SolveTensile(r),this.m_allGroupFlags&E.b2ParticleGroupFlag.b2_solidParticleGroup&&this.SolveSolid(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_colorMixingParticle&&this.SolveColorMixing(),this.SolveGravity(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_staticPressureParticle&&this.SolveStaticPressure(r),this.SolvePressure(r),this.SolveDamping(r),this.m_allParticleFlags&rt.k_extraDampingFlags&&this.SolveExtraDamping(),this.m_allParticleFlags&k.b2ParticleFlag.b2_elasticParticle&&this.SolveElastic(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_springParticle&&this.SolveSpring(r),this.LimitVelocity(r),this.m_allGroupFlags&E.b2ParticleGroupFlag.b2_rigidParticleGroup&&this.SolveRigidDamping(),this.m_allParticleFlags&k.b2ParticleFlag.b2_barrierParticle&&this.SolveBarrier(r),this.SolveCollision(r),this.m_allGroupFlags&E.b2ParticleGroupFlag.b2_rigidParticleGroup&&this.SolveRigid(r),this.m_allParticleFlags&k.b2ParticleFlag.b2_wallParticle&&this.SolveWall();for(let t=0;t<this.m_count;t++)this.m_positionBuffer.data[t].AddScaled(r.dt,this.m_velocityBuffer.data[t])}}SolveCollision(t){const e=rt.SolveCollision_s_aabb,i=this.m_positionBuffer.data,r=this.m_velocityBuffer.data,a=e;a.lowerBound.x=+M.b2_maxFloat,a.lowerBound.y=+M.b2_maxFloat,a.upperBound.x=-M.b2_maxFloat,a.upperBound.y=-M.b2_maxFloat;for(let e=0;e<this.m_count;e++){const s=r[e],o=i[e],n=o.x+t.dt*s.x,c=o.y+t.dt*s.y;a.lowerBound.x=Math.min(a.lowerBound.x,Math.min(o.x,n)),a.lowerBound.y=Math.min(a.lowerBound.y,Math.min(o.y,c)),a.upperBound.x=Math.max(a.upperBound.x,Math.max(o.x,n)),a.upperBound.y=Math.max(a.upperBound.y,Math.max(o.y,c))}const s=this.SolveCollision_callback;s.m_step=t,this.m_world.QueryAABB(a,(t=>s.ReportFixture(t)))}LimitVelocity(t){const e=this.m_velocityBuffer.data,i=this.GetCriticalVelocitySquared(t);for(let t=0;t<this.m_count;t++){const r=e[t],a=M.b2Vec2.Dot(r,r);a>i&&r.Scale(Math.sqrt(i/a))}}SolveGravity(t){const e=rt.SolveGravity_s_gravity,i=this.m_velocityBuffer.data,r=M.b2Vec2.Scale(t.dt*this.m_def.gravityScale,this.m_world.GetGravity(),e);for(let t=0;t<this.m_count;t++)i[t].Add(r)}SolveBarrier(t){const e=rt.SolveBarrier_s_aabb,i=rt.SolveBarrier_s_va,r=rt.SolveBarrier_s_vb,a=rt.SolveBarrier_s_pba,s=rt.SolveBarrier_s_vba,o=rt.SolveBarrier_s_vc,n=rt.SolveBarrier_s_pca,c=rt.SolveBarrier_s_vca,l=rt.SolveBarrier_s_qba,u=rt.SolveBarrier_s_qca,f=rt.SolveBarrier_s_dv,m=rt.SolveBarrier_s_f,h=this.m_positionBuffer.data,_=this.m_velocityBuffer.data;for(let t=0;t<this.m_count;t++){0!=(this.m_flagsBuffer.data[t]&rt.k_barrierWallFlags)&&_[t].SetZero()}const d=L.b2_barrierCollisionTime*t.dt,p=this.GetParticleMass();for(let B=0;B<this.m_pairBuffer.count;B++){const b=this.m_pairBuffer.data[B];if(b.flags&k.b2ParticleFlag.b2_barrierParticle){const B=b.indexA,y=b.indexB,P=h[B],g=h[y],x=e;M.b2Vec2.Min(P,g,x.lowerBound),M.b2Vec2.Max(P,g,x.upperBound);const S=this.m_groupBuffer[B],C=this.m_groupBuffer[y],v=this.GetLinearVelocity(S,B,P,i),G=this.GetLinearVelocity(C,y,g,r),F=M.b2Vec2.Subtract(g,P,a),V=M.b2Vec2.Subtract(G,v,s),w=this.GetInsideBoundsEnumerator(x);let A;for(;(A=w.GetNext())>=0;){const e=h[A],i=this.m_groupBuffer[A];if(S!==i&&C!==i){const r=this.GetLinearVelocity(i,A,e,o),a=M.b2Vec2.Subtract(e,P,n),s=M.b2Vec2.Subtract(r,v,c),h=M.b2Vec2.Cross(V,s),B=M.b2Vec2.Cross(F,s)-M.b2Vec2.Cross(a,V),b=M.b2Vec2.Cross(F,a);let y,g;const x=l,S=u;if(0===h){if(0===B)continue;if(g=-b/B,!(g>=0&&g<d))continue;if(M.b2Vec2.AddScaled(F,g,V,x),M.b2Vec2.AddScaled(a,g,s,S),y=M.b2Vec2.Dot(x,S)/M.b2Vec2.Dot(x,x),!(y>=0&&y<=1))continue}else{const t=B*B-4*b*h;if(t<0)continue;const e=Math.sqrt(t);let i=(-B-e)/(2*h),r=(-B+e)/(2*h);if(i>r){const t=i;i=r,r=t}if(g=i,M.b2Vec2.AddScaled(F,g,V,x),M.b2Vec2.AddScaled(a,g,s,S),y=M.b2Vec2.Dot(x,S)/M.b2Vec2.Dot(x,x),!(g>=0&&g<d&&y>=0&&y<=1)){if(g=r,!(g>=0&&g<d))continue;if(M.b2Vec2.AddScaled(F,g,V,x),M.b2Vec2.AddScaled(a,g,s,S),y=M.b2Vec2.Dot(x,S)/M.b2Vec2.Dot(x,x),!(y>=0&&y<=1))continue}}const C=f;C.x=v.x+y*V.x-r.x,C.y=v.y+y*V.y-r.y;const G=M.b2Vec2.Scale(p,C,m);if(i&&this.IsRigidGroup(i)){const t=i.GetMass(),r=i.GetInertia();t>0&&i.m_linearVelocity.AddScaled(1/t,G),r>0&&(i.m_angularVelocity+=M.b2Vec2.Cross(M.b2Vec2.Subtract(e,i.GetCenter(),M.b2Vec2.s_t0),G)/r)}else _[A].Add(C);this.ParticleApplyForce(A,G.Scale(-t.inv_dt))}}}}}SolveStaticPressure(t){this.m_staticPressureBuffer=this.RequestBuffer(this.m_staticPressureBuffer);const e=this.GetCriticalPressure(t),i=this.m_def.staticPressureStrength*e,r=L.b2_maxParticlePressure*e,a=this.m_def.staticPressureRelaxation;for(let t=0;t<this.m_def.staticPressureIterations;t++){for(let t=0;t<this.m_count;t++)this.m_accumulationBuffer[t]=0;for(let t=0;t<this.m_contactBuffer.count;t++){const e=this.m_contactBuffer.data[t];if(e.flags&k.b2ParticleFlag.b2_staticPressureParticle){const t=e.indexA,i=e.indexB,r=e.weight;this.m_accumulationBuffer[t]+=r*this.m_staticPressureBuffer[i],this.m_accumulationBuffer[i]+=r*this.m_staticPressureBuffer[t]}}for(let t=0;t<this.m_count;t++){const e=this.m_weightBuffer[t];if(this.m_flagsBuffer.data[t]&k.b2ParticleFlag.b2_staticPressureParticle){const s=(this.m_accumulationBuffer[t]+i*(e-L.b2_minParticleWeight))/(e+a);this.m_staticPressureBuffer[t]=(0,M.b2Clamp)(s,0,r)}else this.m_staticPressureBuffer[t]=0}}}ComputeWeight(){for(let t=0;t<this.m_count;t++)this.m_weightBuffer[t]=0;for(let t=0;t<this.m_bodyContactBuffer.count;t++){const e=this.m_bodyContactBuffer.data[t],i=e.index,r=e.weight;this.m_weightBuffer[i]+=r}for(let t=0;t<this.m_contactBuffer.count;t++){const e=this.m_contactBuffer.data[t],i=e.indexA,r=e.indexB,a=e.weight;this.m_weightBuffer[i]+=a,this.m_weightBuffer[r]+=a}}SolvePressure(t){const e=rt.SolvePressure_s_f,i=this.m_positionBuffer.data,r=this.m_velocityBuffer.data,a=this.GetCriticalPressure(t),s=this.m_def.pressureStrength*a,o=L.b2_maxParticlePressure*a;for(let t=0;t<this.m_count;t++){const e=this.m_weightBuffer[t],i=s*Math.max(0,e-L.b2_minParticleWeight);this.m_accumulationBuffer[t]=Math.min(i,o)}if(this.m_allParticleFlags&rt.k_noPressureFlags)for(let t=0;t<this.m_count;t++)this.m_flagsBuffer.data[t]&rt.k_noPressureFlags&&(this.m_accumulationBuffer[t]=0);if(this.m_allParticleFlags&k.b2ParticleFlag.b2_staticPressureParticle)for(let t=0;t<this.m_count;t++)this.m_flagsBuffer.data[t]&k.b2ParticleFlag.b2_staticPressureParticle&&(this.m_accumulationBuffer[t]+=this.m_staticPressureBuffer[t]);const n=t.dt/(this.m_def.density*this.m_particleDiameter),c=this.GetParticleInvMass();for(let t=0;t<this.m_bodyContactBuffer.count;t++){const a=this.m_bodyContactBuffer.data[t],o=a.index,l=a.body,u=a.weight,f=a.mass,m=a.normal,h=i[o],_=this.m_accumulationBuffer[o]+s*u,d=M.b2Vec2.Scale(n*u*f*_,m,e);r[o].SubtractScaled(c,d),l.ApplyLinearImpulse(d,h,!0)}for(let t=0;t<this.m_contactBuffer.count;t++){const i=this.m_contactBuffer.data[t],a=i.indexA,s=i.indexB,o=i.weight,c=i.normal,l=this.m_accumulationBuffer[a]+this.m_accumulationBuffer[s],u=M.b2Vec2.Scale(n*o*l,c,e);r[a].Subtract(u),r[s].Add(u)}}SolveDamping(t){const e=rt.SolveDamping_s_v,i=rt.SolveDamping_s_f,r=this.m_positionBuffer.data,a=this.m_velocityBuffer.data,s=this.m_def.dampingStrength,o=1/this.GetCriticalVelocity(t),n=this.GetParticleInvMass();for(let t=0;t<this.m_bodyContactBuffer.count;t++){const c=this.m_bodyContactBuffer.data[t],l=c.index,u=c.body,f=c.weight,m=c.mass,h=c.normal,_=r[l],d=M.b2Vec2.Subtract(u.GetLinearVelocityFromWorldPoint(_,M.b2Vec2.s_t0),a[l],e),p=M.b2Vec2.Dot(d,h);if(p<0){const t=Math.max(s*f,Math.min(-o*p,.5)),e=M.b2Vec2.Scale(t*m*p,h,i);a[l].AddScaled(n,e),u.ApplyLinearImpulse(e.Negate(),_,!0)}}for(let t=0;t<this.m_contactBuffer.count;t++){const r=this.m_contactBuffer.data[t],n=r.indexA,c=r.indexB,l=r.weight,u=r.normal,f=M.b2Vec2.Subtract(a[c],a[n],e),m=M.b2Vec2.Dot(f,u);if(m<0){const t=Math.max(s*l,Math.min(-o*m,.5)),e=M.b2Vec2.Scale(t*m,u,i);a[n].Add(e),a[c].Subtract(e)}}}SolveRigidDamping(){const t=rt.SolveRigidDamping_s_t0,e=rt.SolveRigidDamping_s_t1,i=rt.SolveRigidDamping_s_p,r=rt.SolveRigidDamping_s_v,a=[0],s=[0],o=[0],n=[0],c=[0],l=[0],u=this.m_positionBuffer.data,f=this.m_def.dampingStrength;for(let i=0;i<this.m_bodyContactBuffer.count;i++){const m=this.m_bodyContactBuffer.data[i],h=m.index,_=this.m_groupBuffer[h];if(_&&this.IsRigidGroup(_)){const i=m.body,d=m.normal,p=m.weight,B=u[h],b=M.b2Vec2.Subtract(i.GetLinearVelocityFromWorldPoint(B,t),_.GetLinearVelocityFromWorldPoint(B,e),r),y=M.b2Vec2.Dot(b,d);if(y<0){this.InitDampingParameterWithRigidGroupOrParticle(a,s,o,!0,_,h,B,d),this.InitDampingParameter(n,c,l,i.GetMass(),i.GetInertia()-i.GetMass()*i.GetLocalCenter().LengthSquared(),i.GetWorldCenter(),B,d);const t=f*Math.min(p,1)*this.ComputeDampingImpulse(a[0],s[0],o[0],n[0],c[0],l[0],y);this.ApplyDamping(a[0],s[0],o[0],!0,_,h,t,d),i.ApplyLinearImpulse(M.b2Vec2.Scale(-t,d,M.b2Vec2.s_t0),B,!0)}}}for(let m=0;m<this.m_contactBuffer.count;m++){const h=this.m_contactBuffer.data[m],_=h.indexA,d=h.indexB,p=h.normal,B=h.weight,b=this.m_groupBuffer[_],y=this.m_groupBuffer[d],P=this.IsRigidGroup(b),g=this.IsRigidGroup(y);if(b!==y&&(P||g)){const m=M.b2Vec2.Mid(u[_],u[d],i),h=M.b2Vec2.Subtract(this.GetLinearVelocity(y,d,m,t),this.GetLinearVelocity(b,_,m,e),r),x=M.b2Vec2.Dot(h,p);if(x<0){this.InitDampingParameterWithRigidGroupOrParticle(a,s,o,P,b,_,m,p),this.InitDampingParameterWithRigidGroupOrParticle(n,c,l,g,y,d,m,p);const t=f*B*this.ComputeDampingImpulse(a[0],s[0],o[0],n[0],c[0],l[0],x);this.ApplyDamping(a[0],s[0],o[0],P,b,_,t,p),this.ApplyDamping(n[0],c[0],l[0],g,y,d,-t,p)}}}}SolveExtraDamping(){const t=rt.SolveExtraDamping_s_v,e=rt.SolveExtraDamping_s_f,i=this.m_velocityBuffer.data,r=this.m_positionBuffer.data,a=this.GetParticleInvMass();for(let s=0;s<this.m_bodyContactBuffer.count;s++){const o=this.m_bodyContactBuffer.data[s],n=o.index;if(this.m_flagsBuffer.data[n]&rt.k_extraDampingFlags){const s=o.body,c=o.mass,l=o.normal,u=r[n],f=M.b2Vec2.Subtract(s.GetLinearVelocityFromWorldPoint(u,M.b2Vec2.s_t0),i[n],t),m=M.b2Vec2.Dot(f,l);if(m<0){const t=M.b2Vec2.Scale(.5*c*m,l,e);i[n].AddScaled(a,t),s.ApplyLinearImpulse(t.Negate(),u,!0)}}}}SolveWall(){const t=this.m_velocityBuffer.data;for(let e=0;e<this.m_count;e++)this.m_flagsBuffer.data[e]&k.b2ParticleFlag.b2_wallParticle&&t[e].SetZero()}SolveRigid(t){const e=rt.SolveRigid_s_position,i=rt.SolveRigid_s_rotation,r=rt.SolveRigid_s_transform,a=rt.SolveRigid_s_velocityTransform,s=this.m_positionBuffer.data,o=this.m_velocityBuffer.data;for(let n=this.m_groupList;n;n=n.GetNext())if(n.m_groupFlags&E.b2ParticleGroupFlag.b2_rigidParticleGroup){n.UpdateStatistics();const c=i;c.Set(t.dt*n.m_angularVelocity);const l=M.b2Vec2.Add(n.m_center,M.b2Vec2.Subtract(M.b2Vec2.Scale(t.dt,n.m_linearVelocity,M.b2Vec2.s_t0),M.b2Rot.MultiplyVec2(c,n.m_center,M.b2Vec2.s_t1),M.b2Vec2.s_t0),e),u=r;u.SetPositionRotation(l,c),M.b2Transform.Multiply(u,n.m_transform,n.m_transform);const f=a;f.p.x=t.inv_dt*u.p.x,f.p.y=t.inv_dt*u.p.y,f.q.s=t.inv_dt*u.q.s,f.q.c=t.inv_dt*(u.q.c-1);for(let t=n.m_firstIndex;t<n.m_lastIndex;t++)M.b2Transform.MultiplyVec2(f,s[t],o[t])}}SolveElastic(t){const e=rt.SolveElastic_s_pa,i=rt.SolveElastic_s_pb,r=rt.SolveElastic_s_pc,a=rt.SolveElastic_s_r,s=rt.SolveElastic_s_t0,o=this.m_positionBuffer.data,n=this.m_velocityBuffer.data,c=t.inv_dt*this.m_def.elasticStrength;for(let l=0;l<this.m_triadBuffer.count;l++){const u=this.m_triadBuffer.data[l];if(u.flags&k.b2ParticleFlag.b2_elasticParticle){const l=u.indexA,f=u.indexB,m=u.indexC,h=u.pa,_=u.pb,d=u.pc,p=e.Copy(o[l]),B=i.Copy(o[f]),b=r.Copy(o[m]),y=n[l],P=n[f],g=n[m];p.AddScaled(t.dt,y),B.AddScaled(t.dt,P),b.AddScaled(t.dt,g);const x=(p.x+B.x+b.x)/3,S=(p.y+B.y+b.y)/3;p.x-=x,p.y-=S,B.x-=x,B.y-=S,b.x-=x,b.y-=S;const C=a;C.s=M.b2Vec2.Cross(h,p)+M.b2Vec2.Cross(_,B)+M.b2Vec2.Cross(d,b),C.c=M.b2Vec2.Dot(h,p)+M.b2Vec2.Dot(_,B)+M.b2Vec2.Dot(d,b);const v=C.s*C.s+C.c*C.c;let G=1/Math.sqrt(v);Number.isFinite(G)||(G=198177537e11),C.s*=G,C.c*=G;const F=c*u.strength;M.b2Rot.MultiplyVec2(C,h,s),M.b2Vec2.Subtract(s,p,s),M.b2Vec2.Scale(F,s,s),y.Add(s),M.b2Rot.MultiplyVec2(C,_,s),M.b2Vec2.Subtract(s,B,s),M.b2Vec2.Scale(F,s,s),P.Add(s),M.b2Rot.MultiplyVec2(C,d,s),M.b2Vec2.Subtract(s,b,s),M.b2Vec2.Scale(F,s,s),g.Add(s)}}}SolveSpring(t){const e=rt.SolveSpring_s_pa,i=rt.SolveSpring_s_pb,r=rt.SolveSpring_s_d,a=rt.SolveSpring_s_f,s=this.m_positionBuffer.data,o=this.m_velocityBuffer.data,n=t.inv_dt*this.m_def.springStrength;for(let c=0;c<this.m_pairBuffer.count;c++){const l=this.m_pairBuffer.data[c];if(l.flags&k.b2ParticleFlag.b2_springParticle){const c=l.indexA,u=l.indexB,f=e.Copy(s[c]),m=i.Copy(s[u]),h=o[c],_=o[u];f.AddScaled(t.dt,h),m.AddScaled(t.dt,_);const d=M.b2Vec2.Subtract(m,f,r),p=l.distance,B=d.Length(),b=n*l.strength,y=M.b2Vec2.Scale(b*(p-B)/B,d,a);h.Subtract(y),_.Add(y)}}}SolveTensile(t){const e=rt.SolveTensile_s_weightedNormal,i=rt.SolveTensile_s_s,r=rt.SolveTensile_s_f,a=this.m_velocityBuffer.data;for(let t=0;t<this.m_count;t++)this.m_accumulation2Buffer[t]=new M.b2Vec2,this.m_accumulation2Buffer[t].SetZero();for(let t=0;t<this.m_contactBuffer.count;t++){const i=this.m_contactBuffer.data[t];if(i.flags&k.b2ParticleFlag.b2_tensileParticle){const t=i.indexA,r=i.indexB,a=i.weight,s=i.normal,o=M.b2Vec2.Scale((1-a)*a,s,e);this.m_accumulation2Buffer[t].Subtract(o),this.m_accumulation2Buffer[r].Add(o)}}const s=this.GetCriticalVelocity(t),o=this.m_def.surfaceTensionPressureStrength*s,n=this.m_def.surfaceTensionNormalStrength*s,c=L.b2_maxParticleForce*s;for(let t=0;t<this.m_contactBuffer.count;t++){const e=this.m_contactBuffer.data[t];if(e.flags&k.b2ParticleFlag.b2_tensileParticle){const t=e.indexA,s=e.indexB,l=e.weight,u=e.normal,f=this.m_weightBuffer[t]+this.m_weightBuffer[s],m=M.b2Vec2.Subtract(this.m_accumulation2Buffer[s],this.m_accumulation2Buffer[t],i),h=Math.min(o*(f-2)+n*M.b2Vec2.Dot(m,u),c)*l,_=M.b2Vec2.Scale(h,u,r);a[t].Subtract(_),a[s].Add(_)}}}SolveViscous(){const t=rt.SolveViscous_s_v,e=rt.SolveViscous_s_f,i=this.m_positionBuffer.data,r=this.m_velocityBuffer.data,{viscousStrength:a}=this.m_def,s=this.GetParticleInvMass();for(let o=0;o<this.m_bodyContactBuffer.count;o++){const n=this.m_bodyContactBuffer.data[o],c=n.index;if(this.m_flagsBuffer.data[c]&k.b2ParticleFlag.b2_viscousParticle){const o=n.body,l=n.weight,u=n.mass,f=i[c],m=M.b2Vec2.Subtract(o.GetLinearVelocityFromWorldPoint(f,M.b2Vec2.s_t0),r[c],t),h=M.b2Vec2.Scale(a*u*l,m,e);r[c].AddScaled(s,h),o.ApplyLinearImpulse(h.Negate(),f,!0)}}for(let i=0;i<this.m_contactBuffer.count;i++){const s=this.m_contactBuffer.data[i];if(s.flags&k.b2ParticleFlag.b2_viscousParticle){const i=s.indexA,o=s.indexB,n=s.weight,c=M.b2Vec2.Subtract(r[o],r[i],t),l=M.b2Vec2.Scale(a*n,c,e);r[i].Add(l),r[o].Subtract(l)}}}SolveRepulsive(t){const e=rt.SolveRepulsive_s_f,i=this.m_velocityBuffer.data,r=this.m_def.repulsiveStrength*this.GetCriticalVelocity(t);for(let t=0;t<this.m_contactBuffer.count;t++){const a=this.m_contactBuffer.data[t];if(a.flags&k.b2ParticleFlag.b2_repulsiveParticle){const t=a.indexA,s=a.indexB;if(this.m_groupBuffer[t]!==this.m_groupBuffer[s]){const o=a.weight,n=a.normal,c=M.b2Vec2.Scale(r*o,n,e);i[t].Subtract(c),i[s].Add(c)}}}}SolvePowder(t){const e=rt.SolvePowder_s_f,i=this.m_positionBuffer.data,r=this.m_velocityBuffer.data,a=this.m_def.powderStrength*this.GetCriticalVelocity(t),s=1-L.b2_particleStride,o=this.GetParticleInvMass();for(let t=0;t<this.m_bodyContactBuffer.count;t++){const n=this.m_bodyContactBuffer.data[t],c=n.index;if(this.m_flagsBuffer.data[c]&k.b2ParticleFlag.b2_powderParticle){const t=n.weight;if(t>s){const l=n.body,u=n.mass,f=i[c],m=n.normal,h=M.b2Vec2.Scale(a*u*(t-s),m,e);r[c].SubtractScaled(o,h),l.ApplyLinearImpulse(h,f,!0)}}}for(let t=0;t<this.m_contactBuffer.count;t++){const i=this.m_contactBuffer.data[t];if(i.flags&k.b2ParticleFlag.b2_powderParticle){const t=i.weight;if(t>s){const o=i.indexA,n=i.indexB,c=i.normal,l=M.b2Vec2.Scale(a*(t-s),c,e);r[o].Subtract(l),r[n].Add(l)}}}}SolveSolid(t){const e=rt.SolveSolid_s_f,i=this.m_velocityBuffer.data;this.m_depthBuffer=this.RequestBuffer(this.m_depthBuffer);const r=t.inv_dt*this.m_def.ejectionStrength;for(let t=0;t<this.m_contactBuffer.count;t++){const a=this.m_contactBuffer.data[t],s=a.indexA,o=a.indexB;if(this.m_groupBuffer[s]!==this.m_groupBuffer[o]){const t=a.weight,n=a.normal,c=this.m_depthBuffer[s]+this.m_depthBuffer[o],l=M.b2Vec2.Scale(r*c*t,n,e);i[s].Subtract(l),i[o].Add(l)}}}SolveForce(t){const e=this.m_velocityBuffer.data,i=t.dt*this.GetParticleInvMass();for(let t=0;t<this.m_count;t++)e[t].AddScaled(i,this.m_forceBuffer[t]);this.m_hasForce=!1}SolveColorMixing(){const t=.5*this.m_def.colorMixingStrength;if(t)for(let e=0;e<this.m_contactBuffer.count;e++){const i=this.m_contactBuffer.data[e],r=i.indexA,a=i.indexB;if(this.m_flagsBuffer.data[r]&this.m_flagsBuffer.data[a]&k.b2ParticleFlag.b2_colorMixingParticle){const e=this.m_colorBuffer.data[r],i=this.m_colorBuffer.data[a];M.b2Color.MixColors(e,i,t)}}}SolveZombie(){let t=0;const e=[];for(let t=0;t<this.m_count;t++)e[t]=L.b2_invalidParticleIndex;let i=0;const r=this.m_world.GetDestructionListener();for(let a=0;a<this.m_count;a++){const s=this.m_flagsBuffer.data[a];if(s&k.b2ParticleFlag.b2_zombieParticle){if(s&k.b2ParticleFlag.b2_destructionListenerParticle&&(null==r||r.SayGoodbyeParticle(this,a)),this.m_handleIndexBuffer.data){const t=this.m_handleIndexBuffer.data[a];t&&(t.SetIndex(L.b2_invalidParticleIndex),this.m_handleIndexBuffer.data[a]=null)}e[a]=L.b2_invalidParticleIndex}else{if(e[a]=t,a!==t){if(this.m_handleIndexBuffer.data){const e=this.m_handleIndexBuffer.data[a];e&&e.SetIndex(t),this.m_handleIndexBuffer.data[t]=e}this.m_flagsBuffer.data[t]=this.m_flagsBuffer.data[a],this.m_lastBodyContactStepBuffer.data&&(this.m_lastBodyContactStepBuffer.data[t]=this.m_lastBodyContactStepBuffer.data[a]),this.m_bodyContactCountBuffer.data&&(this.m_bodyContactCountBuffer.data[t]=this.m_bodyContactCountBuffer.data[a]),this.m_consecutiveContactStepsBuffer.data&&(this.m_consecutiveContactStepsBuffer.data[t]=this.m_consecutiveContactStepsBuffer.data[a]),this.m_positionBuffer.data[t].Copy(this.m_positionBuffer.data[a]),this.m_velocityBuffer.data[t].Copy(this.m_velocityBuffer.data[a]),this.m_groupBuffer[t]=this.m_groupBuffer[a],this.m_hasForce&&this.m_forceBuffer[t].Copy(this.m_forceBuffer[a]),this.m_staticPressureBuffer&&(this.m_staticPressureBuffer[t]=this.m_staticPressureBuffer[a]),this.m_depthBuffer&&(this.m_depthBuffer[t]=this.m_depthBuffer[a]),this.m_colorBuffer.data&&this.m_colorBuffer.data[t].Copy(this.m_colorBuffer.data[a]),this.m_userDataBuffer.data&&(this.m_userDataBuffer.data[t]=this.m_userDataBuffer.data[a]),this.m_expirationTimeBuffer.data&&(this.m_expirationTimeBuffer.data[t]=this.m_expirationTimeBuffer.data[a])}t++,i|=s}}const a=t=>t.index<0,s=t=>t.indexA<0||t.indexB<0,o=t=>t.index<0,n=t=>t.indexA<0||t.indexB<0,c=t=>t.indexA<0||t.indexB<0||t.indexC<0;for(let t=0;t<this.m_proxyBuffer.count;t++){const i=this.m_proxyBuffer.data[t];i.index=e[i.index]}this.m_proxyBuffer.RemoveIf(a);for(let t=0;t<this.m_contactBuffer.count;t++){const i=this.m_contactBuffer.data[t];i.indexA=e[i.indexA],i.indexB=e[i.indexB]}this.m_contactBuffer.RemoveIf(s);for(let t=0;t<this.m_bodyContactBuffer.count;t++){const i=this.m_bodyContactBuffer.data[t];i.index=e[i.index]}this.m_bodyContactBuffer.RemoveIf(o);for(let t=0;t<this.m_pairBuffer.count;t++){const i=this.m_pairBuffer.data[t];i.indexA=e[i.indexA],i.indexB=e[i.indexB]}this.m_pairBuffer.RemoveIf(n);for(let t=0;t<this.m_triadBuffer.count;t++){const i=this.m_triadBuffer.data[t];i.indexA=e[i.indexA],i.indexB=e[i.indexB],i.indexC=e[i.indexC]}if(this.m_triadBuffer.RemoveIf(c),this.m_indexByExpirationTimeBuffer.data){let t=0;for(let i=0;i<this.m_count;i++){const r=e[this.m_indexByExpirationTimeBuffer.data[i]];r!==L.b2_invalidParticleIndex&&(this.m_indexByExpirationTimeBuffer.data[t++]=r)}}for(let i=this.m_groupList;i;i=i.GetNext()){let r=t,a=0,s=!1;for(let t=i.m_firstIndex;t<i.m_lastIndex;t++){const i=e[t];i>=0?(r=Math.min(r,i),a=Math.max(a,i+1)):s=!0}r<a?(i.m_firstIndex=r,i.m_lastIndex=a,s&&i.m_groupFlags&E.b2ParticleGroupFlag.b2_solidParticleGroup&&this.SetGroupFlags(i,i.m_groupFlags|E.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth)):(i.m_firstIndex=0,i.m_lastIndex=0,i.m_groupFlags&E.b2ParticleGroupFlag.b2_particleGroupCanBeEmpty||this.SetGroupFlags(i,i.m_groupFlags|E.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed))}this.m_count=t,this.m_allParticleFlags=i,this.m_needsUpdateAllParticleFlags=!1;for(let t=this.m_groupList;t;){const e=t.GetNext();t.m_groupFlags&E.b2ParticleGroupFlag.b2_particleGroupWillBeDestroyed&&this.DestroyParticleGroup(t),t=e}}SolveLifetimes(t){this.m_timeElapsed=this.LifetimeToExpirationTime(t.dt);const e=this.GetQuantizedTimeElapsed(),i=this.m_expirationTimeBuffer.data,r=this.m_indexByExpirationTimeBuffer.data,a=this.GetParticleCount();this.m_expirationTimeBufferRequiresSorting&&(z(r,0,a,((t,e)=>{const r=i[t],a=i[e],s=r<=0;return s===a<=0?r>a:s})),this.m_expirationTimeBufferRequiresSorting=!1);for(let t=a-1;t>=0;--t){const a=r[t],s=i[a];if(e<s||s<=0)break;this.DestroyParticle(a)}}RotateBuffer(t,e,i){if(t!==e&&e!==i){if(Y(this.m_flagsBuffer.data,t,e,i),this.m_lastBodyContactStepBuffer.data&&Y(this.m_lastBodyContactStepBuffer.data,t,e,i),this.m_bodyContactCountBuffer.data&&Y(this.m_bodyContactCountBuffer.data,t,e,i),this.m_consecutiveContactStepsBuffer.data&&Y(this.m_consecutiveContactStepsBuffer.data,t,e,i),Y(this.m_positionBuffer.data,t,e,i),Y(this.m_velocityBuffer.data,t,e,i),Y(this.m_groupBuffer,t,e,i),this.m_hasForce&&Y(this.m_forceBuffer,t,e,i),this.m_staticPressureBuffer&&Y(this.m_staticPressureBuffer,t,e,i),this.m_depthBuffer&&Y(this.m_depthBuffer,t,e,i),this.m_colorBuffer.data&&Y(this.m_colorBuffer.data,t,e,i),this.m_userDataBuffer.data&&Y(this.m_userDataBuffer.data,t,e,i),this.m_handleIndexBuffer.data){Y(this.m_handleIndexBuffer.data,t,e,i);for(let e=t;e<i;++e){const t=this.m_handleIndexBuffer.data[e];t&&t.SetIndex(r(t.GetIndex()))}}if(this.m_expirationTimeBuffer.data){Y(this.m_expirationTimeBuffer.data,t,e,i);const a=this.GetParticleCount(),s=this.m_indexByExpirationTimeBuffer.data;for(let t=0;t<a;++t)s[t]=r(s[t])}for(let t=0;t<this.m_proxyBuffer.count;t++){const e=this.m_proxyBuffer.data[t];e.index=r(e.index)}for(let t=0;t<this.m_contactBuffer.count;t++){const e=this.m_contactBuffer.data[t];e.indexA=r(e.indexA),e.indexB=r(e.indexB)}for(let t=0;t<this.m_bodyContactBuffer.count;t++){const e=this.m_bodyContactBuffer.data[t];e.index=r(e.index)}for(let t=0;t<this.m_pairBuffer.count;t++){const e=this.m_pairBuffer.data[t];e.indexA=r(e.indexA),e.indexB=r(e.indexB)}for(let t=0;t<this.m_triadBuffer.count;t++){const e=this.m_triadBuffer.data[t];e.indexA=r(e.indexA),e.indexB=r(e.indexB),e.indexC=r(e.indexC)}for(let t=this.m_groupList;t;t=t.GetNext())t.m_firstIndex=r(t.m_firstIndex),t.m_lastIndex=r(t.m_lastIndex-1)+1}function r(r){return r<t?r:r<e?r+i-e:r<i?r+t-e:r}}GetCriticalVelocity(t){return this.m_particleDiameter*t.inv_dt}GetCriticalVelocitySquared(t){const e=this.GetCriticalVelocity(t);return e*e}GetCriticalPressure(t){return this.m_def.density*this.GetCriticalVelocitySquared(t)}GetParticleStride(){return L.b2_particleStride*this.m_particleDiameter}GetParticleMass(){const t=this.GetParticleStride();return this.m_def.density*t*t}GetParticleInvMass(){const t=this.m_inverseDiameter*(1/L.b2_particleStride);return this.m_inverseDensity*t*t}GetFixtureContactFilter(){return this.m_allParticleFlags&k.b2ParticleFlag.b2_fixtureContactFilterParticle?this.m_world.GetContactManager().m_contactFilter:null}GetParticleContactFilter(){return this.m_allParticleFlags&k.b2ParticleFlag.b2_particleContactFilterParticle?this.m_world.GetContactManager().m_contactFilter:null}GetFixtureContactListener(){return this.m_allParticleFlags&k.b2ParticleFlag.b2_fixtureContactListenerParticle?this.m_world.GetContactManager().m_contactListener:null}GetParticleContactListener(){return this.m_allParticleFlags&k.b2ParticleFlag.b2_particleContactListenerParticle?this.m_world.GetContactManager().m_contactListener:null}SetUserOverridableBuffer(t,e){t.data=e,t.userSuppliedCapacity=e.length}SetGroupFlags(t,e){const i=t.m_groupFlags;(i^e)&E.b2ParticleGroupFlag.b2_solidParticleGroup&&(e|=E.b2ParticleGroupFlag.b2_particleGroupNeedsUpdateDepth),i&~e&&(this.m_needsUpdateAllGroupFlags=!0),~this.m_allGroupFlags&e&&(e&E.b2ParticleGroupFlag.b2_solidParticleGroup&&(this.m_depthBuffer=this.RequestBuffer(this.m_depthBuffer)),this.m_allGroupFlags|=e),t.m_groupFlags=e}static BodyContactCompare(t,e){return t.index===e.index?t.weight>e.weight:t.index<e.index}RemoveSpuriousBodyContacts(){z(this.m_bodyContactBuffer.data,0,this.m_bodyContactBuffer.count,rt.BodyContactCompare);const t=rt.RemoveSpuriousBodyContacts_s_n,e=rt.RemoveSpuriousBodyContacts_s_pos,i=rt.RemoveSpuriousBodyContacts_s_normal;let r=-1,a=0;this.m_bodyContactBuffer.count=j(this.m_bodyContactBuffer.data,(s=>{if(s.index!==r&&(a=0,r=s.index),a++>3)return!0;const o=t.Copy(s.normal);o.Scale(this.m_particleDiameter*(1-s.weight));const n=M.b2Vec2.Add(this.m_positionBuffer.data[s.index],o,e);if(!s.fixture.TestPoint(n)){const t=s.fixture.GetShape().GetChildCount();for(let e=0;e<t;e++){const t=i;if((0,q.computeDistance)(s.fixture.GetShape(),s.fixture.GetBody().GetTransform(),n,t,e)<M.b2_linearSlop)return!1}return!0}return!1}),this.m_bodyContactBuffer.count)}DetectStuckParticle(t){this.m_stuckThreshold<=0||(++this.m_bodyContactCountBuffer.data[t],2===this.m_bodyContactCountBuffer.data[t]&&(++this.m_consecutiveContactStepsBuffer.data[t],this.m_consecutiveContactStepsBuffer.data[t]>this.m_stuckThreshold&&(this.m_stuckParticleBuffer.data[this.m_stuckParticleBuffer.Append()]=t)),this.m_lastBodyContactStepBuffer.data[t]=this.m_timestamp)}ValidateParticleIndex(t){return t>=0&&t<this.GetParticleCount()&&t!==L.b2_invalidParticleIndex}GetQuantizedTimeElapsed(){return Math.floor(this.m_timeElapsed/4294967296)}LifetimeToExpirationTime(t){return this.m_timeElapsed+Math.floor(t/this.m_def.lifetimeGranularity*4294967296)}ForceCanBeApplied(t){return!(t&k.b2ParticleFlag.b2_wallParticle)}PrepareForceBuffer(){if(!this.m_hasForce){for(let t=0;t<this.m_count;t++)this.m_forceBuffer[t].SetZero();this.m_hasForce=!0}}IsRigidGroup(t){return null!==t&&0!=(t.m_groupFlags&E.b2ParticleGroupFlag.b2_rigidParticleGroup)}GetLinearVelocity(t,e,i,r){return t&&this.IsRigidGroup(t)?t.GetLinearVelocityFromWorldPoint(i,r):r.Copy(this.m_velocityBuffer.data[e])}InitDampingParameter(t,e,i,r,a,s,o,n){t[0]=r>0?1/r:0,e[0]=a>0?1/a:0,i[0]=M.b2Vec2.Cross(M.b2Vec2.Subtract(o,s,M.b2Vec2.s_t0),n)}InitDampingParameterWithRigidGroupOrParticle(t,e,i,r,a,s,o,n){if(a&&r)this.InitDampingParameter(t,e,i,a.GetMass(),a.GetInertia(),a.GetCenter(),o,n);else{const r=this.m_flagsBuffer.data[s];this.InitDampingParameter(t,e,i,r&k.b2ParticleFlag.b2_wallParticle?0:this.GetParticleMass(),0,o,o,n)}}ComputeDampingImpulse(t,e,i,r,a,s,o){const n=t+e*i*i+r+a*s*s;return n>0?o/n:0}ApplyDamping(t,e,i,r,a,s,o,n){a&&r?(a.m_linearVelocity.AddScaled(o*t,n),a.m_angularVelocity+=o*i*e):this.m_velocityBuffer.data[s].AddScaled(o*t,n)}}o.b2ParticleSystem=rt,rt.xTruncBits=12,rt.yTruncBits=12,rt.tagBits=32,rt.yOffset=1<<rt.yTruncBits-1,rt.yShift=rt.tagBits-rt.yTruncBits,rt.xShift=rt.tagBits-rt.yTruncBits-rt.xTruncBits,rt.xScale=1<<rt.xShift,rt.xOffset=rt.xScale*(1<<rt.xTruncBits-1),rt.yMask=(1<<rt.yTruncBits)-1<<rt.yShift,rt.xMask=~rt.yMask,rt.DestroyParticlesInShape_s_aabb=new M.b2AABB,rt.CreateParticleGroup_s_transform=new M.b2Transform,rt.ComputeCollisionEnergy_s_v=new M.b2Vec2,rt.QueryShapeAABB_s_aabb=new M.b2AABB,rt.QueryPointAABB_s_aabb=new M.b2AABB,rt.RayCast_s_aabb=new M.b2AABB,rt.RayCast_s_p=new M.b2Vec2,rt.RayCast_s_v=new M.b2Vec2,rt.RayCast_s_n=new M.b2Vec2,rt.RayCast_s_point=new M.b2Vec2,rt.k_pairFlags=k.b2ParticleFlag.b2_springParticle,rt.k_triadFlags=k.b2ParticleFlag.b2_elasticParticle,rt.k_noPressureFlags=k.b2ParticleFlag.b2_powderParticle|k.b2ParticleFlag.b2_tensileParticle,rt.k_extraDampingFlags=k.b2ParticleFlag.b2_staticPressureParticle,rt.k_barrierWallFlags=k.b2ParticleFlag.b2_barrierParticle|k.b2ParticleFlag.b2_wallParticle,rt.CreateParticlesStrokeShapeForGroup_s_edge=new M.b2EdgeShape,rt.CreateParticlesStrokeShapeForGroup_s_d=new M.b2Vec2,rt.CreateParticlesStrokeShapeForGroup_s_p=new M.b2Vec2,rt.CreateParticlesFillShapeForGroup_s_aabb=new M.b2AABB,rt.CreateParticlesFillShapeForGroup_s_p=new M.b2Vec2,rt.UpdatePairsAndTriads_s_dab=new M.b2Vec2,rt.UpdatePairsAndTriads_s_dbc=new M.b2Vec2,rt.UpdatePairsAndTriads_s_dca=new M.b2Vec2,rt.AddContact_s_d=new M.b2Vec2,rt.UpdateBodyContacts_s_aabb=new M.b2AABB,rt.Solve_s_subStep=M.b2TimeStep.Create(),rt.SolveCollision_s_aabb=new M.b2AABB,rt.SolveGravity_s_gravity=new M.b2Vec2,rt.SolveBarrier_s_aabb=new M.b2AABB,rt.SolveBarrier_s_va=new M.b2Vec2,rt.SolveBarrier_s_vb=new M.b2Vec2,rt.SolveBarrier_s_pba=new M.b2Vec2,rt.SolveBarrier_s_vba=new M.b2Vec2,rt.SolveBarrier_s_vc=new M.b2Vec2,rt.SolveBarrier_s_pca=new M.b2Vec2,rt.SolveBarrier_s_vca=new M.b2Vec2,rt.SolveBarrier_s_qba=new M.b2Vec2,rt.SolveBarrier_s_qca=new M.b2Vec2,rt.SolveBarrier_s_dv=new M.b2Vec2,rt.SolveBarrier_s_f=new M.b2Vec2,rt.SolvePressure_s_f=new M.b2Vec2,rt.SolveDamping_s_v=new M.b2Vec2,rt.SolveDamping_s_f=new M.b2Vec2,rt.SolveRigidDamping_s_t0=new M.b2Vec2,rt.SolveRigidDamping_s_t1=new M.b2Vec2,rt.SolveRigidDamping_s_p=new M.b2Vec2,rt.SolveRigidDamping_s_v=new M.b2Vec2,rt.SolveExtraDamping_s_v=new M.b2Vec2,rt.SolveExtraDamping_s_f=new M.b2Vec2,rt.SolveRigid_s_position=new M.b2Vec2,rt.SolveRigid_s_rotation=new M.b2Rot,rt.SolveRigid_s_transform=new M.b2Transform,rt.SolveRigid_s_velocityTransform=new M.b2Transform,rt.SolveElastic_s_pa=new M.b2Vec2,rt.SolveElastic_s_pb=new M.b2Vec2,rt.SolveElastic_s_pc=new M.b2Vec2,rt.SolveElastic_s_r=new M.b2Rot,rt.SolveElastic_s_t0=new M.b2Vec2,rt.SolveSpring_s_pa=new M.b2Vec2,rt.SolveSpring_s_pb=new M.b2Vec2,rt.SolveSpring_s_d=new M.b2Vec2,rt.SolveSpring_s_f=new M.b2Vec2,rt.SolveTensile_s_weightedNormal=new M.b2Vec2,rt.SolveTensile_s_s=new M.b2Vec2,rt.SolveTensile_s_f=new M.b2Vec2,rt.SolveViscous_s_v=new M.b2Vec2,rt.SolveViscous_s_f=new M.b2Vec2,rt.SolveRepulsive_s_f=new M.b2Vec2,rt.SolvePowder_s_f=new M.b2Vec2,rt.SolveSolid_s_f=new M.b2Vec2,rt.RemoveSpuriousBodyContacts_s_n=new M.b2Vec2,rt.RemoveSpuriousBodyContacts_s_pos=new M.b2Vec2,rt.RemoveSpuriousBodyContacts_s_normal=new M.b2Vec2;class at{constructor(){this.index=L.b2_invalidParticleIndex,this.tag=0}static CompareProxyProxy(t,e){return t.tag<e.tag}static CompareTagProxy(t,e){return t<e.tag}static CompareProxyTag(t,e){return t.tag<e}}o.b2ParticleSystem_Proxy=at;class st{constructor(t,e,i,r,a){this.m_system=t,this.m_xLower=(e&rt.xMask)>>>0,this.m_xUpper=(i&rt.xMask)>>>0,this.m_yLower=(e&rt.yMask)>>>0,this.m_yUpper=(i&rt.yMask)>>>0,this.m_first=r,this.m_last=a}GetNext(){for(;this.m_first<this.m_last;){const t=(this.m_system.m_proxyBuffer.data[this.m_first].tag&rt.xMask)>>>0;if(t>=this.m_xLower&&t<=this.m_xUpper)return this.m_system.m_proxyBuffer.data[this.m_first++].index;this.m_first++}return L.b2_invalidParticleIndex}}o.b2ParticleSystem_InsideBoundsEnumerator=st;class ot{constructor(){this.next=null,this.count=0,this.index=0}}o.b2ParticleSystem_ParticleListNode=ot;class nt{Allocate(t,e){return e}Clear(){}GetCount(){return 0}Invalidate(t){}GetValidBuffer(){return[]}GetBuffer(){return[]}SetCount(t){}}o.b2ParticleSystem_FixedSetAllocator=nt;o.b2ParticleSystem_FixtureParticle=class{constructor(t,e){this.second=L.b2_invalidParticleIndex,this.first=t,this.second=e}};class ct extends nt{Initialize(t,e){}Find(t){return L.b2_invalidParticleIndex}}o.b2ParticleSystem_FixtureParticleSet=ct;o.b2ParticleSystem_ParticlePair=class{constructor(t,e){this.first=L.b2_invalidParticleIndex,this.second=L.b2_invalidParticleIndex,this.first=t,this.second=e}};class lt extends nt{Initialize(t,e){}Find(t){return L.b2_invalidParticleIndex}}o.b2ParticlePairSet=lt;class ut{IsNecessary(t){return!0}ShouldCreatePair(t,e){return!0}ShouldCreateTriad(t,e,i){return!0}}o.b2ParticleSystem_ConnectionFilter=ut;class ft extends ut{constructor(t){super(),this.m_threshold=0,this.m_threshold=t}ShouldCreatePair(t,e){return t<this.m_threshold&&this.m_threshold<=e||e<this.m_threshold&&this.m_threshold<=t}ShouldCreateTriad(t,e,i){return(t<this.m_threshold||e<this.m_threshold||i<this.m_threshold)&&(this.m_threshold<=t||this.m_threshold<=e||this.m_threshold<=i)}}o.b2ParticleSystem_JoinParticleGroupsFilter=ft;class mt extends M.b2Shape{constructor(t,e=t.length){super(M.b2ShapeType.e_unknown,0),this.m_shapeCount=0,this.m_shapes=t,this.m_shapeCount=e}Clone(){throw new Error}GetChildCount(){return 1}TestPoint(t,e){for(let i=0;i<this.m_shapeCount;i++)if(this.m_shapes[i].TestPoint(t,e))return!0;return!1}RayCast(t,e,i,r){return!1}ComputeAABB(t,e,i){const r=new M.b2AABB;t.lowerBound.x=+M.b2_maxFloat,t.lowerBound.y=+M.b2_maxFloat,t.upperBound.x=-M.b2_maxFloat,t.upperBound.y=-M.b2_maxFloat;for(let i=0;i<this.m_shapeCount;i++){const a=this.m_shapes[i].GetChildCount();for(let s=0;s<a;s++){const a=r;this.m_shapes[i].ComputeAABB(a,e,s),t.Combine1(a)}}}ComputeMass(t,e){}SetupDistanceProxy(t,e){}Draw(){}}o.b2ParticleSystem_CompositeShape=mt;class ht extends ut{constructor(t){super(),this.m_flagsBuffer=t}IsNecessary(t){return 0!=(this.m_flagsBuffer.data[t]&k.b2ParticleFlag.b2_reactiveParticle)}}o.b2ParticleSystem_ReactiveFilter=ht;const _t=t,dt=a,pt=o;(0,_t.b2_augment)(_t.b2World,{Create(t,e){const i=t(e);return i.m_particleSystemList=null,i}}),Object.assign(_t.b2World.prototype,{CreateParticleSystem(t){(0,_t.b2Assert)(!this.IsLocked());const e=new pt.b2ParticleSystem(t,this);return e.m_prev=null,e.m_next=this.m_particleSystemList,this.m_particleSystemList&&(this.m_particleSystemList.m_prev=e),this.m_particleSystemList=e,e},DestroyParticleSystem(t){(0,_t.b2Assert)(!this.IsLocked()),t.m_prev&&(t.m_prev.m_next=t.m_next),t.m_next&&(t.m_next.m_prev=t.m_prev),t===this.m_particleSystemList&&(this.m_particleSystemList=t.m_next)},GetParticleSystemList(){return this.m_particleSystemList},CalculateReasonableParticleIterations(t){return null===this.m_particleSystemList?1:(0,dt.b2CalculateParticleIterations)(this.GetGravity().Length(),function(t){let e=_t.b2_maxFloat;for(let i=t.GetParticleSystemList();null!==i;i=i.m_next)e=Math.min(e,i.GetRadius());return e}(this),t)}}),(0,_t.b2_augment)(_t.b2World.prototype,{CreateBody(t,e={}){const i=t(e);return i.m_xf0=new _t.b2Transform,i},Solve(t,e){for(let t=this.m_particleSystemList;t;t=t.m_next)t.Solve(e);for(let t=this.GetBodyList();t;t=t.GetNext())t.m_xf0.Copy(t.GetTransform());t(e)}});const Bt=t;(0,Bt.b2_augment)(Bt.b2Body.prototype,{SetTransformXY(t,e,i,r){t(e,i,r),this.m_xf0.Copy(this.GetTransform())}});const bt=t;Object.assign(bt.b2DestructionListener.prototype,{SayGoodbyeParticleGroup(){},SayGoodbyeParticle(){}}),Object.assign(bt.b2ContactFilter.prototype,{SayGoodbyeParticleGroup:()=>!0,SayGoodbyeParticle:()=>!0}),Object.assign(bt.b2ContactListener.prototype,{BeginContactFixtureParticle(){},EndContactFixtureParticle(){},BeginContactParticleParticle(){},EndContactParticleParticle(){}});const yt=t;(0,yt.b2_augment)(yt.b2TimeStep,{Create(t){const e=t();return e.config.particleIterations=0,e}});var Pt={};function gt(t,e){const i=e.GetParticleCount();if(i){const r=e.GetRadius(),a=e.GetPositionBuffer();if(e.m_colorBuffer.data){const s=e.GetColorBuffer();t.DrawParticles(a,r,s,i)}else t.DrawParticles(a,r,null,i)}}Object.defineProperty(Pt,"__esModule",{value:!0}),Pt.DrawParticleSystems=void 0,Pt.DrawParticleSystems=function(t,e){for(let i=e.GetParticleSystemList();i;i=i.m_next)gt(t,i)},function(t){var e=i&&i.__createBinding||(Object.create?function(t,e,i,r){void 0===r&&(r=i);var a=Object.getOwnPropertyDescriptor(e,i);a&&!("get"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,r,a)}:function(t,e,i,r){void 0===r&&(r=i),t[r]=e[i]}),r=i&&i.__exportStar||function(t,i){for(var r in t)"default"===r||Object.prototype.hasOwnProperty.call(i,r)||e(i,t,r)};Object.defineProperty(t,"__esModule",{value:!0}),r(a,t),r(n,t),r(o,t),r(Pt,t)}(r);var xt=r.DrawParticleSystems,St=r.__esModule,Ct=r.b2CalculateParticleIterations,vt=r.b2GrowableBuffer,Gt=r.b2ParticleBodyContact,Ft=r.b2ParticleContact,Vt=r.b2ParticleDef,wt=r.b2ParticleFlag,At=r.b2ParticleGroup,It=r.b2ParticleGroupDef,Dt=r.b2ParticleGroupFlag,Tt=r.b2ParticleHandle,Rt=r.b2ParticlePair,Mt=r.b2ParticlePairSet,Lt=r.b2ParticleSystem,kt=r.b2ParticleSystemDef,Et=r.b2ParticleSystem_CompositeShape,Ut=r.b2ParticleSystem_ConnectionFilter,qt=r.b2ParticleSystem_FixedSetAllocator,Nt=r.b2ParticleSystem_FixtureParticle,Ot=r.b2ParticleSystem_FixtureParticleSet,Wt=r.b2ParticleSystem_InsideBoundsEnumerator,zt=r.b2ParticleSystem_JoinParticleGroupsFilter,Xt=r.b2ParticleSystem_ParticleListNode,jt=r.b2ParticleSystem_ParticlePair,Qt=r.b2ParticleSystem_Proxy,Zt=r.b2ParticleSystem_ReactiveFilter,Yt=r.b2ParticleSystem_UserOverridableBuffer,Ht=r.b2ParticleTriad;export{xt as DrawParticleSystems,St as __esModule,Ct as b2CalculateParticleIterations,vt as b2GrowableBuffer,Gt as b2ParticleBodyContact,Ft as b2ParticleContact,Vt as b2ParticleDef,wt as b2ParticleFlag,At as b2ParticleGroup,It as b2ParticleGroupDef,Dt as b2ParticleGroupFlag,Tt as b2ParticleHandle,Rt as b2ParticlePair,Mt as b2ParticlePairSet,Lt as b2ParticleSystem,kt as b2ParticleSystemDef,Et as b2ParticleSystem_CompositeShape,Ut as b2ParticleSystem_ConnectionFilter,qt as b2ParticleSystem_FixedSetAllocator,Nt as b2ParticleSystem_FixtureParticle,Ot as b2ParticleSystem_FixtureParticleSet,Wt as b2ParticleSystem_InsideBoundsEnumerator,zt as b2ParticleSystem_JoinParticleGroupsFilter,Xt as b2ParticleSystem_ParticleListNode,jt as b2ParticleSystem_ParticlePair,Qt as b2ParticleSystem_Proxy,Zt as b2ParticleSystem_ReactiveFilter,Yt as b2ParticleSystem_UserOverridableBuffer,Ht as b2ParticleTriad,r as default};
//# sourceMappingURL=/sm/eb273fbb2e33e846795392c9c1aba8aed5520fa76992a4215c131b9bd53e7812.map