var gl;var u_Color;var u_ModelProjMatrix;window.onload=main;function setTransomsAndColors(x,y,width,height,color){gl.uniform3f(u_Color,color[0],color[1],color[2]);var modelMatrix=mat4.create();mat4.translate(modelMatrix,modelMatrix,vec3.fromValues(x,y,0));mat4.scale(modelMatrix,modelMatrix,vec3.fromValues(width,height,1));var projMatrix=mat4.create();mat4.ortho(projMatrix,-10,10,-10,10,1,-1);var modelProjMatrix=mat4.create();mat4.multiply(modelProjMatrix,projMatrix,modelMatrix);gl.uniformMatrix4fv(u_ModelProjMatrix,false,modelProjMatrix)}function drawTriangle(x,y,width,height){setTransomsAndColors(x,y,width,height,[.356,.682,.4]);gl.drawArrays(gl.TRIANGLES,0,3)}function drawRect(x,y,width,height){setTransomsAndColors(x,y,width,height,[.635,.45,.125]);gl.drawArrays(gl.TRIANGLE_STRIP,3,4)}function main(){var vertexShaderSource=["attribute vec2 a_Position;","uniform mat4 u_ModelProjMatrix;","void main()","{","    gl_Position = u_ModelProjMatrix * vec4(a_Position, 0.0, 1.0);","}"].join("\n");var fragmentShaderSource=["precision mediump float;","uniform vec3 u_Color;","void main()","{","    gl_FragColor = vec4(u_Color, 1.0);","}"].join("\n");var canvas=document.getElementById("renderCanvas");gl=canvas.getContext("webgl");gl.viewport(0,0,canvas.clientWidth,canvas.clientHeight);var vShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vShader,vertexShaderSource);gl.compileShader(vShader);var fShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fShader,fragmentShaderSource);gl.compileShader(fShader);var program=gl.createProgram();gl.attachShader(program,vShader);gl.attachShader(program,fShader);gl.linkProgram(program);gl.useProgram(program);var vertices=new Float32Array([-.5,0,.5,0,0,1,-.5,.5,-.5,-.5,.5,.5,.5,-.5]);var vbo=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,vbo);gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);var a_Position=gl.getAttribLocation(program,"a_Position");gl.vertexAttribPointer(a_Position,2,gl.FLOAT,false,0,0);gl.enableVertexAttribArray(a_Position);u_Color=gl.getUniformLocation(program,"u_Color");u_ModelProjMatrix=gl.getUniformLocation(program,"u_ModelProjMatrix");gl.clearColor(.898,.984,.905,1);gl.clear(gl.COLOR_BUFFER_BIT);drawTriangle(0,5,6,3);drawTriangle(0,2,10,4);drawTriangle(0,-2,12,6);drawRect(0,-3.5,2,3)}